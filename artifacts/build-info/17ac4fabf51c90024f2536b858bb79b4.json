{
	"id": "17ac4fabf51c90024f2536b858bb79b4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ghosper-NFT-Staking-MasterChef.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { codehash := extcodehash(account) }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract NftStaking is Ownable {\r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    //Info each user\r\n    struct UserInfo {\r\n        uint256 amount;\r\n        uint256 rewardDebt;\r\n        uint256 pendingAmount;\r\n        uint256 lastStakedTime;\r\n    }\r\n    IERC721 public immutable nftToken;\r\n    IBEP20 public immutable ghspToken;\r\n    uint256 public lastRewardBlock;\r\n    uint256 public accGHSPPerShare;\r\n    uint256 public rewardPerBlock;\r\n    address public feeWallet;\r\n    uint256 public harvestFee;\r\n    uint256 public totalStakedAmount;\r\n    uint256 private _rewardBalance;\r\n    mapping(uint256 => address) allStakes; \r\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\r\n    mapping(uint256 => uint256) private _ownedTokensIndex;\r\n\r\n    // Info of each user that stakes LP tokens.\r\n    mapping (address => UserInfo) public userInfo;\r\n\r\n    event Staked(address staker, uint256[] tokenId);\r\n    event UnStaked(address staker, uint256[] tokenId);\r\n    event Harvest(address staker, uint256 amount, uint256 harvestFee);\r\n    event DepositReward(address indexed user, uint256 amount);\r\n    event SetFeeWallet(address indexed _feeWallet);\r\n    event AddUnStakeFee(uint256 _index, uint256 _minDays, uint256 _feePercent);\r\n    event SetHarvestFee(uint256 _harvestFee);\r\n\r\n    constructor(\r\n        IERC721 _nftToken,\r\n        IBEP20 _ghspToken,\r\n        uint256 _rewardPerBlock,\r\n        address _feeWallet\r\n    ) {\r\n        nftToken = _nftToken;\r\n        ghspToken = _ghspToken;\r\n        rewardPerBlock = _rewardPerBlock;\r\n        feeWallet = _feeWallet;\r\n    }\r\n    function setFeeWallet(address _feeWallet) external onlyOwner {\r\n        feeWallet = _feeWallet;\r\n        emit SetFeeWallet(feeWallet);\r\n    }\r\n\r\n    function setHarvestFee(uint256 _feePercent) external onlyOwner {\r\n        require(_feePercent <= 40, \"setHarvestFee: feePercent > 40\");\r\n        harvestFee = _feePercent;\r\n        emit SetHarvestFee(_feePercent);\r\n    }\r\n\r\n    function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {\r\n        return _to.sub(_from);\r\n    }\r\n\r\n    function getRewardBalance() external view returns (uint256) {\r\n        if (block.number > lastRewardBlock && totalStakedAmount != 0) {\r\n            uint256 multiplier = getMultiplier(lastRewardBlock, block.number);\r\n            uint256 reward = multiplier.mul(rewardPerBlock);\r\n            return _rewardBalance.sub(reward);\r\n        }\r\n        else {\r\n            return _rewardBalance;\r\n        }\r\n    }\r\n\r\n    function depositReward(uint256 _amount) external onlyOwner {\r\n        ghspToken.safeTransferFrom(msg.sender, address(this), _amount);\r\n        emit DepositReward(msg.sender, _amount);\r\n        _rewardBalance = _rewardBalance.add(_amount);\r\n    }\r\n\r\n    function updateStatus() private {\r\n        if (block.number <= lastRewardBlock) {\r\n            return;\r\n        }\r\n        if (totalStakedAmount == 0) {\r\n            lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(lastRewardBlock, block.number);\r\n        uint256 reward = multiplier.mul(rewardPerBlock);\r\n        if (_rewardBalance == 0) {\r\n            lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        if (_rewardBalance < reward) {\r\n            accGHSPPerShare = accGHSPPerShare.add(_rewardBalance.mul(1e12).div(totalStakedAmount));\r\n            _rewardBalance = 0;\r\n        } else {\r\n            _rewardBalance = _rewardBalance.sub(reward);\r\n            accGHSPPerShare = accGHSPPerShare.add(reward.mul(1e12).div(totalStakedAmount));\r\n        }\r\n        lastRewardBlock = block.number;\r\n    }\r\n    function stake(uint256[] calldata tokenIds) external {\r\n        require(tokenIds.length > 0, \"NFT Staking: Empty Array\");\r\n        for(uint256 i = 0; i < tokenIds.length; i ++){\r\n            require(nftToken.ownerOf(tokenIds[i]) == msg.sender, \"NFT Staking: not owner of token.\");\r\n            require(_ownedTokensIndex[tokenIds[i]] == 0, \"Nft Unstaking: token not staked or incorrect token owner.\");\r\n            for(uint256 j = i + 1; j < tokenIds.length; j ++){\r\n                require(tokenIds[i] != tokenIds[j], \"NFT Staking: duplicate token ids in input params.\");\r\n            }\r\n        }\r\n        updateStatus();\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt);\r\n            user.pendingAmount = user.pendingAmount.add(pending);\r\n        }\r\n        uint256 tokenAmount = tokenIds.length;\r\n        totalStakedAmount = totalStakedAmount.add(tokenAmount);\r\n        \r\n        for(uint256 i = 0; i < tokenIds.length; i ++){\r\n            _ownedTokens[msg.sender][user.amount + i] = tokenIds[i];\r\n            _ownedTokensIndex[tokenIds[i]] = user.amount + i;\r\n            nftToken.transferFrom(msg.sender, address(this), tokenIds[i]);\r\n        }\r\n        user.amount = user.amount.add(tokenAmount);\r\n        user.rewardDebt = user.amount.mul(accGHSPPerShare).div(1e12);\r\n        user.lastStakedTime = block.timestamp;\r\n        emit Staked(msg.sender, tokenIds);\r\n    }\r\n\r\n    function unstake(uint256[] calldata tokenIds) external {\r\n        require(tokenIds.length > 0, \"NFT Staking: Empty Array\");\r\n        for(uint256 i = 0; i < tokenIds.length; i ++){\r\n            require(_ownedTokensIndex[tokenIds[i]] != 0, \"Nft Unstaking: token not staked or incorrect token owner.\");\r\n            for(uint256 j = i + 1; j < tokenIds.length; j ++){\r\n                require(tokenIds[i] != tokenIds[j], \"NFT Staking: duplicate token ids in input params.\");\r\n            }\r\n        }\r\n\r\n        updateStatus();\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        uint256 pending = user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt);\r\n        if (ghspToken.balanceOf(address(this)) < pending) {\r\n            pending = ghspToken.balanceOf(address(this));\r\n        }\r\n        user.pendingAmount = user.pendingAmount.add(pending);\r\n        uint256 tokenAmount = tokenIds.length;\r\n        for(uint256 i = 0; i < tokenAmount; i ++){\r\n            if(_ownedTokensIndex[tokenIds[i]] != (user.amount - i - 1)){\r\n                _ownedTokens[msg.sender][_ownedTokensIndex[tokenIds[i]]] = _ownedTokens[msg.sender][(user.amount - i - 1)]; \r\n                _ownedTokensIndex[_ownedTokens[msg.sender][(user.amount - i - 1)]] = _ownedTokensIndex[tokenIds[i]]; \r\n            }\r\n            delete _ownedTokensIndex[tokenIds[i]];\r\n            delete _ownedTokens[msg.sender][(user.amount - i - 1)];\r\n            nftToken.transferFrom(address(this), msg.sender, tokenIds[i]);\r\n        }\r\n        totalStakedAmount = totalStakedAmount.sub(tokenAmount);\r\n        user.amount = user.amount.sub(tokenAmount);\r\n        user.rewardDebt = user.amount.mul(accGHSPPerShare).div(1e12);\r\n        emit UnStaked(msg.sender, tokenIds);\r\n    }\r\n\r\n    function getPending(address _user) public view returns (uint256) {\r\n        uint256 pending = _getPending(_user);\r\n        uint256 _harvestFee = pending.mul(harvestFee).div(100);\r\n        return pending - _harvestFee;\r\n    }\r\n    \r\n    function _getPending(address _user) private view returns (uint256) {\r\n        UserInfo storage user = userInfo[_user];\r\n        uint256 acc = accGHSPPerShare;\r\n        if (block.number > lastRewardBlock && totalStakedAmount != 0) {\r\n            uint256 multiplier = getMultiplier(lastRewardBlock, block.number);\r\n            uint256 reward = multiplier.mul(rewardPerBlock);\r\n            acc = acc.add(reward.mul(1e12).div(totalStakedAmount));\r\n        }\r\n        return user.amount.mul(acc).div(1e12).sub(user.rewardDebt).add(user.pendingAmount);\r\n    }\r\n\r\n    function harvest() external {\r\n        uint256 rewardAmount = _getPending(msg.sender);\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        uint256 _harvestFee = rewardAmount.mul(harvestFee).div(100);\r\n        uint256 amount = rewardAmount - _harvestFee;\r\n        if (ghspToken.balanceOf(address(this)) < amount) {\r\n            amount = ghspToken.balanceOf(address(this));\r\n        }\r\n        ghspToken.safeTransfer(msg.sender, amount);\r\n\r\n        if (ghspToken.balanceOf(address(this)) < _harvestFee) {\r\n            _harvestFee = ghspToken.balanceOf(address(this));\r\n        }\r\n        ghspToken.safeTransfer(feeWallet, _harvestFee);\r\n        updateStatus();\r\n        user.pendingAmount = 0;\r\n        user.rewardDebt = user.amount.mul(accGHSPPerShare).div(1e12);\r\n        emit Harvest(msg.sender, amount, _harvestFee);\r\n    }\r\n    function balanceOfStakes() external view returns (uint256[] memory){\r\n        uint256[] memory stakes = new uint256[](userInfo[msg.sender].amount);\r\n        for(uint256 i = 0; i < userInfo[msg.sender].amount; i ++){\r\n            stakes[i] = _ownedTokens[msg.sender][i];\r\n        }\r\n        return stakes;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ghosper-NFT-Staking-MasterChef.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16344:22428  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16344:22428  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122056d5feaec38736964f914f665f30a8f6cc644e7d388339b1b4d7888db7ce124364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056d5feaec38736964f914f665f30a8f6cc644e7d388339b1b4d7888db7ce124364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xD5 INVALID 0xAE 0xC3 DUP8 CALLDATASIZE SWAP7 0x4F SWAP2 0x4F PUSH7 0x5F30A8F6CC644E PUSH30 0x388339B1B4D7888DB7CE124364736F6C6343000807003300000000000000 ",
							"sourceMap": "16344:6084:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056d5feaec38736964f914f665f30a8f6cc644e7d388339b1b4d7888db7ce124364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xD5 INVALID 0xAE 0xC3 DUP8 CALLDATASIZE SWAP7 0x4F SWAP2 0x4F PUSH7 0x5F30A8F6CC644E PUSH30 0x388339B1B4D7888DB7CE124364736F6C6343000807003300000000000000 ",
							"sourceMap": "16344:6084:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122056d5feaec38736964f914f665f30a8f6cc644e7d388339b1b4d7888db7ce124364736f6c63430008070033",
									".code": [
										{
											"begin": 16344,
											"end": 22428,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xa0361a0e2fa08944a4db8137a7b44d0414d03a61a931c69310ff61b63613ca09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccb29eb746305ea0494e61e7d85027c4f5347fb9105d637d0323268ad4b1550b\",\"dweb:/ipfs/QmbPiJBdimZCSfbtxR1B11k5RYHDiVrsXBX7KPsCgqY6Zg\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xa0361a0e2fa08944a4db8137a7b44d0414d03a61a931c69310ff61b63613ca09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccb29eb746305ea0494e61e7d85027c4f5347fb9105d637d0323268ad4b1550b\",\"dweb:/ipfs/QmbPiJBdimZCSfbtxR1B11k5RYHDiVrsXBX7KPsCgqY6Zg\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xa0361a0e2fa08944a4db8137a7b44d0414d03a61a931c69310ff61b63613ca09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccb29eb746305ea0494e61e7d85027c4f5347fb9105d637d0323268ad4b1550b\",\"dweb:/ipfs/QmbPiJBdimZCSfbtxR1B11k5RYHDiVrsXBX7KPsCgqY6Zg\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xa0361a0e2fa08944a4db8137a7b44d0414d03a61a931c69310ff61b63613ca09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccb29eb746305ea0494e61e7d85027c4f5347fb9105d637d0323268ad4b1550b\",\"dweb:/ipfs/QmbPiJBdimZCSfbtxR1B11k5RYHDiVrsXBX7KPsCgqY6Zg\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xa0361a0e2fa08944a4db8137a7b44d0414d03a61a931c69310ff61b63613ca09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccb29eb746305ea0494e61e7d85027c4f5347fb9105d637d0323268ad4b1550b\",\"dweb:/ipfs/QmbPiJBdimZCSfbtxR1B11k5RYHDiVrsXBX7KPsCgqY6Zg\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NftStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "_nftToken",
									"type": "address"
								},
								{
									"internalType": "contract IBEP20",
									"name": "_ghspToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_feeWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_minDays",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_feePercent",
									"type": "uint256"
								}
							],
							"name": "AddUnStakeFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "harvestFee",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_feeWallet",
									"type": "address"
								}
							],
							"name": "SetFeeWallet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_harvestFee",
									"type": "uint256"
								}
							],
							"name": "SetHarvestFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "tokenId",
									"type": "uint256[]"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "tokenId",
									"type": "uint256[]"
								}
							],
							"name": "UnStaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "accGHSPPerShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balanceOfStakes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depositReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getPending",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ghspToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvestFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRewardBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftToken",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeWallet",
									"type": "address"
								}
							],
							"name": "setFeeWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_feePercent",
									"type": "uint256"
								}
							],
							"name": "setHarvestFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "pendingAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastStakedTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":27968:36858  contract NftStaking is Ownable {\r... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29288:29574  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":4790:4822  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":4809:4821  _msgSender() */\n  tag_8\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":4809:4819  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":4809:4821  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":4790:4808  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":4790:4822  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29448:29457  _nftToken */\n  dup4\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29437:29457  nftToken = _nftToken */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29480:29490  _ghspToken */\n  dup3\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29468:29490  ghspToken = _ghspToken */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29518:29533  _rewardPerBlock */\n  dup2\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29501:29515  rewardPerBlock */\n  0x03\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29501:29533  rewardPerBlock = _rewardPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29556:29566  _feeWallet */\n  dup1\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29544:29553  feeWallet */\n  0x04\n  0x00\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29544:29566  feeWallet = _feeWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29288:29574  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":27968:36858  contract NftStaking is Ownable {\r... */\n  jump(tag_12)\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":3751:3849  function _msgSender() internal view virtual returns (address) {\r... */\ntag_9:\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":3804:3811  address */\n  0x00\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":3831:3841  msg.sender */\n  caller\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":3824:3841  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":3751:3849  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6181:6372  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_10:\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6255:6271  address oldOwner */\n  0x00\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6274:6280  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6255:6280  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6300:6308  newOwner */\n  dup2\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6291:6297  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6291:6308  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6355:6363  newOwner */\n  dup2\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6324:6364  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6345:6353  oldOwner */\n  dup2\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6324:6364  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6244:6372  {\r... */\n  pop\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6181:6372  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_16:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_18\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:327   */\ntag_20:\n    /* \"#utility.yul\":227:232   */\n  0x00\n    /* \"#utility.yul\":258:264   */\n  dup2\n    /* \"#utility.yul\":252:265   */\n  mload\n    /* \"#utility.yul\":243:265   */\n  swap1\n  pop\n    /* \"#utility.yul\":274:321   */\n  tag_22\n    /* \"#utility.yul\":315:320   */\n  dup2\n    /* \"#utility.yul\":274:321   */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":156:327   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":333:508   */\ntag_24:\n    /* \"#utility.yul\":406:411   */\n  0x00\n    /* \"#utility.yul\":437:443   */\n  dup2\n    /* \"#utility.yul\":431:444   */\n  mload\n    /* \"#utility.yul\":422:444   */\n  swap1\n  pop\n    /* \"#utility.yul\":453:502   */\n  tag_26\n    /* \"#utility.yul\":496:501   */\n  dup2\n    /* \"#utility.yul\":453:502   */\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":333:508   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":514:657   */\ntag_28:\n    /* \"#utility.yul\":571:576   */\n  0x00\n    /* \"#utility.yul\":602:608   */\n  dup2\n    /* \"#utility.yul\":596:609   */\n  mload\n    /* \"#utility.yul\":587:609   */\n  swap1\n  pop\n    /* \"#utility.yul\":618:651   */\n  tag_30\n    /* \"#utility.yul\":645:650   */\n  dup2\n    /* \"#utility.yul\":618:651   */\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":514:657   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":663:1543   */\ntag_3:\n    /* \"#utility.yul\":790:796   */\n  0x00\n    /* \"#utility.yul\":798:804   */\n  dup1\n    /* \"#utility.yul\":806:812   */\n  0x00\n    /* \"#utility.yul\":814:820   */\n  dup1\n    /* \"#utility.yul\":863:866   */\n  0x80\n    /* \"#utility.yul\":851:860   */\n  dup6\n    /* \"#utility.yul\":842:849   */\n  dup8\n    /* \"#utility.yul\":838:861   */\n  sub\n    /* \"#utility.yul\":834:867   */\n  slt\n    /* \"#utility.yul\":831:951   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":870:949   */\n  tag_34\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":831:951   */\ntag_33:\n    /* \"#utility.yul\":990:991   */\n  0x00\n    /* \"#utility.yul\":1015:1095   */\n  tag_36\n    /* \"#utility.yul\":1087:1094   */\n  dup8\n    /* \"#utility.yul\":1078:1084   */\n  dup3\n    /* \"#utility.yul\":1067:1076   */\n  dup9\n    /* \"#utility.yul\":1063:1085   */\n  add\n    /* \"#utility.yul\":1015:1095   */\n  tag_24\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1005:1095   */\n  swap5\n  pop\n    /* \"#utility.yul\":961:1105   */\n  pop\n    /* \"#utility.yul\":1144:1146   */\n  0x20\n    /* \"#utility.yul\":1170:1248   */\n  tag_37\n    /* \"#utility.yul\":1240:1247   */\n  dup8\n    /* \"#utility.yul\":1231:1237   */\n  dup3\n    /* \"#utility.yul\":1220:1229   */\n  dup9\n    /* \"#utility.yul\":1216:1238   */\n  add\n    /* \"#utility.yul\":1170:1248   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1160:1248   */\n  swap4\n  pop\n    /* \"#utility.yul\":1115:1258   */\n  pop\n    /* \"#utility.yul\":1297:1299   */\n  0x40\n    /* \"#utility.yul\":1323:1387   */\n  tag_38\n    /* \"#utility.yul\":1379:1386   */\n  dup8\n    /* \"#utility.yul\":1370:1376   */\n  dup3\n    /* \"#utility.yul\":1359:1368   */\n  dup9\n    /* \"#utility.yul\":1355:1377   */\n  add\n    /* \"#utility.yul\":1323:1387   */\n  tag_28\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1313:1387   */\n  swap3\n  pop\n    /* \"#utility.yul\":1268:1397   */\n  pop\n    /* \"#utility.yul\":1436:1438   */\n  0x60\n    /* \"#utility.yul\":1462:1526   */\n  tag_39\n    /* \"#utility.yul\":1518:1525   */\n  dup8\n    /* \"#utility.yul\":1509:1515   */\n  dup3\n    /* \"#utility.yul\":1498:1507   */\n  dup9\n    /* \"#utility.yul\":1494:1516   */\n  add\n    /* \"#utility.yul\":1462:1526   */\n  tag_16\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1452:1526   */\n  swap2\n  pop\n    /* \"#utility.yul\":1407:1536   */\n  pop\n    /* \"#utility.yul\":663:1543   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1630:1726   */\ntag_42:\n    /* \"#utility.yul\":1667:1674   */\n  0x00\n    /* \"#utility.yul\":1696:1720   */\n  tag_44\n    /* \"#utility.yul\":1714:1719   */\n  dup3\n    /* \"#utility.yul\":1696:1720   */\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1685:1720   */\n  swap1\n  pop\n    /* \"#utility.yul\":1630:1726   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1732:1842   */\ntag_46:\n    /* \"#utility.yul\":1783:1790   */\n  0x00\n    /* \"#utility.yul\":1812:1836   */\n  tag_48\n    /* \"#utility.yul\":1830:1835   */\n  dup3\n    /* \"#utility.yul\":1812:1836   */\n  tag_42\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1801:1836   */\n  swap1\n  pop\n    /* \"#utility.yul\":1732:1842   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1848:1960   */\ntag_49:\n    /* \"#utility.yul\":1901:1908   */\n  0x00\n    /* \"#utility.yul\":1930:1954   */\n  tag_51\n    /* \"#utility.yul\":1948:1953   */\n  dup3\n    /* \"#utility.yul\":1930:1954   */\n  tag_42\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1919:1954   */\n  swap1\n  pop\n    /* \"#utility.yul\":1848:1960   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1966:2092   */\ntag_45:\n    /* \"#utility.yul\":2003:2010   */\n  0x00\n    /* \"#utility.yul\":2043:2085   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2036:2041   */\n  dup3\n    /* \"#utility.yul\":2032:2086   */\n  and\n    /* \"#utility.yul\":2021:2086   */\n  swap1\n  pop\n    /* \"#utility.yul\":1966:2092   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2098:2175   */\ntag_53:\n    /* \"#utility.yul\":2135:2142   */\n  0x00\n    /* \"#utility.yul\":2164:2169   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  swap1\n  pop\n    /* \"#utility.yul\":2098:2175   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2304:2421   */\ntag_35:\n    /* \"#utility.yul\":2413:2414   */\n  0x00\n    /* \"#utility.yul\":2410:2411   */\n  dup1\n    /* \"#utility.yul\":2403:2415   */\n  revert\n    /* \"#utility.yul\":2427:2549   */\ntag_19:\n    /* \"#utility.yul\":2500:2524   */\n  tag_59\n    /* \"#utility.yul\":2518:2523   */\n  dup2\n    /* \"#utility.yul\":2500:2524   */\n  tag_42\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2493:2498   */\n  dup2\n    /* \"#utility.yul\":2490:2525   */\n  eq\n    /* \"#utility.yul\":2480:2543   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2539:2540   */\n  0x00\n    /* \"#utility.yul\":2536:2537   */\n  dup1\n    /* \"#utility.yul\":2529:2541   */\n  revert\n    /* \"#utility.yul\":2480:2543   */\ntag_60:\n    /* \"#utility.yul\":2427:2549   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2555:2705   */\ntag_23:\n    /* \"#utility.yul\":2642:2680   */\n  tag_62\n    /* \"#utility.yul\":2674:2679   */\n  dup2\n    /* \"#utility.yul\":2642:2680   */\n  tag_46\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2635:2640   */\n  dup2\n    /* \"#utility.yul\":2632:2681   */\n  eq\n    /* \"#utility.yul\":2622:2699   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2695:2696   */\n  0x00\n    /* \"#utility.yul\":2692:2693   */\n  dup1\n    /* \"#utility.yul\":2685:2697   */\n  revert\n    /* \"#utility.yul\":2622:2699   */\ntag_63:\n    /* \"#utility.yul\":2555:2705   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2711:2865   */\ntag_27:\n    /* \"#utility.yul\":2800:2840   */\n  tag_65\n    /* \"#utility.yul\":2834:2839   */\n  dup2\n    /* \"#utility.yul\":2800:2840   */\n  tag_49\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2793:2798   */\n  dup2\n    /* \"#utility.yul\":2790:2841   */\n  eq\n    /* \"#utility.yul\":2780:2859   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2855:2856   */\n  0x00\n    /* \"#utility.yul\":2852:2853   */\n  dup1\n    /* \"#utility.yul\":2845:2857   */\n  revert\n    /* \"#utility.yul\":2780:2859   */\ntag_66:\n    /* \"#utility.yul\":2711:2865   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2871:2993   */\ntag_31:\n    /* \"#utility.yul\":2944:2968   */\n  tag_68\n    /* \"#utility.yul\":2962:2967   */\n  dup2\n    /* \"#utility.yul\":2944:2968   */\n  tag_53\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2937:2942   */\n  dup2\n    /* \"#utility.yul\":2934:2969   */\n  eq\n    /* \"#utility.yul\":2924:2987   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2983:2984   */\n  0x00\n    /* \"#utility.yul\":2980:2981   */\n  dup1\n    /* \"#utility.yul\":2973:2985   */\n  revert\n    /* \"#utility.yul\":2924:2987   */\ntag_69:\n    /* \"#utility.yul\":2871:2993   */\n  pop\n  jump\t// out\n    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":27968:36858  contract NftStaking is Ownable {\r... */\ntag_12:\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n  0x00\n  assignImmutable(\"0xd3d302950f380d1a27df9dd44167cfb162563e31196f778e9cbde584eeb2b78c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":27968:36858  contract NftStaking is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ae39cac\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xb5962917\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xb5962917\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd06fcba8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd086c254\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe449f341\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf25f4b56\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x8ae39cac\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x90d49b9d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9f8d181\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x43db3c5f\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x43db3c5f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x567e98f9\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5e42b455\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x792b55b6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x0fbf0a93\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1959a002\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19fca9f6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1e2720ff\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2955c60c\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31635:33140  function stake(uint256[] calldata tokenIds) external {\r... */\n    tag_3:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28805:28850  mapping (address => UserInfo) public userInfo */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28285:28318  IBEP20 public immutable ghspToken */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30498:30743  function depositReward(uint256 _amount) external onlyOwner {\r... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36544:36855  function balanceOfStakes() external view returns (uint256[] memory){\r... */\n    tag_7:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28362:28392  uint256 public accGHSPPerShare */\n    tag_8:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35701:36538  function harvest() external {\r... */\n    tag_9:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28498:28530  uint256 public totalStakedAmount */\n    tag_10:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30085:30490  function getRewardBalance() external view returns (uint256) {\r... */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5562:5665  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29729:29948  function setHarvestFee(uint256 _feePercent) external onlyOwner {\r... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28399:28428  uint256 public rewardPerBlock */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":4911:4998  function owner() public view virtual returns (address) {\r... */\n    tag_15:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29956:30077  function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {\r... */\n    tag_16:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29580:29721  function setFeeWallet(address _feeWallet) external onlyOwner {\r... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28325:28355  uint256 public lastRewardBlock */\n    tag_18:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28466:28491  uint256 public harvestFee */\n    tag_19:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28245:28278  IERC721 public immutable nftToken */\n    tag_20:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34904:35128  function getPending(address _user) public view returns (uint256) {\r... */\n    tag_21:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33148:34896  function unstake(uint256[] calldata tokenIds) external {\r... */\n    tag_22:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28435:28459  address public feeWallet */\n    tag_23:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5820:6021  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_24:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31635:33140  function stake(uint256[] calldata tokenIds) external {\r... */\n    tag_31:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31725:31726  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31707:31715  tokenIds */\n      dup3\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31707:31722  tokenIds.length */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31707:31726  tokenIds.length > 0 */\n      gt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31699:31755  require(tokenIds.length > 0, \"NFT Staking: Empty Array\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31770:31779  uint256 i */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31766:32232  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n    tag_109:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31789:31797  tokenIds */\n      dup3\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31789:31804  tokenIds.length */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31785:31786  i */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31785:31804  i < tokenIds.length */\n      lt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31766:32232  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n      iszero\n      tag_110\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31867:31877  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31834:31877  nftToken.ownerOf(tokenIds[i]) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31834:31842  nftToken */\n      immutable(\"0xd3d302950f380d1a27df9dd44167cfb162563e31196f778e9cbde584eeb2b78c\")\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31834:31850  nftToken.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31851:31859  tokenIds */\n      dup6\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31860:31861  i */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31851:31862  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_112\n      jumpi\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n    tag_112:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31834:31863  nftToken.ownerOf(tokenIds[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_115:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31834:31877  nftToken.ownerOf(tokenIds[i]) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31826:31914  require(nftToken.ownerOf(tokenIds[i]) == msg.sender, \"NFT Staking: not owner of token.\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31971:31972  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31937:31954  _ownedTokensIndex */\n      0x0a\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31937:31967  _ownedTokensIndex[tokenIds[i]] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31955:31963  tokenIds */\n      dup6\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31964:31965  i */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31955:31966  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_124\n      jumpi\n      tag_125\n      tag_114\n      jump\t// in\n    tag_125:\n    tag_124:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31937:31967  _ownedTokensIndex[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31937:31972  _ownedTokensIndex[tokenIds[i]] == 0 */\n      eq\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31929:32034  require(_ownedTokensIndex[tokenIds[i]] == 0, \"Nft Unstaking: token not staked or incorrect token owner.\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32053:32062  uint256 j */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32069:32070  1 */\n      0x01\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32065:32066  i */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32065:32070  i + 1 */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32053:32070  uint256 j = i + 1 */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32049:32221  for(uint256 j = i + 1; j < tokenIds.length; j ++){\r... */\n    tag_129:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32076:32084  tokenIds */\n      dup4\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32076:32091  tokenIds.length */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32072:32073  j */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32072:32091  j < tokenIds.length */\n      lt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32049:32221  for(uint256 j = i + 1; j < tokenIds.length; j ++){\r... */\n      iszero\n      tag_130\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32140:32148  tokenIds */\n      dup4\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32149:32150  j */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32140:32151  tokenIds[j] */\n      dup2\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_135\n      tag_114\n      jump\t// in\n    tag_135:\n    tag_134:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32125:32133  tokenIds */\n      dup5\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32134:32135  i */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32125:32136  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_137\n      tag_114\n      jump\t// in\n    tag_137:\n    tag_136:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32125:32151  tokenIds[i] != tokenIds[j] */\n      eq\n      iszero\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32117:32205  require(tokenIds[i] != tokenIds[j], \"NFT Staking: duplicate token ids in input params.\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32093:32097  j ++ */\n      dup1\n      dup1\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      swap2\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32049:32221  for(uint256 j = i + 1; j < tokenIds.length; j ++){\r... */\n      jump(tag_129)\n    tag_130:\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31806:31810  i ++ */\n      dup1\n      dup1\n      tag_143\n      swap1\n      tag_142\n      jump\t// in\n    tag_143:\n      swap2\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31766:32232  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n      jump(tag_109)\n    tag_110:\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32242:32256  updateStatus() */\n      tag_144\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32242:32254  updateStatus */\n      tag_145\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32242:32256  updateStatus() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32267:32288  UserInfo storage user */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32291:32299  userInfo */\n      0x0b\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32291:32311  userInfo[msg.sender] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32300:32310  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32291:32311  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32267:32311  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32340:32341  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32326:32330  user */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32326:32337  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32326:32341  user.amount > 0 */\n      gt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32322:32518  if (user.amount > 0) {\r... */\n      iszero\n      tag_146\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32358:32373  uint256 pending */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32376:32439  user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_147\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32423:32427  user */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32423:32438  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32376:32418  user.amount.mul(accGHSPPerShare).div(1e12) */\n      tag_148\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32413:32417  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32376:32408  user.amount.mul(accGHSPPerShare) */\n      tag_149\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32392:32407  accGHSPPerShare */\n      sload(0x02)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32376:32380  user */\n      dup8\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32376:32387  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32376:32391  user.amount.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32376:32408  user.amount.mul(accGHSPPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32376:32412  user.amount.mul(accGHSPPerShare).div */\n      tag_151\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32376:32418  user.amount.mul(accGHSPPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32376:32422  user.amount.mul(accGHSPPerShare).div(1e12).sub */\n      tag_152\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32376:32439  user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_147:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32358:32439  uint256 pending = user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32475:32506  user.pendingAmount.add(pending) */\n      tag_153\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32498:32505  pending */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32475:32479  user */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32475:32493  user.pendingAmount */\n      0x02\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32475:32497  user.pendingAmount.add */\n      tag_154\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32475:32506  user.pendingAmount.add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32454:32458  user */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32454:32472  user.pendingAmount */\n      0x02\n      add\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32454:32506  user.pendingAmount = user.pendingAmount.add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32343:32518  {\r... */\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32322:32518  if (user.amount > 0) {\r... */\n    tag_146:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32528:32547  uint256 tokenAmount */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32550:32558  tokenIds */\n      dup4\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32550:32565  tokenIds.length */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32528:32565  uint256 tokenAmount = tokenIds.length */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32596:32630  totalStakedAmount.add(tokenAmount) */\n      tag_155\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32618:32629  tokenAmount */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32596:32613  totalStakedAmount */\n      sload(0x06)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32596:32617  totalStakedAmount.add */\n      tag_154\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32596:32630  totalStakedAmount.add(tokenAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32576:32593  totalStakedAmount */\n      0x06\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32576:32630  totalStakedAmount = totalStakedAmount.add(tokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32655:32664  uint256 i */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32651:32917  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n    tag_156:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32674:32682  tokenIds */\n      dup5\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32674:32689  tokenIds.length */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32670:32671  i */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32670:32689  i < tokenIds.length */\n      lt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32651:32917  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32755:32763  tokenIds */\n      dup5\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32764:32765  i */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32755:32766  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_159\n      jumpi\n      tag_160\n      tag_114\n      jump\t// in\n    tag_160:\n    tag_159:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32711:32723  _ownedTokens */\n      0x09\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32711:32735  _ownedTokens[msg.sender] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32724:32734  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32711:32735  _ownedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32711:32752  _ownedTokens[msg.sender][user.amount + i] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32750:32751  i */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32736:32740  user */\n      dup7\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32736:32747  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32736:32751  user.amount + i */\n      tag_161\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_161:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32711:32752  _ownedTokens[msg.sender][user.amount + i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32711:32766  _ownedTokens[msg.sender][user.amount + i] = tokenIds[i] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32828:32829  i */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32814:32818  user */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32814:32825  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32814:32829  user.amount + i */\n      tag_162\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_162:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32781:32798  _ownedTokensIndex */\n      0x0a\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32781:32811  _ownedTokensIndex[tokenIds[i]] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32799:32807  tokenIds */\n      dup8\n      dup8\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32808:32809  i */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32799:32810  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_163\n      jumpi\n      tag_164\n      tag_114\n      jump\t// in\n    tag_164:\n    tag_163:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32781:32811  _ownedTokensIndex[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32781:32829  _ownedTokensIndex[tokenIds[i]] = user.amount + i */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32844:32852  nftToken */\n      immutable(\"0xd3d302950f380d1a27df9dd44167cfb162563e31196f778e9cbde584eeb2b78c\")\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32844:32865  nftToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32866:32876  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32886:32890  this */\n      address\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32893:32901  tokenIds */\n      dup9\n      dup9\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32902:32903  i */\n      dup7\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32893:32904  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_165\n      jumpi\n      tag_166\n      tag_114\n      jump\t// in\n    tag_166:\n    tag_165:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32844:32905  nftToken.transferFrom(msg.sender, address(this), tokenIds[i]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32691:32695  i ++ */\n      dup1\n      dup1\n      tag_172\n      swap1\n      tag_142\n      jump\t// in\n    tag_172:\n      swap2\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32651:32917  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n      jump(tag_156)\n    tag_157:\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32941:32969  user.amount.add(tokenAmount) */\n      tag_173\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32957:32968  tokenAmount */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32941:32945  user */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32941:32952  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32941:32956  user.amount.add */\n      tag_154\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32941:32969  user.amount.add(tokenAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32927:32931  user */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32927:32938  user.amount */\n      0x00\n      add\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32927:32969  user.amount = user.amount.add(tokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32998:33040  user.amount.mul(accGHSPPerShare).div(1e12) */\n      tag_174\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33035:33039  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32998:33030  user.amount.mul(accGHSPPerShare) */\n      tag_175\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33014:33029  accGHSPPerShare */\n      sload(0x02)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32998:33002  user */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32998:33009  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32998:33013  user.amount.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32998:33030  user.amount.mul(accGHSPPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32998:33034  user.amount.mul(accGHSPPerShare).div */\n      tag_151\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32998:33040  user.amount.mul(accGHSPPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_174:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32980:32984  user */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32980:32995  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":32980:33040  user.rewardDebt = user.amount.mul(accGHSPPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33073:33088  block.timestamp */\n      timestamp\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33051:33055  user */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33051:33070  user.lastStakedTime */\n      0x03\n      add\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33051:33088  user.lastStakedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33104:33132  Staked(msg.sender, tokenIds) */\n      0x134b166c6094cc1ccbf1e3353ce5c3cd9fd29869051bdb999895854d77cc5ef6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33111:33121  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33123:33131  tokenIds */\n      dup6\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33104:33132  Staked(msg.sender, tokenIds) */\n      mload(0x40)\n      tag_176\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31688:33140  {\r... */\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31635:33140  function stake(uint256[] calldata tokenIds) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28805:28850  mapping (address => UserInfo) public userInfo */\n    tag_35:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28285:28318  IBEP20 public immutable ghspToken */\n    tag_39:\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n      dup2\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30498:30743  function depositReward(uint256 _amount) external onlyOwner {\r... */\n    tag_45:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      tag_179\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5152  _msgSender */\n      tag_180\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      tag_181\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5136  owner */\n      tag_71\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5123:5191  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30568:30630  ghspToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_186\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30595:30605  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30615:30619  this */\n      address\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30622:30629  _amount */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30568:30577  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30568:30594  ghspToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_187\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30568:30630  ghspToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30660:30670  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30646:30680  DepositReward(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4f7fd5c9e17300a4800fd572ea53fc291e2ee7470d73346d16b357faee4e7210\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30672:30679  _amount */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30646:30680  DepositReward(msg.sender, _amount) */\n      mload(0x40)\n      tag_188\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30708:30735  _rewardBalance.add(_amount) */\n      tag_189\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30727:30734  _amount */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30708:30722  _rewardBalance */\n      sload(0x07)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30708:30726  _rewardBalance.add */\n      tag_154\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30708:30735  _rewardBalance.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30691:30705  _rewardBalance */\n      0x07\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30691:30735  _rewardBalance = _rewardBalance.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30498:30743  function depositReward(uint256 _amount) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36544:36855  function balanceOfStakes() external view returns (uint256[] memory){\r... */\n    tag_47:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36594:36610  uint256[] memory */\n      0x60\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36622:36645  uint256[] memory stakes */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36662:36670  userInfo */\n      0x0b\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36662:36682  userInfo[msg.sender] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36671:36681  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36662:36682  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36662:36689  userInfo[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36648:36690  new uint256[](userInfo[msg.sender].amount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_191\n      jumpi\n      tag_192\n      tag_193\n      jump\t// in\n    tag_192:\n    tag_191:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_194\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_194:\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36622:36690  uint256[] memory stakes = new uint256[](userInfo[msg.sender].amount) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36705:36714  uint256 i */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36701:36824  for(uint256 i = 0; i < userInfo[msg.sender].amount; i ++){\r... */\n    tag_195:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36724:36732  userInfo */\n      0x0b\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36724:36744  userInfo[msg.sender] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36733:36743  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36724:36744  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36724:36751  userInfo[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36720:36721  i */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36720:36751  i < userInfo[msg.sender].amount */\n      lt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36701:36824  for(uint256 i = 0; i < userInfo[msg.sender].amount; i ++){\r... */\n      iszero\n      tag_196\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36785:36797  _ownedTokens */\n      0x09\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36785:36809  _ownedTokens[msg.sender] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36798:36808  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36785:36809  _ownedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36785:36812  _ownedTokens[msg.sender][i] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36810:36811  i */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36785:36812  _ownedTokens[msg.sender][i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36773:36779  stakes */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36780:36781  i */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36773:36782  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_198\n      jumpi\n      tag_199\n      tag_114\n      jump\t// in\n    tag_199:\n    tag_198:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36773:36812  stakes[i] = _ownedTokens[msg.sender][i] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36753:36757  i ++ */\n      dup1\n      dup1\n      tag_200\n      swap1\n      tag_142\n      jump\t// in\n    tag_200:\n      swap2\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36701:36824  for(uint256 i = 0; i < userInfo[msg.sender].amount; i ++){\r... */\n      jump(tag_195)\n    tag_196:\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36841:36847  stakes */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36834:36847  return stakes */\n      swap2\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36544:36855  function balanceOfStakes() external view returns (uint256[] memory){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28362:28392  uint256 public accGHSPPerShare */\n    tag_51:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35701:36538  function harvest() external {\r... */\n    tag_55:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35740:35760  uint256 rewardAmount */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35763:35786  _getPending(msg.sender) */\n      tag_202\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35775:35785  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35763:35774  _getPending */\n      tag_203\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35763:35786  _getPending(msg.sender) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35740:35786  uint256 rewardAmount = _getPending(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35797:35818  UserInfo storage user */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35821:35829  userInfo */\n      0x0b\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35821:35841  userInfo[msg.sender] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35830:35840  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35821:35841  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35797:35841  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35852:35871  uint256 _harvestFee */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35874:35911  rewardAmount.mul(harvestFee).div(100) */\n      tag_204\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35907:35910  100 */\n      0x64\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35874:35902  rewardAmount.mul(harvestFee) */\n      tag_205\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35891:35901  harvestFee */\n      sload(0x05)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35874:35886  rewardAmount */\n      dup7\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35874:35890  rewardAmount.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35874:35902  rewardAmount.mul(harvestFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35874:35906  rewardAmount.mul(harvestFee).div */\n      tag_151\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35874:35911  rewardAmount.mul(harvestFee).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35852:35911  uint256 _harvestFee = rewardAmount.mul(harvestFee).div(100) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35922:35936  uint256 amount */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35954:35965  _harvestFee */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35939:35951  rewardAmount */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35939:35965  rewardAmount - _harvestFee */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35922:35965  uint256 amount = rewardAmount - _harvestFee */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36017:36023  amount */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35980:35989  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35980:35999  ghspToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36008:36012  this */\n      address\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35980:36014  ghspToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_208:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35980:36023  ghspToken.balanceOf(address(this)) < amount */\n      lt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35976:36095  if (ghspToken.balanceOf(address(this)) < amount) {\r... */\n      iszero\n      tag_214\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36049:36058  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36049:36068  ghspToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36077:36081  this */\n      address\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36049:36083  ghspToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_215:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_219:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36040:36083  amount = ghspToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35976:36095  if (ghspToken.balanceOf(address(this)) < amount) {\r... */\n    tag_214:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36105:36147  ghspToken.safeTransfer(msg.sender, amount) */\n      tag_220\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36128:36138  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36140:36146  amount */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36105:36114  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36105:36127  ghspToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36105:36147  ghspToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36201:36212  _harvestFee */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36164:36173  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36164:36183  ghspToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36192:36196  this */\n      address\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36164:36198  ghspToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_222:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_223:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_225\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_225:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_226\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_226:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36164:36212  ghspToken.balanceOf(address(this)) < _harvestFee */\n      lt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36160:36289  if (ghspToken.balanceOf(address(this)) < _harvestFee) {\r... */\n      iszero\n      tag_227\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36243:36252  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36243:36262  ghspToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36271:36275  this */\n      address\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36243:36277  ghspToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_232\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_232:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36229:36277  _harvestFee = ghspToken.balanceOf(address(this)) */\n      swap2\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36160:36289  if (ghspToken.balanceOf(address(this)) < _harvestFee) {\r... */\n    tag_227:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36299:36345  ghspToken.safeTransfer(feeWallet, _harvestFee) */\n      tag_233\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36322:36331  feeWallet */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36333:36344  _harvestFee */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36299:36308  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36299:36321  ghspToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36299:36345  ghspToken.safeTransfer(feeWallet, _harvestFee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36356:36370  updateStatus() */\n      tag_234\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36356:36368  updateStatus */\n      tag_145\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36356:36370  updateStatus() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36402:36403  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36381:36385  user */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36381:36399  user.pendingAmount */\n      0x02\n      add\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36381:36403  user.pendingAmount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36432:36474  user.amount.mul(accGHSPPerShare).div(1e12) */\n      tag_235\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36469:36473  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36432:36464  user.amount.mul(accGHSPPerShare) */\n      tag_236\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36448:36463  accGHSPPerShare */\n      sload(0x02)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36432:36436  user */\n      dup7\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36432:36443  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36432:36447  user.amount.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36432:36464  user.amount.mul(accGHSPPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36432:36468  user.amount.mul(accGHSPPerShare).div */\n      tag_151\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36432:36474  user.amount.mul(accGHSPPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36414:36418  user */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36414:36429  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36414:36474  user.rewardDebt = user.amount.mul(accGHSPPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36490:36530  Harvest(msg.sender, amount, _harvestFee) */\n      0x71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36498:36508  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36510:36516  amount */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36518:36529  _harvestFee */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":36490:36530  Harvest(msg.sender, amount, _harvestFee) */\n      mload(0x40)\n      tag_237\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35729:36538  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35701:36538  function harvest() external {\r... */\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28498:28530  uint256 public totalStakedAmount */\n    tag_57:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30085:30490  function getRewardBalance() external view returns (uint256) {\r... */\n    tag_60:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30136:30143  uint256 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30175:30190  lastRewardBlock */\n      sload(0x01)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30160:30172  block.number */\n      number\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30160:30190  block.number > lastRewardBlock */\n      gt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30160:30216  block.number > lastRewardBlock && totalStakedAmount != 0 */\n      dup1\n      iszero\n      tag_240\n      jumpi\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30215:30216  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30194:30211  totalStakedAmount */\n      sload(0x06)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30194:30216  totalStakedAmount != 0 */\n      eq\n      iszero\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30160:30216  block.number > lastRewardBlock && totalStakedAmount != 0 */\n    tag_240:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30156:30483  if (block.number > lastRewardBlock && totalStakedAmount != 0) {\r... */\n      iszero\n      tag_241\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30233:30251  uint256 multiplier */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30254:30298  getMultiplier(lastRewardBlock, block.number) */\n      tag_242\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30268:30283  lastRewardBlock */\n      sload(0x01)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30285:30297  block.number */\n      number\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30254:30267  getMultiplier */\n      tag_77\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30254:30298  getMultiplier(lastRewardBlock, block.number) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30233:30298  uint256 multiplier = getMultiplier(lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30313:30327  uint256 reward */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30330:30360  multiplier.mul(rewardPerBlock) */\n      tag_243\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30345:30359  rewardPerBlock */\n      sload(0x03)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30330:30340  multiplier */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30330:30344  multiplier.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30330:30360  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30313:30360  uint256 reward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30382:30408  _rewardBalance.sub(reward) */\n      tag_244\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30401:30407  reward */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30382:30396  _rewardBalance */\n      sload(0x07)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30382:30400  _rewardBalance.sub */\n      tag_152\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30382:30408  _rewardBalance.sub(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30375:30408  return _rewardBalance.sub(reward) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_239)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30156:30483  if (block.number > lastRewardBlock && totalStakedAmount != 0) {\r... */\n    tag_241:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30457:30471  _rewardBalance */\n      sload(0x07)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30450:30471  return _rewardBalance */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30085:30490  function getRewardBalance() external view returns (uint256) {\r... */\n    tag_239:\n      swap1\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5562:5665  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_63:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      tag_247\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5152  _msgSender */\n      tag_180\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      jump\t// in\n    tag_247:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      tag_248\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5136  owner */\n      tag_71\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      jump\t// in\n    tag_248:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5123:5191  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap1\n      tag_184\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5627:5657  _transferOwnership(address(0)) */\n      tag_252\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5654:5655  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5627:5645  _transferOwnership */\n      tag_253\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5627:5657  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5562:5665  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29729:29948  function setHarvestFee(uint256 _feePercent) external onlyOwner {\r... */\n    tag_66:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      tag_255\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5152  _msgSender */\n      tag_180\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      jump\t// in\n    tag_255:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      tag_256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5136  owner */\n      tag_71\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      jump\t// in\n    tag_256:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5123:5191  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_184\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29826:29828  40 */\n      0x28\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29811:29822  _feePercent */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29811:29828  _feePercent <= 40 */\n      gt\n      iszero\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29803:29863  require(_feePercent <= 40, \"setHarvestFee: feePercent > 40\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29887:29898  _feePercent */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29874:29884  harvestFee */\n      0x05\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29874:29898  harvestFee = _feePercent */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29914:29940  SetHarvestFee(_feePercent) */\n      0xf419800a2d8930c61d5d9cd782aa72c512cf6be2f79da6db0b8855870b7269ed\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29928:29939  _feePercent */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29914:29940  SetHarvestFee(_feePercent) */\n      mload(0x40)\n      tag_263\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29729:29948  function setHarvestFee(uint256 _feePercent) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28399:28428  uint256 public rewardPerBlock */\n    tag_68:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":4911:4998  function owner() public view virtual returns (address) {\r... */\n    tag_71:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":4957:4964  address */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":4984:4990  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":4977:4990  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":4911:4998  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29956:30077  function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {\r... */\n    tag_77:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30028:30035  uint256 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30055:30069  _to.sub(_from) */\n      tag_266\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30063:30068  _from */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30055:30058  _to */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30055:30062  _to.sub */\n      tag_152\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30055:30069  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_266:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30048:30069  return _to.sub(_from) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29956:30077  function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29580:29721  function setFeeWallet(address _feeWallet) external onlyOwner {\r... */\n    tag_81:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      tag_268\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5152  _msgSender */\n      tag_180\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      jump\t// in\n    tag_268:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      tag_269\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5136  owner */\n      tag_71\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      jump\t// in\n    tag_269:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5123:5191  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_184\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29664:29674  _feeWallet */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29652:29661  feeWallet */\n      0x04\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29652:29674  feeWallet = _feeWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29703:29712  feeWallet */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29690:29713  SetFeeWallet(feeWallet) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3d21e5a2b633291bd1ff5f9c654e402d063783c95759d2ea521b31fb30e4da41\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":29580:29721  function setFeeWallet(address _feeWallet) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28325:28355  uint256 public lastRewardBlock */\n    tag_83:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28466:28491  uint256 public harvestFee */\n    tag_86:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28245:28278  IERC721 public immutable nftToken */\n    tag_89:\n      immutable(\"0xd3d302950f380d1a27df9dd44167cfb162563e31196f778e9cbde584eeb2b78c\")\n      dup2\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34904:35128  function getPending(address _user) public view returns (uint256) {\r... */\n    tag_94:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34960:34967  uint256 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34980:34995  uint256 pending */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34998:35016  _getPending(_user) */\n      tag_274\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35010:35015  _user */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34998:35009  _getPending */\n      tag_203\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34998:35016  _getPending(_user) */\n      jump\t// in\n    tag_274:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34980:35016  uint256 pending = _getPending(_user) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35027:35046  uint256 _harvestFee */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35049:35081  pending.mul(harvestFee).div(100) */\n      tag_275\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35077:35080  100 */\n      0x64\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35049:35072  pending.mul(harvestFee) */\n      tag_276\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35061:35071  harvestFee */\n      sload(0x05)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35049:35056  pending */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35049:35060  pending.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35049:35072  pending.mul(harvestFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_276:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35049:35076  pending.mul(harvestFee).div */\n      tag_151\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35049:35081  pending.mul(harvestFee).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_275:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35027:35081  uint256 _harvestFee = pending.mul(harvestFee).div(100) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35109:35120  _harvestFee */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35099:35106  pending */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35099:35120  pending - _harvestFee */\n      tag_277\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_277:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35092:35120  return pending - _harvestFee */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34904:35128  function getPending(address _user) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33148:34896  function unstake(uint256[] calldata tokenIds) external {\r... */\n    tag_98:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33240:33241  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33222:33230  tokenIds */\n      dup3\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33222:33237  tokenIds.length */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33222:33241  tokenIds.length > 0 */\n      gt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33214:33270  require(tokenIds.length > 0, \"NFT Staking: Empty Array\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap1\n      tag_108\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33285:33294  uint256 i */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33281:33644  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n    tag_281:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33304:33312  tokenIds */\n      dup3\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33304:33319  tokenIds.length */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33300:33301  i */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33300:33319  i < tokenIds.length */\n      lt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33281:33644  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n      iszero\n      tag_282\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33383:33384  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33349:33366  _ownedTokensIndex */\n      0x0a\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33349:33379  _ownedTokensIndex[tokenIds[i]] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33367:33375  tokenIds */\n      dup6\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33376:33377  i */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33367:33378  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_284\n      jumpi\n      tag_285\n      tag_114\n      jump\t// in\n    tag_285:\n    tag_284:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33349:33379  _ownedTokensIndex[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33349:33384  _ownedTokensIndex[tokenIds[i]] != 0 */\n      eq\n      iszero\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33341:33446  require(_ownedTokensIndex[tokenIds[i]] != 0, \"Nft Unstaking: token not staked or incorrect token owner.\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap1\n      tag_128\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33465:33474  uint256 j */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33481:33482  1 */\n      0x01\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33477:33478  i */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33477:33482  i + 1 */\n      tag_291\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_291:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33465:33482  uint256 j = i + 1 */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33461:33633  for(uint256 j = i + 1; j < tokenIds.length; j ++){\r... */\n    tag_288:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33488:33496  tokenIds */\n      dup4\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33488:33503  tokenIds.length */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33484:33485  j */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33484:33503  j < tokenIds.length */\n      lt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33461:33633  for(uint256 j = i + 1; j < tokenIds.length; j ++){\r... */\n      iszero\n      tag_289\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33552:33560  tokenIds */\n      dup4\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33561:33562  j */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33552:33563  tokenIds[j] */\n      dup2\n      dup2\n      lt\n      tag_292\n      jumpi\n      tag_293\n      tag_114\n      jump\t// in\n    tag_293:\n    tag_292:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33537:33545  tokenIds */\n      dup5\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33546:33547  i */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33537:33548  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_294\n      jumpi\n      tag_295\n      tag_114\n      jump\t// in\n    tag_295:\n    tag_294:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33537:33563  tokenIds[i] != tokenIds[j] */\n      eq\n      iszero\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33529:33617  require(tokenIds[i] != tokenIds[j], \"NFT Staking: duplicate token ids in input params.\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap1\n      tag_140\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33505:33509  j ++ */\n      dup1\n      dup1\n      tag_298\n      swap1\n      tag_142\n      jump\t// in\n    tag_298:\n      swap2\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33461:33633  for(uint256 j = i + 1; j < tokenIds.length; j ++){\r... */\n      jump(tag_288)\n    tag_289:\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33321:33325  i ++ */\n      dup1\n      dup1\n      tag_299\n      swap1\n      tag_142\n      jump\t// in\n    tag_299:\n      swap2\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33281:33644  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n      jump(tag_281)\n    tag_282:\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33656:33670  updateStatus() */\n      tag_300\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33656:33668  updateStatus */\n      tag_145\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33656:33670  updateStatus() */\n      jump\t// in\n    tag_300:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33681:33702  UserInfo storage user */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33705:33713  userInfo */\n      0x0b\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33705:33725  userInfo[msg.sender] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33714:33724  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33705:33725  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33681:33725  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33736:33751  uint256 pending */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33754:33817  user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_301\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33801:33805  user */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33801:33816  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33754:33796  user.amount.mul(accGHSPPerShare).div(1e12) */\n      tag_302\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33791:33795  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33754:33786  user.amount.mul(accGHSPPerShare) */\n      tag_303\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33770:33785  accGHSPPerShare */\n      sload(0x02)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33754:33758  user */\n      dup8\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33754:33765  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33754:33769  user.amount.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33754:33786  user.amount.mul(accGHSPPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_303:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33754:33790  user.amount.mul(accGHSPPerShare).div */\n      tag_151\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33754:33796  user.amount.mul(accGHSPPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_302:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33754:33800  user.amount.mul(accGHSPPerShare).div(1e12).sub */\n      tag_152\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33754:33817  user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_301:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33736:33817  uint256 pending = user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33869:33876  pending */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33832:33841  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33832:33851  ghspToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33860:33864  this */\n      address\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33832:33866  ghspToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_304:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_305\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_305:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_307\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_307:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_308\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_308:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33832:33876  ghspToken.balanceOf(address(this)) < pending */\n      lt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33828:33949  if (ghspToken.balanceOf(address(this)) < pending) {\r... */\n      iszero\n      tag_309\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33903:33912  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33903:33922  ghspToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33931:33935  this */\n      address\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33903:33937  ghspToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_310:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_311:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_313\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_314\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_314:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33893:33937  pending = ghspToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33828:33949  if (ghspToken.balanceOf(address(this)) < pending) {\r... */\n    tag_309:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33980:34011  user.pendingAmount.add(pending) */\n      tag_315\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34003:34010  pending */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33980:33984  user */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33980:33998  user.pendingAmount */\n      0x02\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33980:34002  user.pendingAmount.add */\n      tag_154\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33980:34011  user.pendingAmount.add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_315:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33959:33963  user */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33959:33977  user.pendingAmount */\n      0x02\n      add\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33959:34011  user.pendingAmount = user.pendingAmount.add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34022:34041  uint256 tokenAmount */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34044:34052  tokenIds */\n      dup5\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34044:34059  tokenIds.length */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34022:34059  uint256 tokenAmount = tokenIds.length */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34074:34083  uint256 i */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34070:34654  for(uint256 i = 0; i < tokenAmount; i ++){\r... */\n    tag_316:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34093:34104  tokenAmount */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34089:34090  i */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34089:34104  i < tokenAmount */\n      lt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34070:34654  for(uint256 i = 0; i < tokenAmount; i ++){\r... */\n      iszero\n      tag_317\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34182:34183  1 */\n      0x01\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34178:34179  i */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34164:34168  user */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34164:34175  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34164:34179  user.amount - i */\n      tag_319\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_319:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34164:34183  user.amount - i - 1 */\n      tag_320\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_320:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34129:34146  _ownedTokensIndex */\n      0x0a\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34129:34159  _ownedTokensIndex[tokenIds[i]] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34147:34155  tokenIds */\n      dup9\n      dup9\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34156:34157  i */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34147:34158  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_321\n      jumpi\n      tag_322\n      tag_114\n      jump\t// in\n    tag_322:\n    tag_321:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34129:34159  _ownedTokensIndex[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34129:34184  _ownedTokensIndex[tokenIds[i]] != (user.amount - i - 1) */\n      eq\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34126:34446  if(_ownedTokensIndex[tokenIds[i]] != (user.amount - i - 1)){\r... */\n      tag_323\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34263:34275  _ownedTokens */\n      0x09\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34263:34287  _ownedTokens[msg.sender] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34276:34286  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34263:34287  _ownedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34263:34310  _ownedTokens[msg.sender][(user.amount - i - 1)] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34307:34308  1 */\n      0x01\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34303:34304  i */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34289:34293  user */\n      dup8\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34289:34300  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34289:34304  user.amount - i */\n      tag_324\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_324:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34289:34308  user.amount - i - 1 */\n      tag_325\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_325:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34263:34310  _ownedTokens[msg.sender][(user.amount - i - 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34204:34216  _ownedTokens */\n      0x09\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34204:34228  _ownedTokens[msg.sender] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34217:34227  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34204:34228  _ownedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34204:34260  _ownedTokens[msg.sender][_ownedTokensIndex[tokenIds[i]]] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34229:34246  _ownedTokensIndex */\n      0x0a\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34229:34259  _ownedTokensIndex[tokenIds[i]] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34247:34255  tokenIds */\n      dup11\n      dup11\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34256:34257  i */\n      dup8\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34247:34258  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_326\n      jumpi\n      tag_327\n      tag_114\n      jump\t// in\n    tag_327:\n    tag_326:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34229:34259  _ownedTokensIndex[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34204:34260  _ownedTokens[msg.sender][_ownedTokensIndex[tokenIds[i]]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34204:34310  _ownedTokens[msg.sender][_ownedTokensIndex[tokenIds[i]]] = _ownedTokens[msg.sender][(user.amount - i - 1)] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34399:34416  _ownedTokensIndex */\n      0x0a\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34399:34429  _ownedTokensIndex[tokenIds[i]] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34417:34425  tokenIds */\n      dup8\n      dup8\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34426:34427  i */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34417:34428  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_328\n      jumpi\n      tag_329\n      tag_114\n      jump\t// in\n    tag_329:\n    tag_328:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34399:34429  _ownedTokensIndex[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34330:34347  _ownedTokensIndex */\n      0x0a\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34330:34396  _ownedTokensIndex[_ownedTokens[msg.sender][(user.amount - i - 1)]] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34348:34360  _ownedTokens */\n      0x09\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34348:34372  _ownedTokens[msg.sender] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34361:34371  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34348:34372  _ownedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34348:34395  _ownedTokens[msg.sender][(user.amount - i - 1)] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34392:34393  1 */\n      0x01\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34388:34389  i */\n      dup7\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34374:34378  user */\n      dup11\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34374:34385  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34374:34389  user.amount - i */\n      tag_330\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_330:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34374:34393  user.amount - i - 1 */\n      tag_331\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_331:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34348:34395  _ownedTokens[msg.sender][(user.amount - i - 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34330:34396  _ownedTokensIndex[_ownedTokens[msg.sender][(user.amount - i - 1)]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34330:34429  _ownedTokensIndex[_ownedTokens[msg.sender][(user.amount - i - 1)]] = _ownedTokensIndex[tokenIds[i]] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34126:34446  if(_ownedTokensIndex[tokenIds[i]] != (user.amount - i - 1)){\r... */\n    tag_323:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34467:34484  _ownedTokensIndex */\n      0x0a\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34467:34497  _ownedTokensIndex[tokenIds[i]] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34485:34493  tokenIds */\n      dup8\n      dup8\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34494:34495  i */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34485:34496  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_332\n      jumpi\n      tag_333\n      tag_114\n      jump\t// in\n    tag_333:\n    tag_332:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34467:34497  _ownedTokensIndex[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34460:34497  delete _ownedTokensIndex[tokenIds[i]] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34519:34531  _ownedTokens */\n      0x09\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34519:34543  _ownedTokens[msg.sender] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34532:34542  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34519:34543  _ownedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34519:34566  _ownedTokens[msg.sender][(user.amount - i - 1)] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34563:34564  1 */\n      0x01\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34559:34560  i */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34545:34549  user */\n      dup8\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34545:34556  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34545:34560  user.amount - i */\n      tag_334\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_334:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34545:34564  user.amount - i - 1 */\n      tag_335\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_335:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34519:34566  _ownedTokens[msg.sender][(user.amount - i - 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34512:34566  delete _ownedTokens[msg.sender][(user.amount - i - 1)] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34581:34589  nftToken */\n      immutable(\"0xd3d302950f380d1a27df9dd44167cfb162563e31196f778e9cbde584eeb2b78c\")\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34581:34602  nftToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34611:34615  this */\n      address\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34618:34628  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34630:34638  tokenIds */\n      dup10\n      dup10\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34639:34640  i */\n      dup7\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34630:34641  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_336\n      jumpi\n      tag_337\n      tag_114\n      jump\t// in\n    tag_337:\n    tag_336:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34581:34642  nftToken.transferFrom(address(this), msg.sender, tokenIds[i]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_338\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_338:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_339\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_339:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_341\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_341:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34106:34110  i ++ */\n      dup1\n      dup1\n      tag_342\n      swap1\n      tag_142\n      jump\t// in\n    tag_342:\n      swap2\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34070:34654  for(uint256 i = 0; i < tokenAmount; i ++){\r... */\n      jump(tag_316)\n    tag_317:\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34684:34718  totalStakedAmount.sub(tokenAmount) */\n      tag_343\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34706:34717  tokenAmount */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34684:34701  totalStakedAmount */\n      sload(0x06)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34684:34705  totalStakedAmount.sub */\n      tag_152\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34684:34718  totalStakedAmount.sub(tokenAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_343:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34664:34681  totalStakedAmount */\n      0x06\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34664:34718  totalStakedAmount = totalStakedAmount.sub(tokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34743:34771  user.amount.sub(tokenAmount) */\n      tag_344\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34759:34770  tokenAmount */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34743:34747  user */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34743:34754  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34743:34758  user.amount.sub */\n      tag_152\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34743:34771  user.amount.sub(tokenAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_344:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34729:34733  user */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34729:34740  user.amount */\n      0x00\n      add\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34729:34771  user.amount = user.amount.sub(tokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34800:34842  user.amount.mul(accGHSPPerShare).div(1e12) */\n      tag_345\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34837:34841  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34800:34832  user.amount.mul(accGHSPPerShare) */\n      tag_346\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34816:34831  accGHSPPerShare */\n      sload(0x02)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34800:34804  user */\n      dup7\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34800:34811  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34800:34815  user.amount.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34800:34832  user.amount.mul(accGHSPPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_346:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34800:34836  user.amount.mul(accGHSPPerShare).div */\n      tag_151\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34800:34842  user.amount.mul(accGHSPPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_345:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34782:34786  user */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34782:34797  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34782:34842  user.rewardDebt = user.amount.mul(accGHSPPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34858:34888  UnStaked(msg.sender, tokenIds) */\n      0x80cc10bf7e52583ae0a17d8dd6ab5005573b17a08091a091af1a81205a675c91\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34867:34877  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34879:34887  tokenIds */\n      dup7\n      dup7\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":34858:34888  UnStaked(msg.sender, tokenIds) */\n      mload(0x40)\n      tag_347\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33203:34896  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":33148:34896  function unstake(uint256[] calldata tokenIds) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":28435:28459  address public feeWallet */\n    tag_100:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5820:6021  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_104:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      tag_349\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5152  _msgSender */\n      tag_180\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      jump\t// in\n    tag_349:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      tag_350\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5136  owner */\n      tag_71\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      jump\t// in\n    tag_350:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5123:5191  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap1\n      tag_184\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_351:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5929:5930  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5909:5931  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5909:5917  newOwner */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5909:5931  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5901:5974  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_354:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5985:6013  _transferOwnership(newOwner) */\n      tag_357\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6004:6012  newOwner */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5985:6003  _transferOwnership */\n      tag_253\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5985:6013  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_357:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":5820:6021  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30751:31629  function updateStatus() private {\r... */\n    tag_145:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30814:30829  lastRewardBlock */\n      sload(0x01)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30798:30810  block.number */\n      number\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30798:30829  block.number <= lastRewardBlock */\n      gt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30794:30864  if (block.number <= lastRewardBlock) {\r... */\n      tag_359\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30846:30853  return; */\n      jump(tag_358)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30794:30864  if (block.number <= lastRewardBlock) {\r... */\n    tag_359:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30899:30900  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30878:30895  totalStakedAmount */\n      sload(0x06)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30878:30900  totalStakedAmount == 0 */\n      eq\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30874:30980  if (totalStakedAmount == 0) {\r... */\n      iszero\n      tag_360\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30935:30947  block.number */\n      number\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30917:30932  lastRewardBlock */\n      0x01\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30917:30947  lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30962:30969  return; */\n      jump(tag_358)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30874:30980  if (totalStakedAmount == 0) {\r... */\n    tag_360:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30990:31008  uint256 multiplier */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31011:31055  getMultiplier(lastRewardBlock, block.number) */\n      tag_361\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31025:31040  lastRewardBlock */\n      sload(0x01)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31042:31054  block.number */\n      number\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31011:31024  getMultiplier */\n      tag_77\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31011:31055  getMultiplier(lastRewardBlock, block.number) */\n      jump\t// in\n    tag_361:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30990:31055  uint256 multiplier = getMultiplier(lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31066:31080  uint256 reward */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31083:31113  multiplier.mul(rewardPerBlock) */\n      tag_362\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31098:31112  rewardPerBlock */\n      sload(0x03)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31083:31093  multiplier */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31083:31097  multiplier.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31083:31113  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_362:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31066:31113  uint256 reward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31146:31147  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31128:31142  _rewardBalance */\n      sload(0x07)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31128:31147  _rewardBalance == 0 */\n      eq\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31124:31227  if (_rewardBalance == 0) {\r... */\n      iszero\n      tag_363\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31182:31194  block.number */\n      number\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31164:31179  lastRewardBlock */\n      0x01\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31164:31194  lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31209:31216  return; */\n      pop\n      pop\n      jump(tag_358)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31124:31227  if (_rewardBalance == 0) {\r... */\n    tag_363:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31258:31264  reward */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31241:31255  _rewardBalance */\n      sload(0x07)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31241:31264  _rewardBalance < reward */\n      lt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31237:31581  if (_rewardBalance < reward) {\r... */\n      iszero\n      tag_364\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31299:31367  accGHSPPerShare.add(_rewardBalance.mul(1e12).div(totalStakedAmount)) */\n      tag_365\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31319:31366  _rewardBalance.mul(1e12).div(totalStakedAmount) */\n      tag_366\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31348:31365  totalStakedAmount */\n      sload(0x06)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31319:31343  _rewardBalance.mul(1e12) */\n      tag_367\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31338:31342  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31319:31333  _rewardBalance */\n      sload(0x07)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31319:31337  _rewardBalance.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31319:31343  _rewardBalance.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_367:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31319:31347  _rewardBalance.mul(1e12).div */\n      tag_151\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31319:31366  _rewardBalance.mul(1e12).div(totalStakedAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_366:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31299:31314  accGHSPPerShare */\n      sload(0x02)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31299:31318  accGHSPPerShare.add */\n      tag_154\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31299:31367  accGHSPPerShare.add(_rewardBalance.mul(1e12).div(totalStakedAmount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_365:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31281:31296  accGHSPPerShare */\n      0x02\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31281:31367  accGHSPPerShare = accGHSPPerShare.add(_rewardBalance.mul(1e12).div(totalStakedAmount)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31399:31400  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31382:31396  _rewardBalance */\n      0x07\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31382:31400  _rewardBalance = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31237:31581  if (_rewardBalance < reward) {\r... */\n      jump(tag_368)\n    tag_364:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31450:31476  _rewardBalance.sub(reward) */\n      tag_369\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31469:31475  reward */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31450:31464  _rewardBalance */\n      sload(0x07)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31450:31468  _rewardBalance.sub */\n      tag_152\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31450:31476  _rewardBalance.sub(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_369:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31433:31447  _rewardBalance */\n      0x07\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31433:31476  _rewardBalance = _rewardBalance.sub(reward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31509:31569  accGHSPPerShare.add(reward.mul(1e12).div(totalStakedAmount)) */\n      tag_370\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31529:31568  reward.mul(1e12).div(totalStakedAmount) */\n      tag_371\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31550:31567  totalStakedAmount */\n      sload(0x06)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31529:31545  reward.mul(1e12) */\n      tag_372\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31540:31544  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31529:31535  reward */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31529:31539  reward.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31529:31545  reward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_372:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31529:31549  reward.mul(1e12).div */\n      tag_151\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31529:31568  reward.mul(1e12).div(totalStakedAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_371:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31509:31524  accGHSPPerShare */\n      sload(0x02)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31509:31528  accGHSPPerShare.add */\n      tag_154\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31509:31569  accGHSPPerShare.add(reward.mul(1e12).div(totalStakedAmount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_370:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31491:31506  accGHSPPerShare */\n      0x02\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31491:31569  accGHSPPerShare = accGHSPPerShare.add(reward.mul(1e12).div(totalStakedAmount)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31237:31581  if (_rewardBalance < reward) {\r... */\n    tag_368:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31609:31621  block.number */\n      number\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31591:31606  lastRewardBlock */\n      0x01\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":31591:31621  lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30783:31629  {\r... */\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":30751:31629  function updateStatus() private {\r... */\n    tag_358:\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9698:9796  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_150:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9756:9763  uint256 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9787:9788  b */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9783:9784  a */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9783:9788  a * b */\n      tag_374\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_374:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9776:9788  return a * b */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9698:9796  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":10097:10195  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_151:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":10155:10162  uint256 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":10186:10187  b */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":10182:10183  a */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":10182:10187  a / b */\n      tag_377\n      swap2\n      swap1\n      tag_378\n      jump\t// in\n    tag_377:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":10175:10187  return a / b */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":10097:10195  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9341:9439  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_152:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9399:9406  uint256 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9430:9431  b */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9426:9427  a */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9426:9431  a - b */\n      tag_380\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_380:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9419:9431  return a - b */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9341:9439  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":8960:9058  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_154:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9018:9025  uint256 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9049:9050  b */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9045:9046  a */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9045:9050  a + b */\n      tag_382\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_382:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":9038:9050  return a + b */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":8960:9058  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":3751:3849  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_180:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":3804:3811  address */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":3831:3841  msg.sender */\n      caller\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":3824:3841  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":3751:3849  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13429:13634  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n    tag_187:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13530:13626  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_385\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13550:13555  token */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13580:13607  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13609:13613  from */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13615:13617  to */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13619:13624  value */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13557:13625  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_386\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_386:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13530:13549  _callOptionalReturn */\n      tag_387\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13530:13626  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_385:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13429:13634  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35140:35693  function _getPending(address _user) private view returns (uint256) {\r... */\n    tag_203:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35198:35205  uint256 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35218:35239  UserInfo storage user */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35242:35250  userInfo */\n      0x0b\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35242:35257  userInfo[_user] */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35251:35256  _user */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35242:35257  userInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35218:35257  UserInfo storage user = userInfo[_user] */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35268:35279  uint256 acc */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35282:35297  accGHSPPerShare */\n      sload(0x02)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35268:35297  uint256 acc = accGHSPPerShare */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35327:35342  lastRewardBlock */\n      sload(0x01)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35312:35324  block.number */\n      number\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35312:35342  block.number > lastRewardBlock */\n      gt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35312:35368  block.number > lastRewardBlock && totalStakedAmount != 0 */\n      dup1\n      iszero\n      tag_389\n      jumpi\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35367:35368  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35346:35363  totalStakedAmount */\n      sload(0x06)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35346:35368  totalStakedAmount != 0 */\n      eq\n      iszero\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35312:35368  block.number > lastRewardBlock && totalStakedAmount != 0 */\n    tag_389:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35308:35593  if (block.number > lastRewardBlock && totalStakedAmount != 0) {\r... */\n      iszero\n      tag_390\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35385:35403  uint256 multiplier */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35406:35450  getMultiplier(lastRewardBlock, block.number) */\n      tag_391\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35420:35435  lastRewardBlock */\n      sload(0x01)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35437:35449  block.number */\n      number\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35406:35419  getMultiplier */\n      tag_77\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35406:35450  getMultiplier(lastRewardBlock, block.number) */\n      jump\t// in\n    tag_391:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35385:35450  uint256 multiplier = getMultiplier(lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35465:35479  uint256 reward */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35482:35512  multiplier.mul(rewardPerBlock) */\n      tag_392\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35497:35511  rewardPerBlock */\n      sload(0x03)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35482:35492  multiplier */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35482:35496  multiplier.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35482:35512  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_392:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35465:35512  uint256 reward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35533:35581  acc.add(reward.mul(1e12).div(totalStakedAmount)) */\n      tag_393\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35541:35580  reward.mul(1e12).div(totalStakedAmount) */\n      tag_394\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35562:35579  totalStakedAmount */\n      sload(0x06)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35541:35557  reward.mul(1e12) */\n      tag_395\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35552:35556  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35541:35547  reward */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35541:35551  reward.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35541:35557  reward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_395:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35541:35561  reward.mul(1e12).div */\n      tag_151\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35541:35580  reward.mul(1e12).div(totalStakedAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_394:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35533:35536  acc */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35533:35540  acc.add */\n      tag_154\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35533:35581  acc.add(reward.mul(1e12).div(totalStakedAmount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_393:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35527:35581  acc = acc.add(reward.mul(1e12).div(totalStakedAmount)) */\n      swap3\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35370:35593  {\r... */\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35308:35593  if (block.number > lastRewardBlock && totalStakedAmount != 0) {\r... */\n    tag_390:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35685  user.amount.mul(acc).div(1e12).sub(user.rewardDebt).add(user.pendingAmount) */\n      tag_396\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35666:35670  user */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35666:35684  user.pendingAmount */\n      0x02\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35661  user.amount.mul(acc).div(1e12).sub(user.rewardDebt) */\n      tag_397\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35645:35649  user */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35645:35660  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35640  user.amount.mul(acc).div(1e12) */\n      tag_398\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35635:35639  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35630  user.amount.mul(acc) */\n      tag_399\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35626:35629  acc */\n      dup8\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35614  user */\n      dup10\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35621  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35625  user.amount.mul */\n      tag_150\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35630  user.amount.mul(acc) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_399:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35634  user.amount.mul(acc).div */\n      tag_151\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35640  user.amount.mul(acc).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_398:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35644  user.amount.mul(acc).div(1e12).sub */\n      tag_152\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35661  user.amount.mul(acc).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_397:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35665  user.amount.mul(acc).div(1e12).sub(user.rewardDebt).add */\n      tag_154\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35610:35685  user.amount.mul(acc).div(1e12).sub(user.rewardDebt).add(user.pendingAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_396:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35603:35685  return user.amount.mul(acc).div(1e12).sub(user.rewardDebt).add(user.pendingAmount) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":35140:35693  function _getPending(address _user) private view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13244:13421  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n    tag_221:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13327:13413  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_401\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13347:13352  token */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13377:13400  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13402:13404  to */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13406:13411  value */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13354:13412  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_402\n      swap3\n      swap2\n      swap1\n      tag_403\n      jump\t// in\n    tag_402:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13327:13346  _callOptionalReturn */\n      tag_387\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13327:13413  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_401:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13244:13421  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6181:6372  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_253:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6255:6271  address oldOwner */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6274:6280  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6255:6280  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6300:6308  newOwner */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6291:6297  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6291:6308  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6355:6363  newOwner */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6324:6364  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6345:6353  oldOwner */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6324:6364  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6244:6372  {\r... */\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6181:6372  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":15549:16310  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n    tag_387:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":15973:15996  bytes memory returndata */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":15999:16068  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_406\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16027:16031  data */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":15999:16068  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16007:16012  token */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":15999:16026  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_407\n      swap1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":15999:16068  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_406:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":15973:16068  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16103:16104  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16083:16093  returndata */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16083:16100  returndata.length */\n      mload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16083:16104  returndata.length > 0 */\n      gt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16079:16303  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_408\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16225:16235  returndata */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16214:16244  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_409\n      swap2\n      swap1\n      tag_410\n      jump\t// in\n    tag_409:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16206:16291  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_411\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_412\n      swap1\n      tag_413\n      jump\t// in\n    tag_412:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_411:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16079:16303  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_408:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":15619:16310  {\r... */\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":15549:16310  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":20069:20265  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_407:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":20172:20184  bytes memory */\n      0x60\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":20204:20257  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_415\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":20227:20233  target */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":20235:20239  data */\n      dup5\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":20241:20242  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":20244:20256  errorMessage */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":20204:20226  _functionCallWithValue */\n      tag_416\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":20204:20257  _functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_415:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":20197:20257  return _functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":20069:20265  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21446:22425  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r... */\n    tag_416:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21576:21588  bytes memory */\n      0x60\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21609:21627  isContract(target) */\n      tag_418\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21620:21626  target */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21609:21619  isContract */\n      tag_419\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21609:21627  isContract(target) */\n      jump\t// in\n    tag_418:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21601:21661  require(isContract(target), \"Address: call to non-contract\") */\n      tag_420\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_421\n      swap1\n      tag_422\n      jump\t// in\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_420:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21735:21747  bool success */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21749:21772  bytes memory returndata */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21776:21782  target */\n      dup7\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21776:21787  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21796:21804  weiValue */\n      dup6\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21807:21811  data */\n      dup8\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21776:21812  target.call{ value: weiValue }(data) */\n      mload(0x40)\n      tag_423\n      swap2\n      swap1\n      tag_424\n      jump\t// in\n    tag_423:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_427\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_426)\n    tag_427:\n      0x60\n      swap2\n      pop\n    tag_426:\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21734:21812  (bool success, bytes memory returndata) = target.call{ value: weiValue }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21827:21834  success */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21823:22418  if (success) {\r... */\n      iszero\n      tag_428\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21858:21868  returndata */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21851:21868  return returndata */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_417)\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21823:22418  if (success) {\r... */\n    tag_428:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21992:21993  0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21972:21982  returndata */\n      dup2\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21972:21989  returndata.length */\n      mload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21972:21993  returndata.length > 0 */\n      gt\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21968:22407  if (returndata.length > 0) {\r... */\n      iszero\n      tag_430\n      jumpi\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":22235:22245  returndata */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":22229:22246  mload(returndata) */\n      mload\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":22296:22311  returndata_size */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":22283:22293  returndata */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":22279:22281  32 */\n      0x20\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":22275:22294  add(32, returndata) */\n      add\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":22268:22312  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21968:22407  if (returndata.length > 0) {\r... */\n    tag_430:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":22378:22390  errorMessage */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":22371:22391  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_432\n      swap2\n      swap1\n      tag_433\n      jump\t// in\n    tag_432:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":21446:22425  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r... */\n    tag_417:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16954:17573  function isContract(address account) internal view returns (bool) {\r... */\n    tag_419:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17014:17018  bool */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17276:17292  bytes32 codehash */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17303:17322  bytes32 accountHash */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17325:17391  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17303:17391  bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0x00\n      shl\n      swap1\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17494:17501  account */\n      dup4\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17482:17502  extcodehash(account) */\n      extcodehash\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17470:17502  codehash := extcodehash(account) */\n      swap2\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17534:17545  accountHash */\n      dup1\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17522:17530  codehash */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17522:17545  codehash != accountHash */\n      eq\n      iszero\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17522:17564  codehash != accountHash && codehash != 0x0 */\n      dup1\n      iszero\n      tag_435\n      jumpi\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17561:17564  0x0 */\n      0x00\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17549:17564  codehash != 0x0 */\n      dup1\n      shl\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17549:17557  codehash */\n      dup3\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17549:17564  codehash != 0x0 */\n      eq\n      iszero\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17522:17564  codehash != accountHash && codehash != 0x0 */\n    tag_435:\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":17514:17565  return (codehash != accountHash && codehash != 0x0) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":16954:17573  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_437:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_439\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_440\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:295   */\n    tag_441:\n        /* \"#utility.yul\":209:214   */\n      0x00\n        /* \"#utility.yul\":240:246   */\n      dup2\n        /* \"#utility.yul\":234:247   */\n      mload\n        /* \"#utility.yul\":225:247   */\n      swap1\n      pop\n        /* \"#utility.yul\":256:289   */\n      tag_443\n        /* \"#utility.yul\":283:288   */\n      dup2\n        /* \"#utility.yul\":256:289   */\n      tag_440\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":152:295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":318:886   */\n    tag_444:\n        /* \"#utility.yul\":391:399   */\n      0x00\n        /* \"#utility.yul\":401:407   */\n      dup1\n        /* \"#utility.yul\":451:454   */\n      dup4\n        /* \"#utility.yul\":444:448   */\n      0x1f\n        /* \"#utility.yul\":436:442   */\n      dup5\n        /* \"#utility.yul\":432:449   */\n      add\n        /* \"#utility.yul\":428:455   */\n      slt\n        /* \"#utility.yul\":418:540   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":459:538   */\n      tag_447\n      tag_448\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":418:540   */\n    tag_446:\n        /* \"#utility.yul\":572:578   */\n      dup3\n        /* \"#utility.yul\":559:579   */\n      calldataload\n        /* \"#utility.yul\":549:579   */\n      swap1\n      pop\n        /* \"#utility.yul\":602:620   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":594:600   */\n      dup2\n        /* \"#utility.yul\":591:621   */\n      gt\n        /* \"#utility.yul\":588:705   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":624:703   */\n      tag_450\n      tag_451\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":588:705   */\n    tag_449:\n        /* \"#utility.yul\":738:742   */\n      0x20\n        /* \"#utility.yul\":730:736   */\n      dup4\n        /* \"#utility.yul\":726:743   */\n      add\n        /* \"#utility.yul\":714:743   */\n      swap2\n      pop\n        /* \"#utility.yul\":792:795   */\n      dup4\n        /* \"#utility.yul\":784:788   */\n      0x20\n        /* \"#utility.yul\":776:782   */\n      dup3\n        /* \"#utility.yul\":772:789   */\n      mul\n        /* \"#utility.yul\":762:770   */\n      dup4\n        /* \"#utility.yul\":758:790   */\n      add\n        /* \"#utility.yul\":755:796   */\n      gt\n        /* \"#utility.yul\":752:880   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":799:878   */\n      tag_453\n      tag_454\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":752:880   */\n    tag_452:\n        /* \"#utility.yul\":318:886   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":892:1029   */\n    tag_455:\n        /* \"#utility.yul\":946:951   */\n      0x00\n        /* \"#utility.yul\":977:983   */\n      dup2\n        /* \"#utility.yul\":971:984   */\n      mload\n        /* \"#utility.yul\":962:984   */\n      swap1\n      pop\n        /* \"#utility.yul\":993:1023   */\n      tag_457\n        /* \"#utility.yul\":1017:1022   */\n      dup2\n        /* \"#utility.yul\":993:1023   */\n      tag_458\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":892:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1174   */\n    tag_459:\n        /* \"#utility.yul\":1081:1086   */\n      0x00\n        /* \"#utility.yul\":1119:1125   */\n      dup2\n        /* \"#utility.yul\":1106:1126   */\n      calldataload\n        /* \"#utility.yul\":1097:1126   */\n      swap1\n      pop\n        /* \"#utility.yul\":1135:1168   */\n      tag_461\n        /* \"#utility.yul\":1162:1167   */\n      dup2\n        /* \"#utility.yul\":1135:1168   */\n      tag_462\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":1035:1174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1180:1323   */\n    tag_463:\n        /* \"#utility.yul\":1237:1242   */\n      0x00\n        /* \"#utility.yul\":1268:1274   */\n      dup2\n        /* \"#utility.yul\":1262:1275   */\n      mload\n        /* \"#utility.yul\":1253:1275   */\n      swap1\n      pop\n        /* \"#utility.yul\":1284:1317   */\n      tag_465\n        /* \"#utility.yul\":1311:1316   */\n      dup2\n        /* \"#utility.yul\":1284:1317   */\n      tag_462\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1180:1323   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1329:1658   */\n    tag_34:\n        /* \"#utility.yul\":1388:1394   */\n      0x00\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1425:1434   */\n      dup3\n        /* \"#utility.yul\":1416:1423   */\n      dup5\n        /* \"#utility.yul\":1412:1435   */\n      sub\n        /* \"#utility.yul\":1408:1440   */\n      slt\n        /* \"#utility.yul\":1405:1524   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":1443:1522   */\n      tag_468\n      tag_469\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":1405:1524   */\n    tag_467:\n        /* \"#utility.yul\":1563:1564   */\n      0x00\n        /* \"#utility.yul\":1588:1641   */\n      tag_470\n        /* \"#utility.yul\":1633:1640   */\n      dup5\n        /* \"#utility.yul\":1624:1630   */\n      dup3\n        /* \"#utility.yul\":1613:1622   */\n      dup6\n        /* \"#utility.yul\":1609:1631   */\n      add\n        /* \"#utility.yul\":1588:1641   */\n      tag_437\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":1578:1641   */\n      swap2\n      pop\n        /* \"#utility.yul\":1534:1651   */\n      pop\n        /* \"#utility.yul\":1329:1658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1664:2015   */\n    tag_120:\n        /* \"#utility.yul\":1734:1740   */\n      0x00\n        /* \"#utility.yul\":1783:1785   */\n      0x20\n        /* \"#utility.yul\":1771:1780   */\n      dup3\n        /* \"#utility.yul\":1762:1769   */\n      dup5\n        /* \"#utility.yul\":1758:1781   */\n      sub\n        /* \"#utility.yul\":1754:1786   */\n      slt\n        /* \"#utility.yul\":1751:1870   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":1789:1868   */\n      tag_473\n      tag_469\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":1751:1870   */\n    tag_472:\n        /* \"#utility.yul\":1909:1910   */\n      0x00\n        /* \"#utility.yul\":1934:1998   */\n      tag_474\n        /* \"#utility.yul\":1990:1997   */\n      dup5\n        /* \"#utility.yul\":1981:1987   */\n      dup3\n        /* \"#utility.yul\":1970:1979   */\n      dup6\n        /* \"#utility.yul\":1966:1988   */\n      add\n        /* \"#utility.yul\":1934:1998   */\n      tag_441\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":1924:1998   */\n      swap2\n      pop\n        /* \"#utility.yul\":1880:2008   */\n      pop\n        /* \"#utility.yul\":1664:2015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2021:2580   */\n    tag_30:\n        /* \"#utility.yul\":2107:2113   */\n      0x00\n        /* \"#utility.yul\":2115:2121   */\n      dup1\n        /* \"#utility.yul\":2164:2166   */\n      0x20\n        /* \"#utility.yul\":2152:2161   */\n      dup4\n        /* \"#utility.yul\":2143:2150   */\n      dup6\n        /* \"#utility.yul\":2139:2162   */\n      sub\n        /* \"#utility.yul\":2135:2167   */\n      slt\n        /* \"#utility.yul\":2132:2251   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":2170:2249   */\n      tag_477\n      tag_469\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":2132:2251   */\n    tag_476:\n        /* \"#utility.yul\":2318:2319   */\n      0x00\n        /* \"#utility.yul\":2307:2316   */\n      dup4\n        /* \"#utility.yul\":2303:2320   */\n      add\n        /* \"#utility.yul\":2290:2321   */\n      calldataload\n        /* \"#utility.yul\":2348:2366   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2340:2346   */\n      dup2\n        /* \"#utility.yul\":2337:2367   */\n      gt\n        /* \"#utility.yul\":2334:2451   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":2370:2449   */\n      tag_479\n      tag_480\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":2334:2451   */\n    tag_478:\n        /* \"#utility.yul\":2483:2563   */\n      tag_481\n        /* \"#utility.yul\":2555:2562   */\n      dup6\n        /* \"#utility.yul\":2546:2552   */\n      dup3\n        /* \"#utility.yul\":2535:2544   */\n      dup7\n        /* \"#utility.yul\":2531:2553   */\n      add\n        /* \"#utility.yul\":2483:2563   */\n      tag_444\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":2465:2563   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2261:2573   */\n      pop\n        /* \"#utility.yul\":2021:2580   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2586:2931   */\n    tag_410:\n        /* \"#utility.yul\":2653:2659   */\n      0x00\n        /* \"#utility.yul\":2702:2704   */\n      0x20\n        /* \"#utility.yul\":2690:2699   */\n      dup3\n        /* \"#utility.yul\":2681:2688   */\n      dup5\n        /* \"#utility.yul\":2677:2700   */\n      sub\n        /* \"#utility.yul\":2673:2705   */\n      slt\n        /* \"#utility.yul\":2670:2789   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":2708:2787   */\n      tag_484\n      tag_469\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":2670:2789   */\n    tag_483:\n        /* \"#utility.yul\":2828:2829   */\n      0x00\n        /* \"#utility.yul\":2853:2914   */\n      tag_485\n        /* \"#utility.yul\":2906:2913   */\n      dup5\n        /* \"#utility.yul\":2897:2903   */\n      dup3\n        /* \"#utility.yul\":2886:2895   */\n      dup6\n        /* \"#utility.yul\":2882:2904   */\n      add\n        /* \"#utility.yul\":2853:2914   */\n      tag_455\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":2843:2914   */\n      swap2\n      pop\n        /* \"#utility.yul\":2799:2924   */\n      pop\n        /* \"#utility.yul\":2586:2931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2937:3266   */\n    tag_44:\n        /* \"#utility.yul\":2996:3002   */\n      0x00\n        /* \"#utility.yul\":3045:3047   */\n      0x20\n        /* \"#utility.yul\":3033:3042   */\n      dup3\n        /* \"#utility.yul\":3024:3031   */\n      dup5\n        /* \"#utility.yul\":3020:3043   */\n      sub\n        /* \"#utility.yul\":3016:3048   */\n      slt\n        /* \"#utility.yul\":3013:3132   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":3051:3130   */\n      tag_488\n      tag_469\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":3013:3132   */\n    tag_487:\n        /* \"#utility.yul\":3171:3172   */\n      0x00\n        /* \"#utility.yul\":3196:3249   */\n      tag_489\n        /* \"#utility.yul\":3241:3248   */\n      dup5\n        /* \"#utility.yul\":3232:3238   */\n      dup3\n        /* \"#utility.yul\":3221:3230   */\n      dup6\n        /* \"#utility.yul\":3217:3239   */\n      add\n        /* \"#utility.yul\":3196:3249   */\n      tag_459\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":3186:3249   */\n      swap2\n      pop\n        /* \"#utility.yul\":3142:3259   */\n      pop\n        /* \"#utility.yul\":2937:3266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3272:3623   */\n    tag_213:\n        /* \"#utility.yul\":3342:3348   */\n      0x00\n        /* \"#utility.yul\":3391:3393   */\n      0x20\n        /* \"#utility.yul\":3379:3388   */\n      dup3\n        /* \"#utility.yul\":3370:3377   */\n      dup5\n        /* \"#utility.yul\":3366:3389   */\n      sub\n        /* \"#utility.yul\":3362:3394   */\n      slt\n        /* \"#utility.yul\":3359:3478   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":3397:3476   */\n      tag_492\n      tag_469\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":3359:3478   */\n    tag_491:\n        /* \"#utility.yul\":3517:3518   */\n      0x00\n        /* \"#utility.yul\":3542:3606   */\n      tag_493\n        /* \"#utility.yul\":3598:3605   */\n      dup5\n        /* \"#utility.yul\":3589:3595   */\n      dup3\n        /* \"#utility.yul\":3578:3587   */\n      dup6\n        /* \"#utility.yul\":3574:3596   */\n      add\n        /* \"#utility.yul\":3542:3606   */\n      tag_463\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":3532:3606   */\n      swap2\n      pop\n        /* \"#utility.yul\":3488:3616   */\n      pop\n        /* \"#utility.yul\":3272:3623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3629:4103   */\n    tag_76:\n        /* \"#utility.yul\":3697:3703   */\n      0x00\n        /* \"#utility.yul\":3705:3711   */\n      dup1\n        /* \"#utility.yul\":3754:3756   */\n      0x40\n        /* \"#utility.yul\":3742:3751   */\n      dup4\n        /* \"#utility.yul\":3733:3740   */\n      dup6\n        /* \"#utility.yul\":3729:3752   */\n      sub\n        /* \"#utility.yul\":3725:3757   */\n      slt\n        /* \"#utility.yul\":3722:3841   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":3760:3839   */\n      tag_496\n      tag_469\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":3722:3841   */\n    tag_495:\n        /* \"#utility.yul\":3880:3881   */\n      0x00\n        /* \"#utility.yul\":3905:3958   */\n      tag_497\n        /* \"#utility.yul\":3950:3957   */\n      dup6\n        /* \"#utility.yul\":3941:3947   */\n      dup3\n        /* \"#utility.yul\":3930:3939   */\n      dup7\n        /* \"#utility.yul\":3926:3948   */\n      add\n        /* \"#utility.yul\":3905:3958   */\n      tag_459\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":3895:3958   */\n      swap3\n      pop\n        /* \"#utility.yul\":3851:3968   */\n      pop\n        /* \"#utility.yul\":4007:4009   */\n      0x20\n        /* \"#utility.yul\":4033:4086   */\n      tag_498\n        /* \"#utility.yul\":4078:4085   */\n      dup6\n        /* \"#utility.yul\":4069:4075   */\n      dup3\n        /* \"#utility.yul\":4058:4067   */\n      dup7\n        /* \"#utility.yul\":4054:4076   */\n      add\n        /* \"#utility.yul\":4033:4086   */\n      tag_459\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":4023:4086   */\n      swap2\n      pop\n        /* \"#utility.yul\":3978:4096   */\n      pop\n        /* \"#utility.yul\":3629:4103   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4109:4288   */\n    tag_499:\n        /* \"#utility.yul\":4178:4188   */\n      0x00\n        /* \"#utility.yul\":4199:4245   */\n      tag_501\n        /* \"#utility.yul\":4241:4244   */\n      dup4\n        /* \"#utility.yul\":4233:4239   */\n      dup4\n        /* \"#utility.yul\":4199:4245   */\n      tag_502\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":4277:4281   */\n      0x20\n        /* \"#utility.yul\":4272:4275   */\n      dup4\n        /* \"#utility.yul\":4268:4282   */\n      add\n        /* \"#utility.yul\":4254:4282   */\n      swap1\n      pop\n        /* \"#utility.yul\":4109:4288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4294:4412   */\n    tag_503:\n        /* \"#utility.yul\":4381:4405   */\n      tag_505\n        /* \"#utility.yul\":4399:4404   */\n      dup2\n        /* \"#utility.yul\":4381:4405   */\n      tag_506\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":4376:4379   */\n      dup3\n        /* \"#utility.yul\":4369:4406   */\n      mstore\n        /* \"#utility.yul\":4294:4412   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:4985   */\n    tag_507:\n        /* \"#utility.yul\":4576:4579   */\n      0x00\n        /* \"#utility.yul\":4597:4683   */\n      tag_509\n        /* \"#utility.yul\":4676:4682   */\n      dup4\n        /* \"#utility.yul\":4671:4674   */\n      dup6\n        /* \"#utility.yul\":4597:4683   */\n      tag_510\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":4590:4683   */\n      swap4\n      pop\n        /* \"#utility.yul\":4707:4773   */\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4699:4705   */\n      dup4\n        /* \"#utility.yul\":4696:4774   */\n      gt\n        /* \"#utility.yul\":4693:4858   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":4777:4856   */\n      tag_512\n      tag_513\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":4693:4858   */\n    tag_511:\n        /* \"#utility.yul\":4889:4893   */\n      0x20\n        /* \"#utility.yul\":4881:4887   */\n      dup4\n        /* \"#utility.yul\":4877:4894   */\n      mul\n        /* \"#utility.yul\":4867:4894   */\n      swap3\n      pop\n        /* \"#utility.yul\":4904:4947   */\n      tag_514\n        /* \"#utility.yul\":4940:4946   */\n      dup4\n        /* \"#utility.yul\":4935:4938   */\n      dup6\n        /* \"#utility.yul\":4928:4933   */\n      dup5\n        /* \"#utility.yul\":4904:4947   */\n      tag_515\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":4972:4978   */\n      dup3\n        /* \"#utility.yul\":4967:4970   */\n      dup5\n        /* \"#utility.yul\":4963:4979   */\n      add\n        /* \"#utility.yul\":4956:4979   */\n      swap1\n      pop\n        /* \"#utility.yul\":4448:4985   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5021:5753   */\n    tag_516:\n        /* \"#utility.yul\":5140:5143   */\n      0x00\n        /* \"#utility.yul\":5169:5223   */\n      tag_518\n        /* \"#utility.yul\":5217:5222   */\n      dup3\n        /* \"#utility.yul\":5169:5223   */\n      tag_519\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":5239:5325   */\n      tag_520\n        /* \"#utility.yul\":5318:5324   */\n      dup2\n        /* \"#utility.yul\":5313:5316   */\n      dup6\n        /* \"#utility.yul\":5239:5325   */\n      tag_510\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":5232:5325   */\n      swap4\n      pop\n        /* \"#utility.yul\":5349:5405   */\n      tag_521\n        /* \"#utility.yul\":5399:5404   */\n      dup4\n        /* \"#utility.yul\":5349:5405   */\n      tag_522\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":5428:5435   */\n      dup1\n        /* \"#utility.yul\":5459:5460   */\n      0x00\n        /* \"#utility.yul\":5444:5728   */\n    tag_523:\n        /* \"#utility.yul\":5469:5475   */\n      dup4\n        /* \"#utility.yul\":5466:5467   */\n      dup2\n        /* \"#utility.yul\":5463:5476   */\n      lt\n        /* \"#utility.yul\":5444:5728   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":5545:5551   */\n      dup2\n        /* \"#utility.yul\":5539:5552   */\n      mload\n        /* \"#utility.yul\":5572:5635   */\n      tag_526\n        /* \"#utility.yul\":5631:5634   */\n      dup9\n        /* \"#utility.yul\":5616:5629   */\n      dup3\n        /* \"#utility.yul\":5572:5635   */\n      tag_499\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":5565:5635   */\n      swap8\n      pop\n        /* \"#utility.yul\":5658:5718   */\n      tag_527\n        /* \"#utility.yul\":5711:5717   */\n      dup4\n        /* \"#utility.yul\":5658:5718   */\n      tag_528\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":5648:5718   */\n      swap3\n      pop\n        /* \"#utility.yul\":5504:5728   */\n      pop\n        /* \"#utility.yul\":5491:5492   */\n      0x01\n        /* \"#utility.yul\":5488:5489   */\n      dup2\n        /* \"#utility.yul\":5484:5493   */\n      add\n        /* \"#utility.yul\":5479:5493   */\n      swap1\n      pop\n        /* \"#utility.yul\":5444:5728   */\n      jump(tag_523)\n    tag_525:\n        /* \"#utility.yul\":5448:5462   */\n      pop\n        /* \"#utility.yul\":5744:5747   */\n      dup6\n        /* \"#utility.yul\":5737:5747   */\n      swap4\n      pop\n        /* \"#utility.yul\":5145:5753   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5021:5753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5759:6132   */\n    tag_529:\n        /* \"#utility.yul\":5863:5866   */\n      0x00\n        /* \"#utility.yul\":5891:5929   */\n      tag_531\n        /* \"#utility.yul\":5923:5928   */\n      dup3\n        /* \"#utility.yul\":5891:5929   */\n      tag_532\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":5945:6033   */\n      tag_533\n        /* \"#utility.yul\":6026:6032   */\n      dup2\n        /* \"#utility.yul\":6021:6024   */\n      dup6\n        /* \"#utility.yul\":5945:6033   */\n      tag_534\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":5938:6033   */\n      swap4\n      pop\n        /* \"#utility.yul\":6042:6094   */\n      tag_535\n        /* \"#utility.yul\":6087:6093   */\n      dup2\n        /* \"#utility.yul\":6082:6085   */\n      dup6\n        /* \"#utility.yul\":6075:6079   */\n      0x20\n        /* \"#utility.yul\":6068:6073   */\n      dup7\n        /* \"#utility.yul\":6064:6080   */\n      add\n        /* \"#utility.yul\":6042:6094   */\n      tag_536\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":6119:6125   */\n      dup1\n        /* \"#utility.yul\":6114:6117   */\n      dup5\n        /* \"#utility.yul\":6110:6126   */\n      add\n        /* \"#utility.yul\":6103:6126   */\n      swap2\n      pop\n        /* \"#utility.yul\":5867:6132   */\n      pop\n        /* \"#utility.yul\":5759:6132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6138:6297   */\n    tag_537:\n        /* \"#utility.yul\":6239:6290   */\n      tag_539\n        /* \"#utility.yul\":6284:6289   */\n      dup2\n        /* \"#utility.yul\":6239:6290   */\n      tag_540\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":6234:6237   */\n      dup3\n        /* \"#utility.yul\":6227:6291   */\n      mstore\n        /* \"#utility.yul\":6138:6297   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6303:6466   */\n    tag_541:\n        /* \"#utility.yul\":6406:6459   */\n      tag_543\n        /* \"#utility.yul\":6453:6458   */\n      dup2\n        /* \"#utility.yul\":6406:6459   */\n      tag_544\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":6401:6404   */\n      dup3\n        /* \"#utility.yul\":6394:6460   */\n      mstore\n        /* \"#utility.yul\":6303:6466   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6472:6836   */\n    tag_545:\n        /* \"#utility.yul\":6560:6563   */\n      0x00\n        /* \"#utility.yul\":6588:6627   */\n      tag_547\n        /* \"#utility.yul\":6621:6626   */\n      dup3\n        /* \"#utility.yul\":6588:6627   */\n      tag_548\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":6643:6714   */\n      tag_549\n        /* \"#utility.yul\":6707:6713   */\n      dup2\n        /* \"#utility.yul\":6702:6705   */\n      dup6\n        /* \"#utility.yul\":6643:6714   */\n      tag_550\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":6636:6714   */\n      swap4\n      pop\n        /* \"#utility.yul\":6723:6775   */\n      tag_551\n        /* \"#utility.yul\":6768:6774   */\n      dup2\n        /* \"#utility.yul\":6763:6766   */\n      dup6\n        /* \"#utility.yul\":6756:6760   */\n      0x20\n        /* \"#utility.yul\":6749:6754   */\n      dup7\n        /* \"#utility.yul\":6745:6761   */\n      add\n        /* \"#utility.yul\":6723:6775   */\n      tag_536\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":6800:6829   */\n      tag_552\n        /* \"#utility.yul\":6822:6828   */\n      dup2\n        /* \"#utility.yul\":6800:6829   */\n      tag_553\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":6795:6798   */\n      dup5\n        /* \"#utility.yul\":6791:6830   */\n      add\n        /* \"#utility.yul\":6784:6830   */\n      swap2\n      pop\n        /* \"#utility.yul\":6564:6836   */\n      pop\n        /* \"#utility.yul\":6472:6836   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6842:7208   */\n    tag_554:\n        /* \"#utility.yul\":6984:6987   */\n      0x00\n        /* \"#utility.yul\":7005:7072   */\n      tag_556\n        /* \"#utility.yul\":7069:7071   */\n      0x18\n        /* \"#utility.yul\":7064:7067   */\n      dup4\n        /* \"#utility.yul\":7005:7072   */\n      tag_550\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":6998:7072   */\n      swap2\n      pop\n        /* \"#utility.yul\":7081:7174   */\n      tag_557\n        /* \"#utility.yul\":7170:7173   */\n      dup3\n        /* \"#utility.yul\":7081:7174   */\n      tag_558\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":7199:7201   */\n      0x20\n        /* \"#utility.yul\":7194:7197   */\n      dup3\n        /* \"#utility.yul\":7190:7202   */\n      add\n        /* \"#utility.yul\":7183:7202   */\n      swap1\n      pop\n        /* \"#utility.yul\":6842:7208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7214:7580   */\n    tag_559:\n        /* \"#utility.yul\":7356:7359   */\n      0x00\n        /* \"#utility.yul\":7377:7444   */\n      tag_561\n        /* \"#utility.yul\":7441:7443   */\n      0x2a\n        /* \"#utility.yul\":7436:7439   */\n      dup4\n        /* \"#utility.yul\":7377:7444   */\n      tag_550\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":7370:7444   */\n      swap2\n      pop\n        /* \"#utility.yul\":7453:7546   */\n      tag_562\n        /* \"#utility.yul\":7542:7545   */\n      dup3\n        /* \"#utility.yul\":7453:7546   */\n      tag_563\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":7571:7573   */\n      0x40\n        /* \"#utility.yul\":7566:7569   */\n      dup3\n        /* \"#utility.yul\":7562:7574   */\n      add\n        /* \"#utility.yul\":7555:7574   */\n      swap1\n      pop\n        /* \"#utility.yul\":7214:7580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7586:7952   */\n    tag_564:\n        /* \"#utility.yul\":7728:7731   */\n      0x00\n        /* \"#utility.yul\":7749:7816   */\n      tag_566\n        /* \"#utility.yul\":7813:7815   */\n      0x26\n        /* \"#utility.yul\":7808:7811   */\n      dup4\n        /* \"#utility.yul\":7749:7816   */\n      tag_550\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":7742:7816   */\n      swap2\n      pop\n        /* \"#utility.yul\":7825:7918   */\n      tag_567\n        /* \"#utility.yul\":7914:7917   */\n      dup3\n        /* \"#utility.yul\":7825:7918   */\n      tag_568\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":7943:7945   */\n      0x40\n        /* \"#utility.yul\":7938:7941   */\n      dup3\n        /* \"#utility.yul\":7934:7946   */\n      add\n        /* \"#utility.yul\":7927:7946   */\n      swap1\n      pop\n        /* \"#utility.yul\":7586:7952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7958:8324   */\n    tag_569:\n        /* \"#utility.yul\":8100:8103   */\n      0x00\n        /* \"#utility.yul\":8121:8188   */\n      tag_571\n        /* \"#utility.yul\":8185:8187   */\n      0x31\n        /* \"#utility.yul\":8180:8183   */\n      dup4\n        /* \"#utility.yul\":8121:8188   */\n      tag_550\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":8114:8188   */\n      swap2\n      pop\n        /* \"#utility.yul\":8197:8290   */\n      tag_572\n        /* \"#utility.yul\":8286:8289   */\n      dup3\n        /* \"#utility.yul\":8197:8290   */\n      tag_573\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":8315:8317   */\n      0x40\n        /* \"#utility.yul\":8310:8313   */\n      dup3\n        /* \"#utility.yul\":8306:8318   */\n      add\n        /* \"#utility.yul\":8299:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":7958:8324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8330:8696   */\n    tag_574:\n        /* \"#utility.yul\":8472:8475   */\n      0x00\n        /* \"#utility.yul\":8493:8560   */\n      tag_576\n        /* \"#utility.yul\":8557:8559   */\n      0x20\n        /* \"#utility.yul\":8552:8555   */\n      dup4\n        /* \"#utility.yul\":8493:8560   */\n      tag_550\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":8486:8560   */\n      swap2\n      pop\n        /* \"#utility.yul\":8569:8662   */\n      tag_577\n        /* \"#utility.yul\":8658:8661   */\n      dup3\n        /* \"#utility.yul\":8569:8662   */\n      tag_578\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":8687:8689   */\n      0x20\n        /* \"#utility.yul\":8682:8685   */\n      dup3\n        /* \"#utility.yul\":8678:8690   */\n      add\n        /* \"#utility.yul\":8671:8690   */\n      swap1\n      pop\n        /* \"#utility.yul\":8330:8696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8702:9068   */\n    tag_579:\n        /* \"#utility.yul\":8844:8847   */\n      0x00\n        /* \"#utility.yul\":8865:8932   */\n      tag_581\n        /* \"#utility.yul\":8929:8931   */\n      0x20\n        /* \"#utility.yul\":8924:8927   */\n      dup4\n        /* \"#utility.yul\":8865:8932   */\n      tag_550\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":8858:8932   */\n      swap2\n      pop\n        /* \"#utility.yul\":8941:9034   */\n      tag_582\n        /* \"#utility.yul\":9030:9033   */\n      dup3\n        /* \"#utility.yul\":8941:9034   */\n      tag_583\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":9059:9061   */\n      0x20\n        /* \"#utility.yul\":9054:9057   */\n      dup3\n        /* \"#utility.yul\":9050:9062   */\n      add\n        /* \"#utility.yul\":9043:9062   */\n      swap1\n      pop\n        /* \"#utility.yul\":8702:9068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9074:9440   */\n    tag_584:\n        /* \"#utility.yul\":9216:9219   */\n      0x00\n        /* \"#utility.yul\":9237:9304   */\n      tag_586\n        /* \"#utility.yul\":9301:9303   */\n      0x1e\n        /* \"#utility.yul\":9296:9299   */\n      dup4\n        /* \"#utility.yul\":9237:9304   */\n      tag_550\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":9230:9304   */\n      swap2\n      pop\n        /* \"#utility.yul\":9313:9406   */\n      tag_587\n        /* \"#utility.yul\":9402:9405   */\n      dup3\n        /* \"#utility.yul\":9313:9406   */\n      tag_588\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":9431:9433   */\n      0x20\n        /* \"#utility.yul\":9426:9429   */\n      dup3\n        /* \"#utility.yul\":9422:9434   */\n      add\n        /* \"#utility.yul\":9415:9434   */\n      swap1\n      pop\n        /* \"#utility.yul\":9074:9440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9446:9812   */\n    tag_589:\n        /* \"#utility.yul\":9588:9591   */\n      0x00\n        /* \"#utility.yul\":9609:9676   */\n      tag_591\n        /* \"#utility.yul\":9673:9675   */\n      0x1d\n        /* \"#utility.yul\":9668:9671   */\n      dup4\n        /* \"#utility.yul\":9609:9676   */\n      tag_550\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":9602:9676   */\n      swap2\n      pop\n        /* \"#utility.yul\":9685:9778   */\n      tag_592\n        /* \"#utility.yul\":9774:9777   */\n      dup3\n        /* \"#utility.yul\":9685:9778   */\n      tag_593\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":9803:9805   */\n      0x20\n        /* \"#utility.yul\":9798:9801   */\n      dup3\n        /* \"#utility.yul\":9794:9806   */\n      add\n        /* \"#utility.yul\":9787:9806   */\n      swap1\n      pop\n        /* \"#utility.yul\":9446:9812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9818:10184   */\n    tag_594:\n        /* \"#utility.yul\":9960:9963   */\n      0x00\n        /* \"#utility.yul\":9981:10048   */\n      tag_596\n        /* \"#utility.yul\":10045:10047   */\n      0x39\n        /* \"#utility.yul\":10040:10043   */\n      dup4\n        /* \"#utility.yul\":9981:10048   */\n      tag_550\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":9974:10048   */\n      swap2\n      pop\n        /* \"#utility.yul\":10057:10150   */\n      tag_597\n        /* \"#utility.yul\":10146:10149   */\n      dup3\n        /* \"#utility.yul\":10057:10150   */\n      tag_598\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":10175:10177   */\n      0x40\n        /* \"#utility.yul\":10170:10173   */\n      dup3\n        /* \"#utility.yul\":10166:10178   */\n      add\n        /* \"#utility.yul\":10159:10178   */\n      swap1\n      pop\n        /* \"#utility.yul\":9818:10184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10190:10298   */\n    tag_502:\n        /* \"#utility.yul\":10267:10291   */\n      tag_600\n        /* \"#utility.yul\":10285:10290   */\n      dup2\n        /* \"#utility.yul\":10267:10291   */\n      tag_601\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":10262:10265   */\n      dup3\n        /* \"#utility.yul\":10255:10292   */\n      mstore\n        /* \"#utility.yul\":10190:10298   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10304:10422   */\n    tag_602:\n        /* \"#utility.yul\":10391:10415   */\n      tag_604\n        /* \"#utility.yul\":10409:10414   */\n      dup2\n        /* \"#utility.yul\":10391:10415   */\n      tag_601\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":10386:10389   */\n      dup3\n        /* \"#utility.yul\":10379:10416   */\n      mstore\n        /* \"#utility.yul\":10304:10422   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10428:10699   */\n    tag_424:\n        /* \"#utility.yul\":10558:10561   */\n      0x00\n        /* \"#utility.yul\":10580:10673   */\n      tag_606\n        /* \"#utility.yul\":10669:10672   */\n      dup3\n        /* \"#utility.yul\":10660:10666   */\n      dup5\n        /* \"#utility.yul\":10580:10673   */\n      tag_529\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":10573:10673   */\n      swap2\n      pop\n        /* \"#utility.yul\":10690:10693   */\n      dup2\n        /* \"#utility.yul\":10683:10693   */\n      swap1\n      pop\n        /* \"#utility.yul\":10428:10699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10705:10927   */\n    tag_73:\n        /* \"#utility.yul\":10798:10802   */\n      0x00\n        /* \"#utility.yul\":10836:10838   */\n      0x20\n        /* \"#utility.yul\":10825:10834   */\n      dup3\n        /* \"#utility.yul\":10821:10839   */\n      add\n        /* \"#utility.yul\":10813:10839   */\n      swap1\n      pop\n        /* \"#utility.yul\":10849:10920   */\n      tag_608\n        /* \"#utility.yul\":10917:10918   */\n      0x00\n        /* \"#utility.yul\":10906:10915   */\n      dup4\n        /* \"#utility.yul\":10902:10919   */\n      add\n        /* \"#utility.yul\":10893:10899   */\n      dup5\n        /* \"#utility.yul\":10849:10920   */\n      tag_503\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":10705:10927   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10933:11375   */\n    tag_168:\n        /* \"#utility.yul\":11082:11086   */\n      0x00\n        /* \"#utility.yul\":11120:11122   */\n      0x60\n        /* \"#utility.yul\":11109:11118   */\n      dup3\n        /* \"#utility.yul\":11105:11123   */\n      add\n        /* \"#utility.yul\":11097:11123   */\n      swap1\n      pop\n        /* \"#utility.yul\":11133:11204   */\n      tag_610\n        /* \"#utility.yul\":11201:11202   */\n      0x00\n        /* \"#utility.yul\":11190:11199   */\n      dup4\n        /* \"#utility.yul\":11186:11203   */\n      add\n        /* \"#utility.yul\":11177:11183   */\n      dup7\n        /* \"#utility.yul\":11133:11204   */\n      tag_503\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":11214:11286   */\n      tag_611\n        /* \"#utility.yul\":11282:11284   */\n      0x20\n        /* \"#utility.yul\":11271:11280   */\n      dup4\n        /* \"#utility.yul\":11267:11285   */\n      add\n        /* \"#utility.yul\":11258:11264   */\n      dup6\n        /* \"#utility.yul\":11214:11286   */\n      tag_503\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":11296:11368   */\n      tag_612\n        /* \"#utility.yul\":11364:11366   */\n      0x40\n        /* \"#utility.yul\":11353:11362   */\n      dup4\n        /* \"#utility.yul\":11349:11367   */\n      add\n        /* \"#utility.yul\":11340:11346   */\n      dup5\n        /* \"#utility.yul\":11296:11368   */\n      tag_602\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":10933:11375   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11381:11884   */\n    tag_177:\n        /* \"#utility.yul\":11562:11566   */\n      0x00\n        /* \"#utility.yul\":11600:11602   */\n      0x40\n        /* \"#utility.yul\":11589:11598   */\n      dup3\n        /* \"#utility.yul\":11585:11603   */\n      add\n        /* \"#utility.yul\":11577:11603   */\n      swap1\n      pop\n        /* \"#utility.yul\":11613:11684   */\n      tag_614\n        /* \"#utility.yul\":11681:11682   */\n      0x00\n        /* \"#utility.yul\":11670:11679   */\n      dup4\n        /* \"#utility.yul\":11666:11683   */\n      add\n        /* \"#utility.yul\":11657:11663   */\n      dup7\n        /* \"#utility.yul\":11613:11684   */\n      tag_503\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":11731:11740   */\n      dup2\n        /* \"#utility.yul\":11725:11729   */\n      dup2\n        /* \"#utility.yul\":11721:11741   */\n      sub\n        /* \"#utility.yul\":11716:11718   */\n      0x20\n        /* \"#utility.yul\":11705:11714   */\n      dup4\n        /* \"#utility.yul\":11701:11719   */\n      add\n        /* \"#utility.yul\":11694:11742   */\n      mstore\n        /* \"#utility.yul\":11759:11877   */\n      tag_615\n        /* \"#utility.yul\":11872:11876   */\n      dup2\n        /* \"#utility.yul\":11863:11869   */\n      dup5\n        /* \"#utility.yul\":11855:11861   */\n      dup7\n        /* \"#utility.yul\":11759:11877   */\n      tag_507\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":11751:11877   */\n      swap1\n      pop\n        /* \"#utility.yul\":11381:11884   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11890:12222   */\n    tag_403:\n        /* \"#utility.yul\":12011:12015   */\n      0x00\n        /* \"#utility.yul\":12049:12051   */\n      0x40\n        /* \"#utility.yul\":12038:12047   */\n      dup3\n        /* \"#utility.yul\":12034:12052   */\n      add\n        /* \"#utility.yul\":12026:12052   */\n      swap1\n      pop\n        /* \"#utility.yul\":12062:12133   */\n      tag_617\n        /* \"#utility.yul\":12130:12131   */\n      0x00\n        /* \"#utility.yul\":12119:12128   */\n      dup4\n        /* \"#utility.yul\":12115:12132   */\n      add\n        /* \"#utility.yul\":12106:12112   */\n      dup6\n        /* \"#utility.yul\":12062:12133   */\n      tag_503\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":12143:12215   */\n      tag_618\n        /* \"#utility.yul\":12211:12213   */\n      0x20\n        /* \"#utility.yul\":12200:12209   */\n      dup4\n        /* \"#utility.yul\":12196:12214   */\n      add\n        /* \"#utility.yul\":12187:12193   */\n      dup5\n        /* \"#utility.yul\":12143:12215   */\n      tag_602\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":11890:12222   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12228:12670   */\n    tag_238:\n        /* \"#utility.yul\":12377:12381   */\n      0x00\n        /* \"#utility.yul\":12415:12417   */\n      0x60\n        /* \"#utility.yul\":12404:12413   */\n      dup3\n        /* \"#utility.yul\":12400:12418   */\n      add\n        /* \"#utility.yul\":12392:12418   */\n      swap1\n      pop\n        /* \"#utility.yul\":12428:12499   */\n      tag_620\n        /* \"#utility.yul\":12496:12497   */\n      0x00\n        /* \"#utility.yul\":12485:12494   */\n      dup4\n        /* \"#utility.yul\":12481:12498   */\n      add\n        /* \"#utility.yul\":12472:12478   */\n      dup7\n        /* \"#utility.yul\":12428:12499   */\n      tag_503\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":12509:12581   */\n      tag_621\n        /* \"#utility.yul\":12577:12579   */\n      0x20\n        /* \"#utility.yul\":12566:12575   */\n      dup4\n        /* \"#utility.yul\":12562:12580   */\n      add\n        /* \"#utility.yul\":12553:12559   */\n      dup6\n        /* \"#utility.yul\":12509:12581   */\n      tag_602\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":12591:12663   */\n      tag_622\n        /* \"#utility.yul\":12659:12661   */\n      0x40\n        /* \"#utility.yul\":12648:12657   */\n      dup4\n        /* \"#utility.yul\":12644:12662   */\n      add\n        /* \"#utility.yul\":12635:12641   */\n      dup5\n        /* \"#utility.yul\":12591:12663   */\n      tag_602\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":12228:12670   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12676:13049   */\n    tag_49:\n        /* \"#utility.yul\":12819:12823   */\n      0x00\n        /* \"#utility.yul\":12857:12859   */\n      0x20\n        /* \"#utility.yul\":12846:12855   */\n      dup3\n        /* \"#utility.yul\":12842:12860   */\n      add\n        /* \"#utility.yul\":12834:12860   */\n      swap1\n      pop\n        /* \"#utility.yul\":12906:12915   */\n      dup2\n        /* \"#utility.yul\":12900:12904   */\n      dup2\n        /* \"#utility.yul\":12896:12916   */\n      sub\n        /* \"#utility.yul\":12892:12893   */\n      0x00\n        /* \"#utility.yul\":12881:12890   */\n      dup4\n        /* \"#utility.yul\":12877:12894   */\n      add\n        /* \"#utility.yul\":12870:12917   */\n      mstore\n        /* \"#utility.yul\":12934:13042   */\n      tag_624\n        /* \"#utility.yul\":13037:13041   */\n      dup2\n        /* \"#utility.yul\":13028:13034   */\n      dup5\n        /* \"#utility.yul\":12934:13042   */\n      tag_516\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":12926:13042   */\n      swap1\n      pop\n        /* \"#utility.yul\":12676:13049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13055:13305   */\n    tag_41:\n        /* \"#utility.yul\":13162:13166   */\n      0x00\n        /* \"#utility.yul\":13200:13202   */\n      0x20\n        /* \"#utility.yul\":13189:13198   */\n      dup3\n        /* \"#utility.yul\":13185:13203   */\n      add\n        /* \"#utility.yul\":13177:13203   */\n      swap1\n      pop\n        /* \"#utility.yul\":13213:13298   */\n      tag_626\n        /* \"#utility.yul\":13295:13296   */\n      0x00\n        /* \"#utility.yul\":13284:13293   */\n      dup4\n        /* \"#utility.yul\":13280:13297   */\n      add\n        /* \"#utility.yul\":13271:13277   */\n      dup5\n        /* \"#utility.yul\":13213:13298   */\n      tag_537\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":13055:13305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13311:13565   */\n    tag_91:\n        /* \"#utility.yul\":13420:13424   */\n      0x00\n        /* \"#utility.yul\":13458:13460   */\n      0x20\n        /* \"#utility.yul\":13447:13456   */\n      dup3\n        /* \"#utility.yul\":13443:13461   */\n      add\n        /* \"#utility.yul\":13435:13461   */\n      swap1\n      pop\n        /* \"#utility.yul\":13471:13558   */\n      tag_628\n        /* \"#utility.yul\":13555:13556   */\n      0x00\n        /* \"#utility.yul\":13544:13553   */\n      dup4\n        /* \"#utility.yul\":13540:13557   */\n      add\n        /* \"#utility.yul\":13531:13537   */\n      dup5\n        /* \"#utility.yul\":13471:13558   */\n      tag_541\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":13311:13565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13571:13884   */\n    tag_433:\n        /* \"#utility.yul\":13684:13688   */\n      0x00\n        /* \"#utility.yul\":13722:13724   */\n      0x20\n        /* \"#utility.yul\":13711:13720   */\n      dup3\n        /* \"#utility.yul\":13707:13725   */\n      add\n        /* \"#utility.yul\":13699:13725   */\n      swap1\n      pop\n        /* \"#utility.yul\":13771:13780   */\n      dup2\n        /* \"#utility.yul\":13765:13769   */\n      dup2\n        /* \"#utility.yul\":13761:13781   */\n      sub\n        /* \"#utility.yul\":13757:13758   */\n      0x00\n        /* \"#utility.yul\":13746:13755   */\n      dup4\n        /* \"#utility.yul\":13742:13759   */\n      add\n        /* \"#utility.yul\":13735:13782   */\n      mstore\n        /* \"#utility.yul\":13799:13877   */\n      tag_630\n        /* \"#utility.yul\":13872:13876   */\n      dup2\n        /* \"#utility.yul\":13863:13869   */\n      dup5\n        /* \"#utility.yul\":13799:13877   */\n      tag_545\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":13791:13877   */\n      swap1\n      pop\n        /* \"#utility.yul\":13571:13884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13890:14309   */\n    tag_108:\n        /* \"#utility.yul\":14056:14060   */\n      0x00\n        /* \"#utility.yul\":14094:14096   */\n      0x20\n        /* \"#utility.yul\":14083:14092   */\n      dup3\n        /* \"#utility.yul\":14079:14097   */\n      add\n        /* \"#utility.yul\":14071:14097   */\n      swap1\n      pop\n        /* \"#utility.yul\":14143:14152   */\n      dup2\n        /* \"#utility.yul\":14137:14141   */\n      dup2\n        /* \"#utility.yul\":14133:14153   */\n      sub\n        /* \"#utility.yul\":14129:14130   */\n      0x00\n        /* \"#utility.yul\":14118:14127   */\n      dup4\n        /* \"#utility.yul\":14114:14131   */\n      add\n        /* \"#utility.yul\":14107:14154   */\n      mstore\n        /* \"#utility.yul\":14171:14302   */\n      tag_632\n        /* \"#utility.yul\":14297:14301   */\n      dup2\n        /* \"#utility.yul\":14171:14302   */\n      tag_554\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":14163:14302   */\n      swap1\n      pop\n        /* \"#utility.yul\":13890:14309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14315:14734   */\n    tag_413:\n        /* \"#utility.yul\":14481:14485   */\n      0x00\n        /* \"#utility.yul\":14519:14521   */\n      0x20\n        /* \"#utility.yul\":14508:14517   */\n      dup3\n        /* \"#utility.yul\":14504:14522   */\n      add\n        /* \"#utility.yul\":14496:14522   */\n      swap1\n      pop\n        /* \"#utility.yul\":14568:14577   */\n      dup2\n        /* \"#utility.yul\":14562:14566   */\n      dup2\n        /* \"#utility.yul\":14558:14578   */\n      sub\n        /* \"#utility.yul\":14554:14555   */\n      0x00\n        /* \"#utility.yul\":14543:14552   */\n      dup4\n        /* \"#utility.yul\":14539:14556   */\n      add\n        /* \"#utility.yul\":14532:14579   */\n      mstore\n        /* \"#utility.yul\":14596:14727   */\n      tag_634\n        /* \"#utility.yul\":14722:14726   */\n      dup2\n        /* \"#utility.yul\":14596:14727   */\n      tag_559\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":14588:14727   */\n      swap1\n      pop\n        /* \"#utility.yul\":14315:14734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14740:15159   */\n    tag_356:\n        /* \"#utility.yul\":14906:14910   */\n      0x00\n        /* \"#utility.yul\":14944:14946   */\n      0x20\n        /* \"#utility.yul\":14933:14942   */\n      dup3\n        /* \"#utility.yul\":14929:14947   */\n      add\n        /* \"#utility.yul\":14921:14947   */\n      swap1\n      pop\n        /* \"#utility.yul\":14993:15002   */\n      dup2\n        /* \"#utility.yul\":14987:14991   */\n      dup2\n        /* \"#utility.yul\":14983:15003   */\n      sub\n        /* \"#utility.yul\":14979:14980   */\n      0x00\n        /* \"#utility.yul\":14968:14977   */\n      dup4\n        /* \"#utility.yul\":14964:14981   */\n      add\n        /* \"#utility.yul\":14957:15004   */\n      mstore\n        /* \"#utility.yul\":15021:15152   */\n      tag_636\n        /* \"#utility.yul\":15147:15151   */\n      dup2\n        /* \"#utility.yul\":15021:15152   */\n      tag_564\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":15013:15152   */\n      swap1\n      pop\n        /* \"#utility.yul\":14740:15159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15165:15584   */\n    tag_140:\n        /* \"#utility.yul\":15331:15335   */\n      0x00\n        /* \"#utility.yul\":15369:15371   */\n      0x20\n        /* \"#utility.yul\":15358:15367   */\n      dup3\n        /* \"#utility.yul\":15354:15372   */\n      add\n        /* \"#utility.yul\":15346:15372   */\n      swap1\n      pop\n        /* \"#utility.yul\":15418:15427   */\n      dup2\n        /* \"#utility.yul\":15412:15416   */\n      dup2\n        /* \"#utility.yul\":15408:15428   */\n      sub\n        /* \"#utility.yul\":15404:15405   */\n      0x00\n        /* \"#utility.yul\":15393:15402   */\n      dup4\n        /* \"#utility.yul\":15389:15406   */\n      add\n        /* \"#utility.yul\":15382:15429   */\n      mstore\n        /* \"#utility.yul\":15446:15577   */\n      tag_638\n        /* \"#utility.yul\":15572:15576   */\n      dup2\n        /* \"#utility.yul\":15446:15577   */\n      tag_569\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":15438:15577   */\n      swap1\n      pop\n        /* \"#utility.yul\":15165:15584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15590:16009   */\n    tag_123:\n        /* \"#utility.yul\":15756:15760   */\n      0x00\n        /* \"#utility.yul\":15794:15796   */\n      0x20\n        /* \"#utility.yul\":15783:15792   */\n      dup3\n        /* \"#utility.yul\":15779:15797   */\n      add\n        /* \"#utility.yul\":15771:15797   */\n      swap1\n      pop\n        /* \"#utility.yul\":15843:15852   */\n      dup2\n        /* \"#utility.yul\":15837:15841   */\n      dup2\n        /* \"#utility.yul\":15833:15853   */\n      sub\n        /* \"#utility.yul\":15829:15830   */\n      0x00\n        /* \"#utility.yul\":15818:15827   */\n      dup4\n        /* \"#utility.yul\":15814:15831   */\n      add\n        /* \"#utility.yul\":15807:15854   */\n      mstore\n        /* \"#utility.yul\":15871:16002   */\n      tag_640\n        /* \"#utility.yul\":15997:16001   */\n      dup2\n        /* \"#utility.yul\":15871:16002   */\n      tag_574\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":15863:16002   */\n      swap1\n      pop\n        /* \"#utility.yul\":15590:16009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16015:16434   */\n    tag_184:\n        /* \"#utility.yul\":16181:16185   */\n      0x00\n        /* \"#utility.yul\":16219:16221   */\n      0x20\n        /* \"#utility.yul\":16208:16217   */\n      dup3\n        /* \"#utility.yul\":16204:16222   */\n      add\n        /* \"#utility.yul\":16196:16222   */\n      swap1\n      pop\n        /* \"#utility.yul\":16268:16277   */\n      dup2\n        /* \"#utility.yul\":16262:16266   */\n      dup2\n        /* \"#utility.yul\":16258:16278   */\n      sub\n        /* \"#utility.yul\":16254:16255   */\n      0x00\n        /* \"#utility.yul\":16243:16252   */\n      dup4\n        /* \"#utility.yul\":16239:16256   */\n      add\n        /* \"#utility.yul\":16232:16279   */\n      mstore\n        /* \"#utility.yul\":16296:16427   */\n      tag_642\n        /* \"#utility.yul\":16422:16426   */\n      dup2\n        /* \"#utility.yul\":16296:16427   */\n      tag_579\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":16288:16427   */\n      swap1\n      pop\n        /* \"#utility.yul\":16015:16434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16440:16859   */\n    tag_262:\n        /* \"#utility.yul\":16606:16610   */\n      0x00\n        /* \"#utility.yul\":16644:16646   */\n      0x20\n        /* \"#utility.yul\":16633:16642   */\n      dup3\n        /* \"#utility.yul\":16629:16647   */\n      add\n        /* \"#utility.yul\":16621:16647   */\n      swap1\n      pop\n        /* \"#utility.yul\":16693:16702   */\n      dup2\n        /* \"#utility.yul\":16687:16691   */\n      dup2\n        /* \"#utility.yul\":16683:16703   */\n      sub\n        /* \"#utility.yul\":16679:16680   */\n      0x00\n        /* \"#utility.yul\":16668:16677   */\n      dup4\n        /* \"#utility.yul\":16664:16681   */\n      add\n        /* \"#utility.yul\":16657:16704   */\n      mstore\n        /* \"#utility.yul\":16721:16852   */\n      tag_644\n        /* \"#utility.yul\":16847:16851   */\n      dup2\n        /* \"#utility.yul\":16721:16852   */\n      tag_584\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":16713:16852   */\n      swap1\n      pop\n        /* \"#utility.yul\":16440:16859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16865:17284   */\n    tag_422:\n        /* \"#utility.yul\":17031:17035   */\n      0x00\n        /* \"#utility.yul\":17069:17071   */\n      0x20\n        /* \"#utility.yul\":17058:17067   */\n      dup3\n        /* \"#utility.yul\":17054:17072   */\n      add\n        /* \"#utility.yul\":17046:17072   */\n      swap1\n      pop\n        /* \"#utility.yul\":17118:17127   */\n      dup2\n        /* \"#utility.yul\":17112:17116   */\n      dup2\n        /* \"#utility.yul\":17108:17128   */\n      sub\n        /* \"#utility.yul\":17104:17105   */\n      0x00\n        /* \"#utility.yul\":17093:17102   */\n      dup4\n        /* \"#utility.yul\":17089:17106   */\n      add\n        /* \"#utility.yul\":17082:17129   */\n      mstore\n        /* \"#utility.yul\":17146:17277   */\n      tag_646\n        /* \"#utility.yul\":17272:17276   */\n      dup2\n        /* \"#utility.yul\":17146:17277   */\n      tag_589\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":17138:17277   */\n      swap1\n      pop\n        /* \"#utility.yul\":16865:17284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17290:17709   */\n    tag_128:\n        /* \"#utility.yul\":17456:17460   */\n      0x00\n        /* \"#utility.yul\":17494:17496   */\n      0x20\n        /* \"#utility.yul\":17483:17492   */\n      dup3\n        /* \"#utility.yul\":17479:17497   */\n      add\n        /* \"#utility.yul\":17471:17497   */\n      swap1\n      pop\n        /* \"#utility.yul\":17543:17552   */\n      dup2\n        /* \"#utility.yul\":17537:17541   */\n      dup2\n        /* \"#utility.yul\":17533:17553   */\n      sub\n        /* \"#utility.yul\":17529:17530   */\n      0x00\n        /* \"#utility.yul\":17518:17527   */\n      dup4\n        /* \"#utility.yul\":17514:17531   */\n      add\n        /* \"#utility.yul\":17507:17554   */\n      mstore\n        /* \"#utility.yul\":17571:17702   */\n      tag_648\n        /* \"#utility.yul\":17697:17701   */\n      dup2\n        /* \"#utility.yul\":17571:17702   */\n      tag_594\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":17563:17702   */\n      swap1\n      pop\n        /* \"#utility.yul\":17290:17709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17715:17937   */\n    tag_53:\n        /* \"#utility.yul\":17808:17812   */\n      0x00\n        /* \"#utility.yul\":17846:17848   */\n      0x20\n        /* \"#utility.yul\":17835:17844   */\n      dup3\n        /* \"#utility.yul\":17831:17849   */\n      add\n        /* \"#utility.yul\":17823:17849   */\n      swap1\n      pop\n        /* \"#utility.yul\":17859:17930   */\n      tag_650\n        /* \"#utility.yul\":17927:17928   */\n      0x00\n        /* \"#utility.yul\":17916:17925   */\n      dup4\n        /* \"#utility.yul\":17912:17929   */\n      add\n        /* \"#utility.yul\":17903:17909   */\n      dup5\n        /* \"#utility.yul\":17859:17930   */\n      tag_602\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":17715:17937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17943:18496   */\n    tag_37:\n        /* \"#utility.yul\":18120:18124   */\n      0x00\n        /* \"#utility.yul\":18158:18161   */\n      0x80\n        /* \"#utility.yul\":18147:18156   */\n      dup3\n        /* \"#utility.yul\":18143:18162   */\n      add\n        /* \"#utility.yul\":18135:18162   */\n      swap1\n      pop\n        /* \"#utility.yul\":18172:18243   */\n      tag_652\n        /* \"#utility.yul\":18240:18241   */\n      0x00\n        /* \"#utility.yul\":18229:18238   */\n      dup4\n        /* \"#utility.yul\":18225:18242   */\n      add\n        /* \"#utility.yul\":18216:18222   */\n      dup8\n        /* \"#utility.yul\":18172:18243   */\n      tag_602\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":18253:18325   */\n      tag_653\n        /* \"#utility.yul\":18321:18323   */\n      0x20\n        /* \"#utility.yul\":18310:18319   */\n      dup4\n        /* \"#utility.yul\":18306:18324   */\n      add\n        /* \"#utility.yul\":18297:18303   */\n      dup7\n        /* \"#utility.yul\":18253:18325   */\n      tag_602\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":18335:18407   */\n      tag_654\n        /* \"#utility.yul\":18403:18405   */\n      0x40\n        /* \"#utility.yul\":18392:18401   */\n      dup4\n        /* \"#utility.yul\":18388:18406   */\n      add\n        /* \"#utility.yul\":18379:18385   */\n      dup6\n        /* \"#utility.yul\":18335:18407   */\n      tag_602\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":18417:18489   */\n      tag_655\n        /* \"#utility.yul\":18485:18487   */\n      0x60\n        /* \"#utility.yul\":18474:18483   */\n      dup4\n        /* \"#utility.yul\":18470:18488   */\n      add\n        /* \"#utility.yul\":18461:18467   */\n      dup5\n        /* \"#utility.yul\":18417:18489   */\n      tag_602\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":17943:18496   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18583:18715   */\n    tag_522:\n        /* \"#utility.yul\":18650:18654   */\n      0x00\n        /* \"#utility.yul\":18673:18676   */\n      dup2\n        /* \"#utility.yul\":18665:18676   */\n      swap1\n      pop\n        /* \"#utility.yul\":18703:18707   */\n      0x20\n        /* \"#utility.yul\":18698:18701   */\n      dup3\n        /* \"#utility.yul\":18694:18708   */\n      add\n        /* \"#utility.yul\":18686:18708   */\n      swap1\n      pop\n        /* \"#utility.yul\":18583:18715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18721:18835   */\n    tag_519:\n        /* \"#utility.yul\":18788:18794   */\n      0x00\n        /* \"#utility.yul\":18822:18827   */\n      dup2\n        /* \"#utility.yul\":18816:18828   */\n      mload\n        /* \"#utility.yul\":18806:18828   */\n      swap1\n      pop\n        /* \"#utility.yul\":18721:18835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18841:18939   */\n    tag_532:\n        /* \"#utility.yul\":18892:18898   */\n      0x00\n        /* \"#utility.yul\":18926:18931   */\n      dup2\n        /* \"#utility.yul\":18920:18932   */\n      mload\n        /* \"#utility.yul\":18910:18932   */\n      swap1\n      pop\n        /* \"#utility.yul\":18841:18939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18945:19044   */\n    tag_548:\n        /* \"#utility.yul\":18997:19003   */\n      0x00\n        /* \"#utility.yul\":19031:19036   */\n      dup2\n        /* \"#utility.yul\":19025:19037   */\n      mload\n        /* \"#utility.yul\":19015:19037   */\n      swap1\n      pop\n        /* \"#utility.yul\":18945:19044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19050:19163   */\n    tag_528:\n        /* \"#utility.yul\":19120:19124   */\n      0x00\n        /* \"#utility.yul\":19152:19156   */\n      0x20\n        /* \"#utility.yul\":19147:19150   */\n      dup3\n        /* \"#utility.yul\":19143:19157   */\n      add\n        /* \"#utility.yul\":19135:19157   */\n      swap1\n      pop\n        /* \"#utility.yul\":19050:19163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19169:19353   */\n    tag_510:\n        /* \"#utility.yul\":19268:19279   */\n      0x00\n        /* \"#utility.yul\":19302:19308   */\n      dup3\n        /* \"#utility.yul\":19297:19300   */\n      dup3\n        /* \"#utility.yul\":19290:19309   */\n      mstore\n        /* \"#utility.yul\":19342:19346   */\n      0x20\n        /* \"#utility.yul\":19337:19340   */\n      dup3\n        /* \"#utility.yul\":19333:19347   */\n      add\n        /* \"#utility.yul\":19318:19347   */\n      swap1\n      pop\n        /* \"#utility.yul\":19169:19353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19359:19506   */\n    tag_534:\n        /* \"#utility.yul\":19460:19471   */\n      0x00\n        /* \"#utility.yul\":19497:19500   */\n      dup2\n        /* \"#utility.yul\":19482:19500   */\n      swap1\n      pop\n        /* \"#utility.yul\":19359:19506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19512:19681   */\n    tag_550:\n        /* \"#utility.yul\":19596:19607   */\n      0x00\n        /* \"#utility.yul\":19630:19636   */\n      dup3\n        /* \"#utility.yul\":19625:19628   */\n      dup3\n        /* \"#utility.yul\":19618:19637   */\n      mstore\n        /* \"#utility.yul\":19670:19674   */\n      0x20\n        /* \"#utility.yul\":19665:19668   */\n      dup3\n        /* \"#utility.yul\":19661:19675   */\n      add\n        /* \"#utility.yul\":19646:19675   */\n      swap1\n      pop\n        /* \"#utility.yul\":19512:19681   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19687:19992   */\n    tag_133:\n        /* \"#utility.yul\":19727:19730   */\n      0x00\n        /* \"#utility.yul\":19746:19766   */\n      tag_667\n        /* \"#utility.yul\":19764:19765   */\n      dup3\n        /* \"#utility.yul\":19746:19766   */\n      tag_601\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":19741:19766   */\n      swap2\n      pop\n        /* \"#utility.yul\":19780:19800   */\n      tag_668\n        /* \"#utility.yul\":19798:19799   */\n      dup4\n        /* \"#utility.yul\":19780:19800   */\n      tag_601\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":19775:19800   */\n      swap3\n      pop\n        /* \"#utility.yul\":19934:19935   */\n      dup3\n        /* \"#utility.yul\":19866:19932   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19862:19936   */\n      sub\n        /* \"#utility.yul\":19859:19860   */\n      dup3\n        /* \"#utility.yul\":19856:19937   */\n      gt\n        /* \"#utility.yul\":19853:19960   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":19940:19958   */\n      tag_670\n      tag_671\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":19853:19960   */\n    tag_669:\n        /* \"#utility.yul\":19984:19985   */\n      dup3\n        /* \"#utility.yul\":19981:19982   */\n      dup3\n        /* \"#utility.yul\":19977:19986   */\n      add\n        /* \"#utility.yul\":19970:19986   */\n      swap1\n      pop\n        /* \"#utility.yul\":19687:19992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19998:20183   */\n    tag_378:\n        /* \"#utility.yul\":20038:20039   */\n      0x00\n        /* \"#utility.yul\":20055:20075   */\n      tag_673\n        /* \"#utility.yul\":20073:20074   */\n      dup3\n        /* \"#utility.yul\":20055:20075   */\n      tag_601\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":20050:20075   */\n      swap2\n      pop\n        /* \"#utility.yul\":20089:20109   */\n      tag_674\n        /* \"#utility.yul\":20107:20108   */\n      dup4\n        /* \"#utility.yul\":20089:20109   */\n      tag_601\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":20084:20109   */\n      swap3\n      pop\n        /* \"#utility.yul\":20128:20129   */\n      dup3\n        /* \"#utility.yul\":20118:20153   */\n      tag_675\n      jumpi\n        /* \"#utility.yul\":20133:20151   */\n      tag_676\n      tag_677\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":20118:20153   */\n    tag_675:\n        /* \"#utility.yul\":20175:20176   */\n      dup3\n        /* \"#utility.yul\":20172:20173   */\n      dup3\n        /* \"#utility.yul\":20168:20177   */\n      div\n        /* \"#utility.yul\":20163:20177   */\n      swap1\n      pop\n        /* \"#utility.yul\":19998:20183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20189:20537   */\n    tag_375:\n        /* \"#utility.yul\":20229:20236   */\n      0x00\n        /* \"#utility.yul\":20252:20272   */\n      tag_679\n        /* \"#utility.yul\":20270:20271   */\n      dup3\n        /* \"#utility.yul\":20252:20272   */\n      tag_601\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":20247:20272   */\n      swap2\n      pop\n        /* \"#utility.yul\":20286:20306   */\n      tag_680\n        /* \"#utility.yul\":20304:20305   */\n      dup4\n        /* \"#utility.yul\":20286:20306   */\n      tag_601\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":20281:20306   */\n      swap3\n      pop\n        /* \"#utility.yul\":20474:20475   */\n      dup2\n        /* \"#utility.yul\":20406:20472   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20402:20476   */\n      div\n        /* \"#utility.yul\":20399:20400   */\n      dup4\n        /* \"#utility.yul\":20396:20477   */\n      gt\n        /* \"#utility.yul\":20391:20392   */\n      dup3\n        /* \"#utility.yul\":20384:20393   */\n      iszero\n        /* \"#utility.yul\":20377:20394   */\n      iszero\n        /* \"#utility.yul\":20373:20478   */\n      and\n        /* \"#utility.yul\":20370:20501   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":20481:20499   */\n      tag_682\n      tag_671\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":20370:20501   */\n    tag_681:\n        /* \"#utility.yul\":20529:20530   */\n      dup3\n        /* \"#utility.yul\":20526:20527   */\n      dup3\n        /* \"#utility.yul\":20522:20531   */\n      mul\n        /* \"#utility.yul\":20511:20531   */\n      swap1\n      pop\n        /* \"#utility.yul\":20189:20537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20543:20734   */\n    tag_207:\n        /* \"#utility.yul\":20583:20587   */\n      0x00\n        /* \"#utility.yul\":20603:20623   */\n      tag_684\n        /* \"#utility.yul\":20621:20622   */\n      dup3\n        /* \"#utility.yul\":20603:20623   */\n      tag_601\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":20598:20623   */\n      swap2\n      pop\n        /* \"#utility.yul\":20637:20657   */\n      tag_685\n        /* \"#utility.yul\":20655:20656   */\n      dup4\n        /* \"#utility.yul\":20637:20657   */\n      tag_601\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":20632:20657   */\n      swap3\n      pop\n        /* \"#utility.yul\":20676:20677   */\n      dup3\n        /* \"#utility.yul\":20673:20674   */\n      dup3\n        /* \"#utility.yul\":20670:20678   */\n      lt\n        /* \"#utility.yul\":20667:20701   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":20681:20699   */\n      tag_687\n      tag_671\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":20667:20701   */\n    tag_686:\n        /* \"#utility.yul\":20726:20727   */\n      dup3\n        /* \"#utility.yul\":20723:20724   */\n      dup3\n        /* \"#utility.yul\":20719:20728   */\n      sub\n        /* \"#utility.yul\":20711:20728   */\n      swap1\n      pop\n        /* \"#utility.yul\":20543:20734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20740:20836   */\n    tag_506:\n        /* \"#utility.yul\":20777:20784   */\n      0x00\n        /* \"#utility.yul\":20806:20830   */\n      tag_689\n        /* \"#utility.yul\":20824:20829   */\n      dup3\n        /* \"#utility.yul\":20806:20830   */\n      tag_690\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":20795:20830   */\n      swap1\n      pop\n        /* \"#utility.yul\":20740:20836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20842:20932   */\n    tag_691:\n        /* \"#utility.yul\":20876:20883   */\n      0x00\n        /* \"#utility.yul\":20919:20924   */\n      dup2\n        /* \"#utility.yul\":20912:20925   */\n      iszero\n        /* \"#utility.yul\":20905:20926   */\n      iszero\n        /* \"#utility.yul\":20894:20926   */\n      swap1\n      pop\n        /* \"#utility.yul\":20842:20932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20938:21064   */\n    tag_690:\n        /* \"#utility.yul\":20975:20982   */\n      0x00\n        /* \"#utility.yul\":21015:21057   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21008:21013   */\n      dup3\n        /* \"#utility.yul\":21004:21058   */\n      and\n        /* \"#utility.yul\":20993:21058   */\n      swap1\n      pop\n        /* \"#utility.yul\":20938:21064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21070:21147   */\n    tag_601:\n        /* \"#utility.yul\":21107:21114   */\n      0x00\n        /* \"#utility.yul\":21136:21141   */\n      dup2\n        /* \"#utility.yul\":21125:21141   */\n      swap1\n      pop\n        /* \"#utility.yul\":21070:21147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21153:21293   */\n    tag_540:\n        /* \"#utility.yul\":21217:21226   */\n      0x00\n        /* \"#utility.yul\":21250:21287   */\n      tag_696\n        /* \"#utility.yul\":21281:21286   */\n      dup3\n        /* \"#utility.yul\":21250:21287   */\n      tag_697\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":21237:21287   */\n      swap1\n      pop\n        /* \"#utility.yul\":21153:21293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21299:21441   */\n    tag_544:\n        /* \"#utility.yul\":21365:21374   */\n      0x00\n        /* \"#utility.yul\":21398:21435   */\n      tag_699\n        /* \"#utility.yul\":21429:21434   */\n      dup3\n        /* \"#utility.yul\":21398:21435   */\n      tag_697\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":21385:21435   */\n      swap1\n      pop\n        /* \"#utility.yul\":21299:21441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21447:21573   */\n    tag_697:\n        /* \"#utility.yul\":21497:21506   */\n      0x00\n        /* \"#utility.yul\":21530:21567   */\n      tag_701\n        /* \"#utility.yul\":21561:21566   */\n      dup3\n        /* \"#utility.yul\":21530:21567   */\n      tag_702\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":21517:21567   */\n      swap1\n      pop\n        /* \"#utility.yul\":21447:21573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21579:21692   */\n    tag_702:\n        /* \"#utility.yul\":21629:21638   */\n      0x00\n        /* \"#utility.yul\":21662:21686   */\n      tag_704\n        /* \"#utility.yul\":21680:21685   */\n      dup3\n        /* \"#utility.yul\":21662:21686   */\n      tag_690\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":21649:21686   */\n      swap1\n      pop\n        /* \"#utility.yul\":21579:21692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21698:21852   */\n    tag_515:\n        /* \"#utility.yul\":21782:21788   */\n      dup3\n        /* \"#utility.yul\":21777:21780   */\n      dup2\n        /* \"#utility.yul\":21772:21775   */\n      dup4\n        /* \"#utility.yul\":21759:21789   */\n      calldatacopy\n        /* \"#utility.yul\":21844:21845   */\n      0x00\n        /* \"#utility.yul\":21835:21841   */\n      dup4\n        /* \"#utility.yul\":21830:21833   */\n      dup4\n        /* \"#utility.yul\":21826:21842   */\n      add\n        /* \"#utility.yul\":21819:21846   */\n      mstore\n        /* \"#utility.yul\":21698:21852   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21858:22165   */\n    tag_536:\n        /* \"#utility.yul\":21926:21927   */\n      0x00\n        /* \"#utility.yul\":21936:22049   */\n    tag_707:\n        /* \"#utility.yul\":21950:21956   */\n      dup4\n        /* \"#utility.yul\":21947:21948   */\n      dup2\n        /* \"#utility.yul\":21944:21957   */\n      lt\n        /* \"#utility.yul\":21936:22049   */\n      iszero\n      tag_709\n      jumpi\n        /* \"#utility.yul\":22035:22036   */\n      dup1\n        /* \"#utility.yul\":22030:22033   */\n      dup3\n        /* \"#utility.yul\":22026:22037   */\n      add\n        /* \"#utility.yul\":22020:22038   */\n      mload\n        /* \"#utility.yul\":22016:22017   */\n      dup2\n        /* \"#utility.yul\":22011:22014   */\n      dup5\n        /* \"#utility.yul\":22007:22018   */\n      add\n        /* \"#utility.yul\":22000:22039   */\n      mstore\n        /* \"#utility.yul\":21972:21974   */\n      0x20\n        /* \"#utility.yul\":21969:21970   */\n      dup2\n        /* \"#utility.yul\":21965:21975   */\n      add\n        /* \"#utility.yul\":21960:21975   */\n      swap1\n      pop\n        /* \"#utility.yul\":21936:22049   */\n      jump(tag_707)\n    tag_709:\n        /* \"#utility.yul\":22067:22073   */\n      dup4\n        /* \"#utility.yul\":22064:22065   */\n      dup2\n        /* \"#utility.yul\":22061:22074   */\n      gt\n        /* \"#utility.yul\":22058:22159   */\n      iszero\n      tag_710\n      jumpi\n        /* \"#utility.yul\":22147:22148   */\n      0x00\n        /* \"#utility.yul\":22138:22144   */\n      dup5\n        /* \"#utility.yul\":22133:22136   */\n      dup5\n        /* \"#utility.yul\":22129:22145   */\n      add\n        /* \"#utility.yul\":22122:22149   */\n      mstore\n        /* \"#utility.yul\":22058:22159   */\n    tag_710:\n        /* \"#utility.yul\":21907:22165   */\n      pop\n        /* \"#utility.yul\":21858:22165   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22171:22404   */\n    tag_142:\n        /* \"#utility.yul\":22210:22213   */\n      0x00\n        /* \"#utility.yul\":22233:22257   */\n      tag_712\n        /* \"#utility.yul\":22251:22256   */\n      dup3\n        /* \"#utility.yul\":22233:22257   */\n      tag_601\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":22224:22257   */\n      swap2\n      pop\n        /* \"#utility.yul\":22279:22345   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22272:22277   */\n      dup3\n        /* \"#utility.yul\":22269:22346   */\n      eq\n        /* \"#utility.yul\":22266:22369   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":22349:22367   */\n      tag_714\n      tag_671\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":22266:22369   */\n    tag_713:\n        /* \"#utility.yul\":22396:22397   */\n      0x01\n        /* \"#utility.yul\":22389:22394   */\n      dup3\n        /* \"#utility.yul\":22385:22398   */\n      add\n        /* \"#utility.yul\":22378:22398   */\n      swap1\n      pop\n        /* \"#utility.yul\":22171:22404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22410:22590   */\n    tag_671:\n        /* \"#utility.yul\":22458:22535   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22455:22456   */\n      0x00\n        /* \"#utility.yul\":22448:22536   */\n      mstore\n        /* \"#utility.yul\":22555:22559   */\n      0x11\n        /* \"#utility.yul\":22552:22553   */\n      0x04\n        /* \"#utility.yul\":22545:22560   */\n      mstore\n        /* \"#utility.yul\":22579:22583   */\n      0x24\n        /* \"#utility.yul\":22576:22577   */\n      0x00\n        /* \"#utility.yul\":22569:22584   */\n      revert\n        /* \"#utility.yul\":22596:22776   */\n    tag_677:\n        /* \"#utility.yul\":22644:22721   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22641:22642   */\n      0x00\n        /* \"#utility.yul\":22634:22722   */\n      mstore\n        /* \"#utility.yul\":22741:22745   */\n      0x12\n        /* \"#utility.yul\":22738:22739   */\n      0x04\n        /* \"#utility.yul\":22731:22746   */\n      mstore\n        /* \"#utility.yul\":22765:22769   */\n      0x24\n        /* \"#utility.yul\":22762:22763   */\n      0x00\n        /* \"#utility.yul\":22755:22770   */\n      revert\n        /* \"#utility.yul\":22782:22962   */\n    tag_114:\n        /* \"#utility.yul\":22830:22907   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22827:22828   */\n      0x00\n        /* \"#utility.yul\":22820:22908   */\n      mstore\n        /* \"#utility.yul\":22927:22931   */\n      0x32\n        /* \"#utility.yul\":22924:22925   */\n      0x04\n        /* \"#utility.yul\":22917:22932   */\n      mstore\n        /* \"#utility.yul\":22951:22955   */\n      0x24\n        /* \"#utility.yul\":22948:22949   */\n      0x00\n        /* \"#utility.yul\":22941:22956   */\n      revert\n        /* \"#utility.yul\":22968:23148   */\n    tag_193:\n        /* \"#utility.yul\":23016:23093   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23013:23014   */\n      0x00\n        /* \"#utility.yul\":23006:23094   */\n      mstore\n        /* \"#utility.yul\":23113:23117   */\n      0x41\n        /* \"#utility.yul\":23110:23111   */\n      0x04\n        /* \"#utility.yul\":23103:23118   */\n      mstore\n        /* \"#utility.yul\":23137:23141   */\n      0x24\n        /* \"#utility.yul\":23134:23135   */\n      0x00\n        /* \"#utility.yul\":23127:23142   */\n      revert\n        /* \"#utility.yul\":23154:23271   */\n    tag_451:\n        /* \"#utility.yul\":23263:23264   */\n      0x00\n        /* \"#utility.yul\":23260:23261   */\n      dup1\n        /* \"#utility.yul\":23253:23265   */\n      revert\n        /* \"#utility.yul\":23277:23394   */\n    tag_448:\n        /* \"#utility.yul\":23386:23387   */\n      0x00\n        /* \"#utility.yul\":23383:23384   */\n      dup1\n        /* \"#utility.yul\":23376:23388   */\n      revert\n        /* \"#utility.yul\":23400:23517   */\n    tag_454:\n        /* \"#utility.yul\":23509:23510   */\n      0x00\n        /* \"#utility.yul\":23506:23507   */\n      dup1\n        /* \"#utility.yul\":23499:23511   */\n      revert\n        /* \"#utility.yul\":23523:23640   */\n    tag_480:\n        /* \"#utility.yul\":23632:23633   */\n      0x00\n        /* \"#utility.yul\":23629:23630   */\n      dup1\n        /* \"#utility.yul\":23622:23634   */\n      revert\n        /* \"#utility.yul\":23646:23763   */\n    tag_513:\n        /* \"#utility.yul\":23755:23756   */\n      0x00\n        /* \"#utility.yul\":23752:23753   */\n      dup1\n        /* \"#utility.yul\":23745:23757   */\n      revert\n        /* \"#utility.yul\":23769:23886   */\n    tag_469:\n        /* \"#utility.yul\":23878:23879   */\n      0x00\n        /* \"#utility.yul\":23875:23876   */\n      dup1\n        /* \"#utility.yul\":23868:23880   */\n      revert\n        /* \"#utility.yul\":23892:23994   */\n    tag_553:\n        /* \"#utility.yul\":23933:23939   */\n      0x00\n        /* \"#utility.yul\":23984:23986   */\n      0x1f\n        /* \"#utility.yul\":23980:23987   */\n      not\n        /* \"#utility.yul\":23975:23977   */\n      0x1f\n        /* \"#utility.yul\":23968:23973   */\n      dup4\n        /* \"#utility.yul\":23964:23978   */\n      add\n        /* \"#utility.yul\":23960:23988   */\n      and\n        /* \"#utility.yul\":23950:23988   */\n      swap1\n      pop\n        /* \"#utility.yul\":23892:23994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24000:24174   */\n    tag_558:\n        /* \"#utility.yul\":24140:24166   */\n      0x4e4654205374616b696e673a20456d7074792041727261790000000000000000\n        /* \"#utility.yul\":24136:24137   */\n      0x00\n        /* \"#utility.yul\":24128:24134   */\n      dup3\n        /* \"#utility.yul\":24124:24138   */\n      add\n        /* \"#utility.yul\":24117:24167   */\n      mstore\n        /* \"#utility.yul\":24000:24174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24180:24409   */\n    tag_563:\n        /* \"#utility.yul\":24320:24354   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":24316:24317   */\n      0x00\n        /* \"#utility.yul\":24308:24314   */\n      dup3\n        /* \"#utility.yul\":24304:24318   */\n      add\n        /* \"#utility.yul\":24297:24355   */\n      mstore\n        /* \"#utility.yul\":24389:24401   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24384:24386   */\n      0x20\n        /* \"#utility.yul\":24376:24382   */\n      dup3\n        /* \"#utility.yul\":24372:24387   */\n      add\n        /* \"#utility.yul\":24365:24402   */\n      mstore\n        /* \"#utility.yul\":24180:24409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24415:24640   */\n    tag_568:\n        /* \"#utility.yul\":24555:24589   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":24551:24552   */\n      0x00\n        /* \"#utility.yul\":24543:24549   */\n      dup3\n        /* \"#utility.yul\":24539:24553   */\n      add\n        /* \"#utility.yul\":24532:24590   */\n      mstore\n        /* \"#utility.yul\":24624:24632   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24619:24621   */\n      0x20\n        /* \"#utility.yul\":24611:24617   */\n      dup3\n        /* \"#utility.yul\":24607:24622   */\n      add\n        /* \"#utility.yul\":24600:24633   */\n      mstore\n        /* \"#utility.yul\":24415:24640   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24646:24882   */\n    tag_573:\n        /* \"#utility.yul\":24786:24820   */\n      0x4e4654205374616b696e673a206475706c696361746520746f6b656e20696473\n        /* \"#utility.yul\":24782:24783   */\n      0x00\n        /* \"#utility.yul\":24774:24780   */\n      dup3\n        /* \"#utility.yul\":24770:24784   */\n      add\n        /* \"#utility.yul\":24763:24821   */\n      mstore\n        /* \"#utility.yul\":24855:24874   */\n      0x20696e20696e70757420706172616d732e000000000000000000000000000000\n        /* \"#utility.yul\":24850:24852   */\n      0x20\n        /* \"#utility.yul\":24842:24848   */\n      dup3\n        /* \"#utility.yul\":24838:24853   */\n      add\n        /* \"#utility.yul\":24831:24875   */\n      mstore\n        /* \"#utility.yul\":24646:24882   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24888:25070   */\n    tag_578:\n        /* \"#utility.yul\":25028:25062   */\n      0x4e4654205374616b696e673a206e6f74206f776e6572206f6620746f6b656e2e\n        /* \"#utility.yul\":25024:25025   */\n      0x00\n        /* \"#utility.yul\":25016:25022   */\n      dup3\n        /* \"#utility.yul\":25012:25026   */\n      add\n        /* \"#utility.yul\":25005:25063   */\n      mstore\n        /* \"#utility.yul\":24888:25070   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25076:25258   */\n    tag_583:\n        /* \"#utility.yul\":25216:25250   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":25212:25213   */\n      0x00\n        /* \"#utility.yul\":25204:25210   */\n      dup3\n        /* \"#utility.yul\":25200:25214   */\n      add\n        /* \"#utility.yul\":25193:25251   */\n      mstore\n        /* \"#utility.yul\":25076:25258   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25264:25444   */\n    tag_588:\n        /* \"#utility.yul\":25404:25436   */\n      0x736574486172766573744665653a2066656550657263656e74203e2034300000\n        /* \"#utility.yul\":25400:25401   */\n      0x00\n        /* \"#utility.yul\":25392:25398   */\n      dup3\n        /* \"#utility.yul\":25388:25402   */\n      add\n        /* \"#utility.yul\":25381:25437   */\n      mstore\n        /* \"#utility.yul\":25264:25444   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25450:25629   */\n    tag_593:\n        /* \"#utility.yul\":25590:25621   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":25586:25587   */\n      0x00\n        /* \"#utility.yul\":25578:25584   */\n      dup3\n        /* \"#utility.yul\":25574:25588   */\n      add\n        /* \"#utility.yul\":25567:25622   */\n      mstore\n        /* \"#utility.yul\":25450:25629   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25635:25879   */\n    tag_598:\n        /* \"#utility.yul\":25775:25809   */\n      0x4e667420556e7374616b696e673a20746f6b656e206e6f74207374616b656420\n        /* \"#utility.yul\":25771:25772   */\n      0x00\n        /* \"#utility.yul\":25763:25769   */\n      dup3\n        /* \"#utility.yul\":25759:25773   */\n      add\n        /* \"#utility.yul\":25752:25810   */\n      mstore\n        /* \"#utility.yul\":25844:25871   */\n      0x6f7220696e636f727265637420746f6b656e206f776e65722e00000000000000\n        /* \"#utility.yul\":25839:25841   */\n      0x20\n        /* \"#utility.yul\":25831:25837   */\n      dup3\n        /* \"#utility.yul\":25827:25842   */\n      add\n        /* \"#utility.yul\":25820:25872   */\n      mstore\n        /* \"#utility.yul\":25635:25879   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25885:26007   */\n    tag_440:\n        /* \"#utility.yul\":25958:25982   */\n      tag_736\n        /* \"#utility.yul\":25976:25981   */\n      dup2\n        /* \"#utility.yul\":25958:25982   */\n      tag_506\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":25951:25956   */\n      dup2\n        /* \"#utility.yul\":25948:25983   */\n      eq\n        /* \"#utility.yul\":25938:26001   */\n      tag_737\n      jumpi\n        /* \"#utility.yul\":25997:25998   */\n      0x00\n        /* \"#utility.yul\":25994:25995   */\n      dup1\n        /* \"#utility.yul\":25987:25999   */\n      revert\n        /* \"#utility.yul\":25938:26001   */\n    tag_737:\n        /* \"#utility.yul\":25885:26007   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26013:26129   */\n    tag_458:\n        /* \"#utility.yul\":26083:26104   */\n      tag_739\n        /* \"#utility.yul\":26098:26103   */\n      dup2\n        /* \"#utility.yul\":26083:26104   */\n      tag_691\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":26076:26081   */\n      dup2\n        /* \"#utility.yul\":26073:26105   */\n      eq\n        /* \"#utility.yul\":26063:26123   */\n      tag_740\n      jumpi\n        /* \"#utility.yul\":26119:26120   */\n      0x00\n        /* \"#utility.yul\":26116:26117   */\n      dup1\n        /* \"#utility.yul\":26109:26121   */\n      revert\n        /* \"#utility.yul\":26063:26123   */\n    tag_740:\n        /* \"#utility.yul\":26013:26129   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26135:26257   */\n    tag_462:\n        /* \"#utility.yul\":26208:26232   */\n      tag_742\n        /* \"#utility.yul\":26226:26231   */\n      dup2\n        /* \"#utility.yul\":26208:26232   */\n      tag_601\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":26201:26206   */\n      dup2\n        /* \"#utility.yul\":26198:26233   */\n      eq\n        /* \"#utility.yul\":26188:26251   */\n      tag_743\n      jumpi\n        /* \"#utility.yul\":26247:26248   */\n      0x00\n        /* \"#utility.yul\":26244:26245   */\n      dup1\n        /* \"#utility.yul\":26237:26249   */\n      revert\n        /* \"#utility.yul\":26188:26251   */\n    tag_743:\n        /* \"#utility.yul\":26135:26257   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209f0f0306562c7050fb4362a04b54d39be153609b603d55ccfc8ff86b01f4291b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1208": {
									"entryPoint": null,
									"id": 1208,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_143": {
									"entryPoint": null,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 279,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_223": {
									"entryPoint": 287,
									"id": 223,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IBEP20_$100_fromMemory": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$1076_fromMemory": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721_$1076t_contract$_IBEP20_$100t_uint256t_address_fromMemory": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IBEP20_$100": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$1076": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IBEP20_$100": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$1076": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2996:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "243:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "258:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "252:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "243:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "315:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IBEP20_$100",
																	"nodeType": "YulIdentifier",
																	"src": "274:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "274:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "274:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IBEP20_$100_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "219:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "227:5:1",
														"type": ""
													}
												],
												"src": "156:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "412:96:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "422:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "437:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "422:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "496:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$1076",
																	"nodeType": "YulIdentifier",
																	"src": "453:42:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "453:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "453:49:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$1076_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "390:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "398:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "406:5:1",
														"type": ""
													}
												],
												"src": "333:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "577:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "587:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "602:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "596:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "587:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "645:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "618:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "618:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "618:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "555:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "563:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "571:5:1",
														"type": ""
													}
												],
												"src": "514:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "821:722:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "868:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "870:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "870:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "870:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "842:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "838:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "863:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "834:33:1"
															},
															"nodeType": "YulIf",
															"src": "831:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "961:144:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "976:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "990:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "980:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1005:90:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1067:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1078:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1063:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1063:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1087:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$1076_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1015:47:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:80:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1005:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1115:143:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1130:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1134:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1160:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1220:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1231:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1216:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1216:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1240:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IBEP20_$100_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1170:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1170:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1160:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1268:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1283:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1297:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1287:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1313:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1359:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1370:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1355:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1355:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1379:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1323:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1323:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1313:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1407:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1422:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1436:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1426:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1452:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1462:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1462:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1452:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$1076t_contract$_IBEP20_$100t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "767:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "778:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "790:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "798:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "806:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "814:6:1",
														"type": ""
													}
												],
												"src": "663:880:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1589:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1599:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1615:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1609:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1582:6:1",
														"type": ""
													}
												],
												"src": "1549:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1675:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1685:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1714:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1696:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1685:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1657:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1667:7:1",
														"type": ""
													}
												],
												"src": "1630:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1830:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1812:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1801:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IBEP20_$100",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1773:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1783:7:1",
														"type": ""
													}
												],
												"src": "1732:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1909:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1919:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1948:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1930:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1919:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$1076",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1891:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1901:7:1",
														"type": ""
													}
												],
												"src": "1848:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2011:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2021:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2036:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2021:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1993:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2003:7:1",
														"type": ""
													}
												],
												"src": "1966:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2143:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2153:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2164:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2153:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2125:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2135:7:1",
														"type": ""
													}
												],
												"src": "2098:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2290:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2280:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2280:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2280:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2181:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2393:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2410:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2403:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2403:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2304:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2470:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2527:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2536:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2539:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2529:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2529:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2529:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2493:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2518:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2500:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2500:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2490:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2490:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2483:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2483:43:1"
															},
															"nodeType": "YulIf",
															"src": "2480:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2463:5:1",
														"type": ""
													}
												],
												"src": "2427:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2683:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2692:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2695:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2685:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2685:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2685:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2635:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2674:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IBEP20_$100",
																					"nodeType": "YulIdentifier",
																					"src": "2642:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2642:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2632:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2632:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2625:57:1"
															},
															"nodeType": "YulIf",
															"src": "2622:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IBEP20_$100",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2605:5:1",
														"type": ""
													}
												],
												"src": "2555:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2770:95:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2843:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2852:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2855:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2845:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2845:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2845:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2793:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2834:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$1076",
																					"nodeType": "YulIdentifier",
																					"src": "2800:33:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2800:40:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2790:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2790:51:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:59:1"
															},
															"nodeType": "YulIf",
															"src": "2780:79:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$1076",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2763:5:1",
														"type": ""
													}
												],
												"src": "2711:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2914:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2971:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2980:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2983:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2973:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2973:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2973:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2937:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2962:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2944:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2944:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2934:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2934:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:43:1"
															},
															"nodeType": "YulIf",
															"src": "2924:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2907:5:1",
														"type": ""
													}
												],
												"src": "2871:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_IBEP20_$100_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IBEP20_$100(value)\n    }\n\n    function abi_decode_t_contract$_IERC721_$1076_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC721_$1076(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$1076t_contract$_IBEP20_$100t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$1076_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IBEP20_$100_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IBEP20_$100(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$1076(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IBEP20_$100(value) {\n        if iszero(eq(value, cleanup_t_contract$_IBEP20_$100(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC721_$1076(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$1076(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3693 CODESIZE SUB DUP1 PUSH3 0x3693 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x23F JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x117 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x11F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x384 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F4 DUP2 PUSH3 0x31C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x20B DUP2 PUSH3 0x336 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x222 DUP2 PUSH3 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x239 DUP2 PUSH3 0x36A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x25C JUMPI PUSH3 0x25B PUSH3 0x317 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x26C DUP8 DUP3 DUP9 ADD PUSH3 0x211 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x27F DUP8 DUP3 DUP9 ADD PUSH3 0x1FA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x292 DUP8 DUP3 DUP9 ADD PUSH3 0x228 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x2A5 DUP8 DUP3 DUP9 ADD PUSH3 0x1E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2BE DUP3 PUSH3 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D2 DUP3 PUSH3 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E6 DUP3 PUSH3 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x327 DUP2 PUSH3 0x2B1 JUMP JUMPDEST DUP2 EQ PUSH3 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x341 DUP2 PUSH3 0x2C5 JUMP JUMPDEST DUP2 EQ PUSH3 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x35B DUP2 PUSH3 0x2D9 JUMP JUMPDEST DUP2 EQ PUSH3 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x375 DUP2 PUSH3 0x30D JUMP JUMPDEST DUP2 EQ PUSH3 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0x328F PUSH3 0x404 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x9CC ADD MSTORE DUP2 DUP2 PUSH2 0xA72 ADD MSTORE DUP2 DUP2 PUSH2 0xD21 ADD MSTORE DUP2 DUP2 PUSH2 0xDD0 ADD MSTORE DUP2 DUP2 PUSH2 0xE81 ADD MSTORE DUP2 DUP2 PUSH2 0xEC8 ADD MSTORE DUP2 DUP2 PUSH2 0xF77 ADD MSTORE DUP2 DUP2 PUSH2 0x104A ADD MSTORE DUP2 DUP2 PUSH2 0x1719 ADD MSTORE PUSH2 0x17C8 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x44D ADD MSTORE DUP2 DUP2 PUSH2 0x83F ADD MSTORE DUP2 DUP2 PUSH2 0x1492 ADD MSTORE PUSH2 0x1B2F ADD MSTORE PUSH2 0x328F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AE39CAC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB5962917 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB5962917 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xD06FCBA8 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xD086C254 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xE449F341 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF25F4B56 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C4 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x90D49B9D EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x300 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x43DB3C5F GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x43DB3C5F EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x567E98F9 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x5E42B455 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x792B55B6 EQ PUSH2 0x25C JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0xFBF0A93 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x19FCA9F6 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x1E2720FF EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x2955C60C EQ PUSH2 0x1D0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2A8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0xC92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH2 0x118A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x1212 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x135F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x308 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x1503 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x1CC3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP GT PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP1 PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x68B JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x258D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55A SWAP1 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x57C JUMPI PUSH2 0x57B PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C9 SWAP1 PUSH2 0x2C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x677 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x602 JUMPI PUSH2 0x601 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x61C JUMPI PUSH2 0x61B PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD EQ ISZERO PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65B SWAP1 PUSH2 0x2B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x66F SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5E4 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x683 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x429 JUMP JUMPDEST POP PUSH2 0x694 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 PUSH2 0x72C DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x71E PUSH5 0xE8D4A51000 PUSH2 0x710 PUSH1 0x2 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x745 DUP2 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SWAP1 POP PUSH2 0x76C DUP2 PUSH1 0x6 SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x8F8 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x793 JUMPI PUSH2 0x792 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x80D SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x824 JUMPI PUSH2 0x823 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x88E JUMPI PUSH2 0x88D PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x8F0 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x775 JUMP JUMPDEST POP PUSH2 0x910 DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x948 PUSH5 0xE8D4A51000 PUSH2 0x93A PUSH1 0x2 SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x134B166C6094CC1CCBF1E3353CE5C3CD9FD29869051BDB999895854D77CC5EF6 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x98C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x1F47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA14 PUSH2 0x1319 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB7 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F4F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F7FD5C9E17300A4800FD572EA53FC291E2EE7470D73346D16B357FAEE4E7210 DUP3 PUSH1 0x40 MLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xB1A DUP2 PUSH1 0x7 SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB83 JUMPI PUSH2 0xB82 PUSH2 0x2FAD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBB1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 LT ISZERO PUSH2 0xC84 JUMPI PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC65 JUMPI PUSH2 0xC64 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xC7C SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBB7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9D CALLER PUSH2 0x1FD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xD0C PUSH1 0x64 PUSH2 0xCFE PUSH1 0x5 SLOAD DUP7 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH2 0xD1C SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD78 SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC8 SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST LT ISZERO PUSH2 0xE7A JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE27 SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE77 SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xEC5 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x210B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1F SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF6F SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST LT ISZERO PUSH2 0x1021 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCE SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101E SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x108E PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x210B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1096 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10D0 PUSH5 0xE8D4A51000 PUSH2 0x10C2 PUSH1 0x2 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954 CALLER DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x110B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x1135 JUMPI POP PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1181 JUMPI PUSH1 0x0 PUSH2 0x1148 PUSH1 0x1 SLOAD NUMBER PUSH2 0x1342 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1161 PUSH1 0x3 SLOAD DUP4 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1178 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1192 PUSH2 0x1F47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11B0 PUSH2 0x1319 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1206 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FD SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1210 PUSH1 0x0 PUSH2 0x2191 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x121A PUSH2 0x1F47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1238 PUSH2 0x1319 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1285 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x28 DUP2 GT ISZERO PUSH2 0x12D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C9 SWAP1 PUSH2 0x2BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0xF419800A2D8930C61D5D9CD782AA72C512CF6BE2F79DA6DB0B8855870B7269ED DUP2 PUSH1 0x40 MLOAD PUSH2 0x1308 SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1357 DUP4 DUP4 PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1367 PUSH2 0x1F47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1385 PUSH2 0x1319 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D21E5A2B633291BD1FF5F9C654E402D063783C95759D2EA521B31FB30E4DA41 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14C0 DUP4 PUSH2 0x1FD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14EC PUSH1 0x64 PUSH2 0x14DE PUSH1 0x5 SLOAD DUP6 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x14FA SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP GT PUSH2 0x1549 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1540 SWAP1 PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1680 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1570 JUMPI PUSH2 0x156F PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BE SWAP1 PUSH2 0x2C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x15D6 SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x166C JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x15F7 JUMPI PUSH2 0x15F6 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x1611 JUMPI PUSH2 0x1610 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD EQ ISZERO PUSH2 0x1659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1650 SWAP1 PUSH2 0x2B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x1664 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15D9 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x1678 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x154C JUMP JUMPDEST POP PUSH2 0x1689 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1714 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1706 PUSH5 0xE8D4A51000 PUSH2 0x16F8 PUSH1 0x2 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1770 SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x179C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17C0 SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST LT ISZERO PUSH2 0x1872 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181F SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x184B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x186F SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1889 DUP2 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BE8 JUMPI PUSH1 0x1 DUP2 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x18B6 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0x18C0 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x18D7 JUMPI PUSH2 0x18D6 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1A8E JUMPI PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1945 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0x194F SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP11 DUP11 DUP8 DUP2 DUP2 LT PUSH2 0x19B6 JUMPI PUSH2 0x19B5 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x19F5 JUMPI PUSH2 0x19F4 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP7 DUP11 PUSH1 0x0 ADD SLOAD PUSH2 0x1A62 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0x1A6C SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x1AA5 JUMPI PUSH2 0x1AA4 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1B11 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0x1B1B SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP10 DUP10 DUP7 DUP2 DUP2 LT PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x1BE0 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x189C JUMP JUMPDEST POP PUSH2 0x1BFE DUP2 PUSH1 0x6 SLOAD PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x1C1B DUP2 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1C53 PUSH5 0xE8D4A51000 PUSH2 0x1C45 PUSH1 0x2 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x80CC10BF7E52583AE0A17D8DD6AB5005573B17A08091A091AF1A81205A675C91 CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1C8E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1CCB PUSH2 0x1F47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CE9 PUSH2 0x1319 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D36 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA6 SWAP1 PUSH2 0x2B45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB8 DUP2 PUSH2 0x2191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD NUMBER GT PUSH2 0x1DC9 JUMPI PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x1DE0 JUMPI NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEE PUSH1 0x1 SLOAD NUMBER PUSH2 0x1342 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E07 PUSH1 0x3 SLOAD DUP4 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x1E22 JUMPI NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1EED JUMP JUMPDEST DUP1 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0x1E81 JUMPI PUSH2 0x1E6E PUSH2 0x1E5D PUSH1 0x6 SLOAD PUSH2 0x1E4F PUSH5 0xE8D4A51000 PUSH1 0x7 SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0x1E96 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x1EDC PUSH2 0x1ECB PUSH1 0x6 SLOAD PUSH2 0x1EBD PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1EFD SWAP2 SWAP1 PUSH2 0x2D77 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1F13 SWAP2 SWAP1 PUSH2 0x2D46 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1F29 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1F3F SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FD2 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F70 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2255 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x1 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x2037 JUMPI POP PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x20A8 JUMPI PUSH1 0x0 PUSH2 0x204A PUSH1 0x1 SLOAD NUMBER PUSH2 0x1342 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2063 PUSH1 0x3 SLOAD DUP4 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x20A3 PUSH2 0x2094 PUSH1 0x6 SLOAD PUSH2 0x2086 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH2 0x2102 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x20F4 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x20E6 PUSH5 0xE8D4A51000 PUSH2 0x20D8 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x218C DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x212A SWAP3 SWAP2 SWAP1 PUSH2 0x2A2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2255 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x231C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2317 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x22D7 SWAP2 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH2 0x2316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230D SWAP1 PUSH2 0x2B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x232B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x233F DUP6 PUSH2 0x2456 JUMP JUMPDEST PUSH2 0x237E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2375 SWAP1 PUSH2 0x2BE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x23A7 SWAP2 SWAP1 PUSH2 0x2990 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23E4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23E9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x23FE JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x244E JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2411 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2445 SWAP2 SWAP1 PUSH2 0x2AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x2498 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24B0 DUP2 PUSH2 0x3214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24C5 DUP2 PUSH2 0x3214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x24E1 JUMPI PUSH2 0x24E0 PUSH2 0x2FE1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24FE JUMPI PUSH2 0x24FD PUSH2 0x2FDC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x251A JUMPI PUSH2 0x2519 PUSH2 0x2FE6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2530 DUP2 PUSH2 0x322B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2545 DUP2 PUSH2 0x3242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x255A DUP2 PUSH2 0x3242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2576 JUMPI PUSH2 0x2575 PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2584 DUP5 DUP3 DUP6 ADD PUSH2 0x24A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25A3 JUMPI PUSH2 0x25A2 PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25B1 DUP5 DUP3 DUP6 ADD PUSH2 0x24B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25D1 JUMPI PUSH2 0x25D0 PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25EF JUMPI PUSH2 0x25EE PUSH2 0x2FEB JUMP JUMPDEST JUMPDEST PUSH2 0x25FB DUP6 DUP3 DUP7 ADD PUSH2 0x24CB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x261D JUMPI PUSH2 0x261C PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x262B DUP5 DUP3 DUP6 ADD PUSH2 0x2521 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x264A JUMPI PUSH2 0x2649 PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2658 DUP5 DUP3 DUP6 ADD PUSH2 0x2536 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2677 JUMPI PUSH2 0x2676 PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2685 DUP5 DUP3 DUP6 ADD PUSH2 0x254B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26A5 JUMPI PUSH2 0x26A4 PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26B3 DUP6 DUP3 DUP7 ADD PUSH2 0x2536 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26C4 DUP6 DUP3 DUP7 ADD PUSH2 0x2536 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DA DUP4 DUP4 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26EF DUP2 PUSH2 0x2E05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2701 DUP4 DUP6 PUSH2 0x2CC3 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2734 JUMPI PUSH2 0x2733 PUSH2 0x2FF0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x2745 DUP4 DUP6 DUP5 PUSH2 0x2E95 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275C DUP3 PUSH2 0x2C95 JUMP JUMPDEST PUSH2 0x2766 DUP2 DUP6 PUSH2 0x2CC3 JUMP JUMPDEST SWAP4 POP PUSH2 0x2771 DUP4 PUSH2 0x2C85 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27A2 JUMPI DUP2 MLOAD PUSH2 0x2789 DUP9 DUP3 PUSH2 0x26CE JUMP JUMPDEST SWAP8 POP PUSH2 0x2794 DUP4 PUSH2 0x2CB6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2775 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BA DUP3 PUSH2 0x2CA0 JUMP JUMPDEST PUSH2 0x27C4 DUP2 DUP6 PUSH2 0x2CD4 JUMP JUMPDEST SWAP4 POP PUSH2 0x27D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2EA4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E9 DUP2 PUSH2 0x2E4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x27F8 DUP2 PUSH2 0x2E5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2809 DUP3 PUSH2 0x2CAB JUMP JUMPDEST PUSH2 0x2813 DUP2 DUP6 PUSH2 0x2CDF JUMP JUMPDEST SWAP4 POP PUSH2 0x2823 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2EA4 JUMP JUMPDEST PUSH2 0x282C DUP2 PUSH2 0x2FFA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2844 PUSH1 0x18 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x284F DUP3 PUSH2 0x300B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2867 PUSH1 0x2A DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2872 DUP3 PUSH2 0x3034 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288A PUSH1 0x26 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2895 DUP3 PUSH2 0x3083 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28AD PUSH1 0x31 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x28B8 DUP3 PUSH2 0x30D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D0 PUSH1 0x20 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x28DB DUP3 PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F3 PUSH1 0x20 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x28FE DUP3 PUSH2 0x314A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2916 PUSH1 0x1E DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2921 DUP3 PUSH2 0x3173 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2939 PUSH1 0x1D DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2944 DUP3 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295C PUSH1 0x39 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2967 DUP3 PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x297B DUP2 PUSH2 0x2E43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x298A DUP2 PUSH2 0x2E43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299C DUP3 DUP5 PUSH2 0x27AF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29D7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26E6 JUMP JUMPDEST PUSH2 0x29E4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x26E6 JUMP JUMPDEST PUSH2 0x29F1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2981 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A0E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26E6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2A21 DUP2 DUP5 DUP7 PUSH2 0x26F5 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A40 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26E6 JUMP JUMPDEST PUSH2 0x2A4D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2981 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A69 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26E6 JUMP JUMPDEST PUSH2 0x2A76 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2981 JUMP JUMPDEST PUSH2 0x2A83 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2981 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AA5 DUP2 DUP5 PUSH2 0x2751 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2ADD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AFD DUP2 DUP5 PUSH2 0x27FE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B1E DUP2 PUSH2 0x2837 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B3E DUP2 PUSH2 0x285A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B5E DUP2 PUSH2 0x287D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B7E DUP2 PUSH2 0x28A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B9E DUP2 PUSH2 0x28C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BBE DUP2 PUSH2 0x28E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BDE DUP2 PUSH2 0x2909 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BFE DUP2 PUSH2 0x292C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C1E DUP2 PUSH2 0x294F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2981 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2C55 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2981 JUMP JUMPDEST PUSH2 0x2C62 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2981 JUMP JUMPDEST PUSH2 0x2C6F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2981 JUMP JUMPDEST PUSH2 0x2C7C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2981 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CFB DUP3 PUSH2 0x2E43 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D06 DUP4 PUSH2 0x2E43 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2D3B JUMPI PUSH2 0x2D3A PUSH2 0x2F20 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D51 DUP3 PUSH2 0x2E43 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D5C DUP4 PUSH2 0x2E43 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2D6C JUMPI PUSH2 0x2D6B PUSH2 0x2F4F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D82 DUP3 PUSH2 0x2E43 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D8D DUP4 PUSH2 0x2E43 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2DC6 JUMPI PUSH2 0x2DC5 PUSH2 0x2F20 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDC DUP3 PUSH2 0x2E43 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DE7 DUP4 PUSH2 0x2E43 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2DFA JUMPI PUSH2 0x2DF9 PUSH2 0x2F20 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E10 DUP3 PUSH2 0x2E23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E58 DUP3 PUSH2 0x2E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6A DUP3 PUSH2 0x2E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E7C DUP3 PUSH2 0x2E83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E8E DUP3 PUSH2 0x2E23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EC2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2EA7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2ED1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE2 DUP3 PUSH2 0x2E43 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2F15 JUMPI PUSH2 0x2F14 PUSH2 0x2F20 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A20456D7074792041727261790000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A206475706C696361746520746F6B656E20696473 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20696E20696E70757420706172616D732E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A206E6F74206F776E6572206F6620746F6B656E2E PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x736574486172766573744665653A2066656550657263656E74203E2034300000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E667420556E7374616B696E673A20746F6B656E206E6F74207374616B656420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F7220696E636F727265637420746F6B656E206F776E65722E00000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x321D DUP2 PUSH2 0x2E05 JUMP JUMPDEST DUP2 EQ PUSH2 0x3228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3234 DUP2 PUSH2 0x2E17 JUMP JUMPDEST DUP2 EQ PUSH2 0x323F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x324B DUP2 PUSH2 0x2E43 JUMP JUMPDEST DUP2 EQ PUSH2 0x3256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xF SUB MOD JUMP 0x2C PUSH17 0x50FB4362A04B54D39BE153609B603D55CC 0xFC DUP16 0xF8 PUSH12 0x1F4291B64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "27968:8890:0:-:0;;;29288:286;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4790:32;4809:12;:10;;;:12;;:::i;:::-;4790:18;;;:32;;:::i;:::-;29448:9;29437:20;;;;;;;;;;;;29480:10;29468:22;;;;;;;;;;;;29518:15;29501:14;:32;;;;29556:10;29544:9;;:22;;;;;;;;;;;;;;;;;;29288:286;;;;27968:8890;;3751:98;3804:7;3831:10;3824:17;;3751:98;:::o;6181:191::-;6255:16;6274:6;;;;;;;;;;;6255:25;;6300:8;6291:6;;:17;;;;;;;;;;;;;;;;;;6355:8;6324:40;;6345:8;6324:40;;;;;;;;;;;;6244:128;6181:191;:::o;7:143:1:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:171::-;227:5;258:6;252:13;243:22;;274:47;315:5;274:47;:::i;:::-;156:171;;;;:::o;333:175::-;406:5;437:6;431:13;422:22;;453:49;496:5;453:49;:::i;:::-;333:175;;;;:::o;514:143::-;571:5;602:6;596:13;587:22;;618:33;645:5;618:33;:::i;:::-;514:143;;;;:::o;663:880::-;790:6;798;806;814;863:3;851:9;842:7;838:23;834:33;831:120;;;870:79;;:::i;:::-;831:120;990:1;1015:80;1087:7;1078:6;1067:9;1063:22;1015:80;:::i;:::-;1005:90;;961:144;1144:2;1170:78;1240:7;1231:6;1220:9;1216:22;1170:78;:::i;:::-;1160:88;;1115:143;1297:2;1323:64;1379:7;1370:6;1359:9;1355:22;1323:64;:::i;:::-;1313:74;;1268:129;1436:2;1462:64;1518:7;1509:6;1498:9;1494:22;1462:64;:::i;:::-;1452:74;;1407:129;663:880;;;;;;;:::o;1630:96::-;1667:7;1696:24;1714:5;1696:24;:::i;:::-;1685:35;;1630:96;;;:::o;1732:110::-;1783:7;1812:24;1830:5;1812:24;:::i;:::-;1801:35;;1732:110;;;:::o;1848:112::-;1901:7;1930:24;1948:5;1930:24;:::i;:::-;1919:35;;1848:112;;;:::o;1966:126::-;2003:7;2043:42;2036:5;2032:54;2021:65;;1966:126;;;:::o;2098:77::-;2135:7;2164:5;2153:16;;2098:77;;;:::o;2304:117::-;2413:1;2410;2403:12;2427:122;2500:24;2518:5;2500:24;:::i;:::-;2493:5;2490:35;2480:63;;2539:1;2536;2529:12;2480:63;2427:122;:::o;2555:150::-;2642:38;2674:5;2642:38;:::i;:::-;2635:5;2632:49;2622:77;;2695:1;2692;2685:12;2622:77;2555:150;:::o;2711:154::-;2800:40;2834:5;2800:40;:::i;:::-;2793:5;2790:51;2780:79;;2855:1;2852;2845:12;2780:79;2711:154;:::o;2871:122::-;2944:24;2962:5;2944:24;:::i;:::-;2937:5;2934:35;2924:63;;2983:1;2980;2973:12;2924:63;2871:122;:::o;27968:8890:0:-;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_748": {
									"entryPoint": 8789,
									"id": 748,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_functionCallWithValue_950": {
									"entryPoint": 9012,
									"id": 950,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_getPending_2022": {
									"entryPoint": 8152,
									"id": 2022,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_111": {
									"entryPoint": 8007,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_223": {
									"entryPoint": 8593,
									"id": 223,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@accGHSPPerShare_1105": {
									"entryPoint": 3212,
									"id": 1105,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_399": {
									"entryPoint": 7985,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOfStakes_2194": {
									"entryPoint": 2851,
									"id": 2194,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositReward_1334": {
									"entryPoint": 2542,
									"id": 1334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_444": {
									"entryPoint": 7941,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@feeWallet_1109": {
									"entryPoint": 7325,
									"id": 1109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCall_847": {
									"entryPoint": 8988,
									"id": 847,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1262": {
									"entryPoint": 4930,
									"id": 1262,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPending_1948": {
									"entryPoint": 5300,
									"id": 1948,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRewardBalance_1301": {
									"entryPoint": 4383,
									"id": 1301,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ghspToken_1101": {
									"entryPoint": 2506,
									"id": 1101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@harvestFee_1111": {
									"entryPoint": 5258,
									"id": 1111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@harvest_2143": {
									"entryPoint": 3218,
									"id": 2143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_776": {
									"entryPoint": 9302,
									"id": 776,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastRewardBlock_1103": {
									"entryPoint": 5252,
									"id": 1103,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_429": {
									"entryPoint": 7919,
									"id": 429,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nftToken_1098": {
									"entryPoint": 5264,
									"id": 1098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_152": {
									"entryPoint": 4889,
									"id": 152,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_180": {
									"entryPoint": 4490,
									"id": 180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerBlock_1107": {
									"entryPoint": 4883,
									"id": 1107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_591": {
									"entryPoint": 8015,
									"id": 591,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_565": {
									"entryPoint": 8459,
									"id": 565,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setFeeWallet_1224": {
									"entryPoint": 4959,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setHarvestFee_1247": {
									"entryPoint": 4626,
									"id": 1247,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1650": {
									"entryPoint": 992,
									"id": 1650,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_414": {
									"entryPoint": 7963,
									"id": 414,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalStakedAmount_1113": {
									"entryPoint": 4377,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_203": {
									"entryPoint": 7363,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_1920": {
									"entryPoint": 5379,
									"id": 1920,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateStatus_1430": {
									"entryPoint": 7611,
									"id": 1430,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userInfo_1134": {
									"entryPoint": 2458,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 9377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 9398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 9419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 9613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 9658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 9934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9973,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack": {
									"entryPoint": 10208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$1076_to_t_address_fromStack": {
									"entryPoint": 10223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 10610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10690,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_calldata_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10745,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10795,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10836,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$100__to_t_address__fromStack_reversed": {
									"entryPoint": 10925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$1076__to_t_address__fromStack_reversed": {
									"entryPoint": 10952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 11301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11328,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 11397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 11413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 11435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 11446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 11459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 11487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 11781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 11799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 11811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 11843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$100_to_t_address": {
									"entryPoint": 11853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$1076_to_t_address": {
									"entryPoint": 11871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 11889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 11907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 11925,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 11940,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 11991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 12111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 12158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 12205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 12252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 12257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 12262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 12267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec": {
									"entryPoint": 12272,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 12277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 12282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5": {
									"entryPoint": 12299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 12340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 12419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55": {
									"entryPoint": 12498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06": {
									"entryPoint": 12577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 12618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e": {
									"entryPoint": 12659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 12700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b": {
									"entryPoint": 12741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 12820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 12843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 12866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:26260:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "225:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "240:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "234:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "283:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "256:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "256:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "193:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "201:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "209:5:1",
														"type": ""
													}
												],
												"src": "152:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "408:478:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "457:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "459:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "459:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "459:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "436:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "444:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "451:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "428:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "421:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "421:35:1"
															},
															"nodeType": "YulIf",
															"src": "418:122:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "549:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "572:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "559:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "559:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "549:6:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "622:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "624:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "624:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "624:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "594:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "591:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:30:1"
															},
															"nodeType": "YulIf",
															"src": "588:117:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "714:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "730:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "738:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:17:1"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "714:8:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "797:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "799:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "799:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "799:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "762:8:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "776:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "784:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "772:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "772:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "758:32:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "792:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "755:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:41:1"
															},
															"nodeType": "YulIf",
															"src": "752:128:1"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "375:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "383:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "391:8:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "401:6:1",
														"type": ""
													}
												],
												"src": "318:568:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "952:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "962:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "977:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "971:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "971:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "962:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1017:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "993:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "993:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "930:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "938:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "946:5:1",
														"type": ""
													}
												],
												"src": "892:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1087:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1097:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1119:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1106:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1097:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1162:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1135:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1135:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1135:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1065:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1073:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1081:5:1",
														"type": ""
													}
												],
												"src": "1035:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1253:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1268:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1262:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1253:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1311:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1284:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1284:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1284:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1221:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1229:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1237:5:1",
														"type": ""
													}
												],
												"src": "1180:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1395:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1441:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1443:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1443:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1443:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1416:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1412:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1412:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1408:32:1"
															},
															"nodeType": "YulIf",
															"src": "1405:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1534:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1549:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1553:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1578:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1613:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1624:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1609:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1609:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1633:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1588:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1588:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1578:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1365:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1376:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1388:6:1",
														"type": ""
													}
												],
												"src": "1329:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1741:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1787:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1789:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1789:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1789:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1762:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1771:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1758:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1783:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:32:1"
															},
															"nodeType": "YulIf",
															"src": "1751:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1880:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1895:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1909:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1899:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1924:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1970:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1981:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1966:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1966:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1990:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1934:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1924:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1711:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1722:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1734:6:1",
														"type": ""
													}
												],
												"src": "1664:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2122:458:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2168:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2170:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2170:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2170:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2143:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2139:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2135:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:1"
															},
															"nodeType": "YulIf",
															"src": "2132:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2261:312:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2276:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2307:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2318:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2303:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2303:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2290:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2290:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2280:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2368:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2370:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2370:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2370:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2337:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2334:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2465:98:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2535:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2546:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2531:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2531:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2555:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2483:47:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2483:80:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2465:6:1"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2473:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2084:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2095:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2107:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2115:6:1",
														"type": ""
													}
												],
												"src": "2021:559:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2660:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2706:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2708:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2708:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2708:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2681:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2690:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2677:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2673:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2673:32:1"
															},
															"nodeType": "YulIf",
															"src": "2670:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2799:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2814:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2818:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2843:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2886:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2897:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2882:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2882:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2906:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2853:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2853:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2843:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2630:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2641:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2653:6:1",
														"type": ""
													}
												],
												"src": "2586:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3003:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3049:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3051:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3051:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3051:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3024:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3033:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3020:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3020:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3045:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:32:1"
															},
															"nodeType": "YulIf",
															"src": "3013:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3142:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3157:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3171:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3161:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3186:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3221:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3232:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3217:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3217:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3241:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3196:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3186:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2973:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2984:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2996:6:1",
														"type": ""
													}
												],
												"src": "2937:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3349:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3395:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3397:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3397:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3397:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3370:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3379:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3366:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3391:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3362:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3362:32:1"
															},
															"nodeType": "YulIf",
															"src": "3359:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3488:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3503:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3517:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3507:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3532:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3578:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3589:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3574:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3574:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3598:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3542:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3542:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3532:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3319:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3330:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3342:6:1",
														"type": ""
													}
												],
												"src": "3272:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3712:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3758:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3760:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3760:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3760:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3733:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3742:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3729:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3729:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3754:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3725:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3725:32:1"
															},
															"nodeType": "YulIf",
															"src": "3722:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3851:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3866:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3880:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3870:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3895:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3930:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3941:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3926:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3926:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3950:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3905:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3905:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3895:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3978:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3993:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4007:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3997:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4023:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4058:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4069:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4054:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4054:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4078:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4033:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4033:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4023:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3674:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3685:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3697:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3705:6:1",
														"type": ""
													}
												],
												"src": "3629:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4189:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4233:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4241:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4199:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4199:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4199:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4254:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4272:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4277:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4268:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "4254:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4162:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4170:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "4178:10:1",
														"type": ""
													}
												],
												"src": "4109:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4359:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4376:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4399:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4381:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4381:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4369:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4369:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4369:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4347:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4354:3:1",
														"type": ""
													}
												],
												"src": "4294:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4580:405:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4590:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4671:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4676:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4597:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4597:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4590:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4775:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
																				"nodeType": "YulIdentifier",
																				"src": "4777:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4777:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4777:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4699:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4707:66:1",
																		"type": "",
																		"value": "0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4696:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4696:78:1"
															},
															"nodeType": "YulIf",
															"src": "4693:165:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4867:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4881:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4889:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:17:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4867:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "4928:5:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4935:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4940:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4904:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4904:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4904:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4956:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4967:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4972:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4963:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4963:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4956:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "4553:5:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4560:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4568:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4576:3:1",
														"type": ""
													}
												],
												"src": "4448:537:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5145:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5155:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5217:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5169:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5169:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5159:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5232:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5313:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5318:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5239:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5239:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5232:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5334:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5399:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5349:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5349:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "5338:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5414:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "5428:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5418:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5504:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5518:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5545:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5539:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5539:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "5522:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5565:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "5616:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5631:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5572:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5572:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5565:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5648:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5711:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5658:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5658:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5648:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5466:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5469:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5463:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5463:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5477:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5479:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5488:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5491:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5484:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5484:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5479:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5448:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5450:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5459:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "5454:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5444:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5737:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5744:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5737:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5124:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5131:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5140:3:1",
														"type": ""
													}
												],
												"src": "5021:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5867:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5877:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5923:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5891:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5891:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5881:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5938:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6021:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6026:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5945:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5945:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5938:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6068:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6075:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6064:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6082:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6087:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6042:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6042:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6042:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6103:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6114:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6119:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6110:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6110:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6103:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5848:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5855:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5863:3:1",
														"type": ""
													}
												],
												"src": "5759:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6217:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6234:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6284:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$100_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6239:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6239:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6227:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6227:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6205:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6212:3:1",
														"type": ""
													}
												],
												"src": "6138:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6384:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6401:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6453:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$1076_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6406:46:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6406:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6394:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6394:66:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$1076_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6372:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6379:3:1",
														"type": ""
													}
												],
												"src": "6303:163:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6564:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6574:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6621:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6588:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6578:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6636:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6702:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6707:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6643:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6636:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6749:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6756:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6745:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6763:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6768:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6723:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6784:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6795:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6822:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6800:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6800:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6791:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6545:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6552:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6560:3:1",
														"type": ""
													}
												],
												"src": "6472:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6988:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6998:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7064:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7069:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7005:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7005:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6998:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7170:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5",
																	"nodeType": "YulIdentifier",
																	"src": "7081:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7081:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7081:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7183:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7194:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7199:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7190:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7190:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7183:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6976:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6984:3:1",
														"type": ""
													}
												],
												"src": "6842:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7360:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7370:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7436:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7441:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7377:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7377:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7370:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7542:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "7453:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7453:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7453:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7555:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7566:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7571:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7562:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7562:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7555:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7348:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7356:3:1",
														"type": ""
													}
												],
												"src": "7214:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7732:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7742:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7808:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7813:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7749:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7749:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7742:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7914:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "7825:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7825:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7927:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7938:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7943:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7934:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7934:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7927:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7720:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7728:3:1",
														"type": ""
													}
												],
												"src": "7586:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8104:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8114:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8180:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8185:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8121:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8121:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8114:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8286:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55",
																	"nodeType": "YulIdentifier",
																	"src": "8197:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8197:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8299:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8310:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8315:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8306:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8306:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8299:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8092:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8100:3:1",
														"type": ""
													}
												],
												"src": "7958:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8476:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8486:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8552:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8557:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8493:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8493:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8486:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8658:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06",
																	"nodeType": "YulIdentifier",
																	"src": "8569:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8569:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8569:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8671:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8682:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8687:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8678:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8678:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8671:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8464:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8472:3:1",
														"type": ""
													}
												],
												"src": "8330:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8848:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8858:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8924:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8929:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8865:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8865:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8858:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9030:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "8941:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8941:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8941:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9043:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9054:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9059:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9050:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9050:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9043:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8836:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8844:3:1",
														"type": ""
													}
												],
												"src": "8702:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9220:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9230:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9296:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9301:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9237:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9237:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9230:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9402:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e",
																	"nodeType": "YulIdentifier",
																	"src": "9313:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9313:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9415:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9426:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9431:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9422:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9422:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9415:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9208:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9216:3:1",
														"type": ""
													}
												],
												"src": "9074:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9592:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9602:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9668:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9673:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9609:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9609:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9602:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9774:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "9685:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9685:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9685:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9787:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9798:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9803:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9794:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9794:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9787:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9580:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9588:3:1",
														"type": ""
													}
												],
												"src": "9446:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9964:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9974:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10040:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10045:2:1",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9981:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9981:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9974:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10146:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b",
																	"nodeType": "YulIdentifier",
																	"src": "10057:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10057:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10057:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10159:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10170:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10175:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10166:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10159:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9952:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9960:3:1",
														"type": ""
													}
												],
												"src": "9818:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10245:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10262:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10285:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10267:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10255:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10255:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10233:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10240:3:1",
														"type": ""
													}
												],
												"src": "10190:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10369:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10386:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10409:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10391:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10391:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10379:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10379:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10379:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10357:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10364:3:1",
														"type": ""
													}
												],
												"src": "10304:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10562:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10573:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10660:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10669:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10580:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10580:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10573:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10683:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10690:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10683:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10541:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10547:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10558:3:1",
														"type": ""
													}
												],
												"src": "10428:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10803:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10813:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10825:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10836:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10821:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10821:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10813:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10893:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10906:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10917:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10902:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10902:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10849:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10849:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10849:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10775:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10787:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10798:4:1",
														"type": ""
													}
												],
												"src": "10705:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11087:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11097:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11109:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11120:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11105:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11105:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11097:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11177:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11190:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11201:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11186:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11186:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11133:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11133:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11133:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11258:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11271:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11282:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11267:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11214:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11214:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11214:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11340:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11353:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11364:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11349:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11349:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11296:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11296:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11296:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11043:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11055:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11063:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11071:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11082:4:1",
														"type": ""
													}
												],
												"src": "10933:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11567:317:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11577:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11589:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11600:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11585:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11585:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11577:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11657:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11670:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11681:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11666:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11666:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11613:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11613:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11613:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11705:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11716:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11701:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11701:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11725:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11731:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11721:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11721:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11694:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11694:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11751:126:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11855:6:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11863:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11872:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11759:95:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11759:118:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11751:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_calldata_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11523:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11535:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11543:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11551:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11562:4:1",
														"type": ""
													}
												],
												"src": "11381:503:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12016:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12026:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12038:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12049:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12034:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12034:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12026:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12106:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12119:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12130:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12115:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12115:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12062:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12062:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12062:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12187:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12200:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12211:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12196:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12196:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12143:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12143:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12143:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11980:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11992:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12000:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12011:4:1",
														"type": ""
													}
												],
												"src": "11890:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12382:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12392:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12404:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12415:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12400:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12392:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12472:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12485:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12496:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12481:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12428:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12428:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12428:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12577:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12562:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12509:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12509:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12635:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12648:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12659:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12644:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12644:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12591:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12591:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12591:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12338:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12350:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12358:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12366:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12377:4:1",
														"type": ""
													}
												],
												"src": "12228:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12824:225:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12834:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12846:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12857:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12842:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12842:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12834:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12881:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12892:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12877:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12877:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12900:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12906:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12896:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12896:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12870:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12870:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12870:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12926:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13028:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13037:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12934:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12934:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12926:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12796:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12808:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12819:4:1",
														"type": ""
													}
												],
												"src": "12676:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13167:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13177:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13189:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13200:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13185:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13185:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13177:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13271:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13295:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13280:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13213:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13213:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13213:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$100__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13139:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13151:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13162:4:1",
														"type": ""
													}
												],
												"src": "13055:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13425:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13435:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13447:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13458:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13443:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13435:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13531:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13544:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13555:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13540:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13540:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$1076_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13471:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13471:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13471:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$1076__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13397:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13409:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13420:4:1",
														"type": ""
													}
												],
												"src": "13311:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13689:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13699:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13711:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13722:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13707:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13707:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13699:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13746:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13757:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13742:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13765:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13771:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13761:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13735:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13735:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13735:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13791:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13863:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13872:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13799:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13799:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13791:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13661:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13673:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13684:4:1",
														"type": ""
													}
												],
												"src": "13571:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14061:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14071:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14083:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14094:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14079:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14079:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14071:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14118:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14129:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14114:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14114:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14137:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14143:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14133:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14133:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14107:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14107:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14107:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14163:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14297:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14171:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14171:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14163:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14041:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14056:4:1",
														"type": ""
													}
												],
												"src": "13890:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14486:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14496:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14508:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14519:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14504:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14504:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14496:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14543:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14554:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14539:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14539:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14562:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14568:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14558:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14532:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14532:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14532:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14588:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14722:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14596:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14596:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14588:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14466:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14481:4:1",
														"type": ""
													}
												],
												"src": "14315:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14911:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14921:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14933:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14944:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14929:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14929:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14921:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14968:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14979:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14964:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14987:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14993:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14983:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14957:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14957:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15013:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15147:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15021:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15021:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15013:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14891:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14906:4:1",
														"type": ""
													}
												],
												"src": "14740:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15336:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15346:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15358:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15369:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15354:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15354:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15346:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15393:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15404:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15389:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15389:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15412:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15418:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15408:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15382:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15382:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15382:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15438:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15572:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15446:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15446:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15438:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15316:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15331:4:1",
														"type": ""
													}
												],
												"src": "15165:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15761:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15771:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15794:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15779:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15771:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15818:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15829:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15814:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15814:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15837:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15843:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15833:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15807:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15807:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15807:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15863:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15997:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15871:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15871:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15863:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15741:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15756:4:1",
														"type": ""
													}
												],
												"src": "15590:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16186:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16196:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16208:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16219:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16204:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16196:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16243:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16254:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16239:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16262:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16268:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16258:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16232:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16232:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16288:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16422:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16296:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16296:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16288:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16166:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16181:4:1",
														"type": ""
													}
												],
												"src": "16015:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16611:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16621:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16633:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16644:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16629:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16629:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16621:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16668:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16679:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16664:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16664:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16687:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16693:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16683:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16683:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16657:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16657:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16713:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16847:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16721:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16721:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16713:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16591:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16606:4:1",
														"type": ""
													}
												],
												"src": "16440:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17036:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17046:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17058:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17069:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17054:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17054:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17046:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17093:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17104:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17089:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17089:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17112:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17118:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17108:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17108:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17082:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17082:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17082:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17138:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17272:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17146:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17146:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17138:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17016:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17031:4:1",
														"type": ""
													}
												],
												"src": "16865:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17461:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17471:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17483:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17494:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17479:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17479:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17471:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17518:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17529:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17514:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17514:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17537:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17543:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17533:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17533:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17507:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17507:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17507:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17563:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17697:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17571:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17571:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17563:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17441:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17456:4:1",
														"type": ""
													}
												],
												"src": "17290:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17813:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17823:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17835:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17846:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17831:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17831:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17823:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17903:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17916:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17927:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17912:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17912:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17859:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17859:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17859:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17785:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17797:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17808:4:1",
														"type": ""
													}
												],
												"src": "17715:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18125:371:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18135:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18147:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18158:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18143:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18143:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18135:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18216:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18229:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18240:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18225:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18172:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18172:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18172:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18297:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18310:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18321:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18306:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18253:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18253:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18253:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18379:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18392:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18403:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18388:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18388:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18335:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18335:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18335:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18461:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18474:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18485:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18470:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18470:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18417:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18417:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18417:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18073:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18085:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18093:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18101:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18109:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18120:4:1",
														"type": ""
													}
												],
												"src": "17943:553:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18542:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18552:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18568:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18562:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18562:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "18552:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18535:6:1",
														"type": ""
													}
												],
												"src": "18502:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18655:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18665:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "18673:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18665:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18686:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18698:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18703:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18694:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18694:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18686:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "18642:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18650:4:1",
														"type": ""
													}
												],
												"src": "18583:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18795:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18806:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18822:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18816:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18816:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18806:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18778:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18788:6:1",
														"type": ""
													}
												],
												"src": "18721:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18899:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18910:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18926:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18920:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18920:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18910:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18882:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18892:6:1",
														"type": ""
													}
												],
												"src": "18841:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19004:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19015:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19031:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19025:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19025:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19015:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18987:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18997:6:1",
														"type": ""
													}
												],
												"src": "18945:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19125:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19135:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "19147:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19152:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19143:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19143:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "19135:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "19112:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "19120:4:1",
														"type": ""
													}
												],
												"src": "19050:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19280:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19297:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19302:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19290:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19290:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19290:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19318:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19337:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19342:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19333:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19333:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "19318:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19252:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19257:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "19268:11:1",
														"type": ""
													}
												],
												"src": "19169:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19472:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19482:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "19497:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "19482:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19444:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19449:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "19460:11:1",
														"type": ""
													}
												],
												"src": "19359:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19608:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19625:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19630:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19618:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19618:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19618:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19646:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19665:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19670:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19661:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19661:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "19646:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19580:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19585:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "19596:11:1",
														"type": ""
													}
												],
												"src": "19512:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19731:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19741:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19764:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19746:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19746:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19741:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19775:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19798:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19780:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19780:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19775:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19938:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19940:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19940:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19940:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19859:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19866:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19934:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19862:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19862:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19856:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19856:81:1"
															},
															"nodeType": "YulIf",
															"src": "19853:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19970:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19981:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19984:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19977:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19977:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "19970:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19718:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19721:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19727:3:1",
														"type": ""
													}
												],
												"src": "19687:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20040:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20050:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20073:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20055:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20055:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20050:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20084:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20107:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20089:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20089:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20084:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20131:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "20133:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20133:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20133:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20128:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20121:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20121:9:1"
															},
															"nodeType": "YulIf",
															"src": "20118:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20163:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20172:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20175:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "20168:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20168:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "20163:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20029:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20032:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "20038:1:1",
														"type": ""
													}
												],
												"src": "19998:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20237:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20247:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20270:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20252:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20252:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20247:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20281:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20304:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20286:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20286:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20281:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20479:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20481:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20481:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20481:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20391:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20384:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20384:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20377:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20377:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20399:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20406:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20474:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "20402:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20402:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20396:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20396:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20373:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20373:105:1"
															},
															"nodeType": "YulIf",
															"src": "20370:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20511:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20526:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20529:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "20522:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20522:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "20511:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20220:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20223:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "20229:7:1",
														"type": ""
													}
												],
												"src": "20189:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20588:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20598:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20621:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20603:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20603:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20598:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20632:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20655:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20637:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20637:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20632:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20679:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20681:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20681:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20681:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20673:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20676:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20670:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20670:8:1"
															},
															"nodeType": "YulIf",
															"src": "20667:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20711:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20723:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20726:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20719:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20719:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "20711:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20574:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20577:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "20583:4:1",
														"type": ""
													}
												],
												"src": "20543:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20785:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20795:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20824:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20806:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20806:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20795:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20767:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20777:7:1",
														"type": ""
													}
												],
												"src": "20740:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20884:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20894:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20919:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20912:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20912:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20905:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20905:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20894:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20866:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20876:7:1",
														"type": ""
													}
												],
												"src": "20842:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20983:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20993:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21008:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21015:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21004:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21004:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20993:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20965:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20975:7:1",
														"type": ""
													}
												],
												"src": "20938:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21115:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21125:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "21136:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "21125:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21097:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "21107:7:1",
														"type": ""
													}
												],
												"src": "21070:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21227:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21237:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21281:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "21250:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21250:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "21237:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$100_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21207:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "21217:9:1",
														"type": ""
													}
												],
												"src": "21153:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21375:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21385:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21429:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "21398:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21398:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "21385:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$1076_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21355:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "21365:9:1",
														"type": ""
													}
												],
												"src": "21299:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21507:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21517:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21561:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "21530:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21530:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "21517:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21487:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "21497:9:1",
														"type": ""
													}
												],
												"src": "21447:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21639:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21649:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21680:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "21662:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21662:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "21649:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21619:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "21629:9:1",
														"type": ""
													}
												],
												"src": "21579:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21749:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "21772:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "21777:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21782:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "21759:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21759:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21759:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "21830:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21835:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21826:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21826:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21844:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21819:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21819:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21819:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "21731:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "21736:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21741:6:1",
														"type": ""
													}
												],
												"src": "21698:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21907:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21917:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21926:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "21921:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21986:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "22011:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "22016:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "22007:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22007:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "22030:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "22035:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "22026:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "22026:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "22020:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22020:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22000:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22000:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22000:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21947:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21950:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "21944:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21944:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "21958:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21960:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "21969:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21972:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "21965:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21965:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "21960:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "21940:3:1",
																"statements": []
															},
															"src": "21936:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22083:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "22133:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "22138:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "22129:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22129:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22147:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22122:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22122:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22122:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "22064:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22067:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22061:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22061:13:1"
															},
															"nodeType": "YulIf",
															"src": "22058:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "21889:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "21894:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21899:6:1",
														"type": ""
													}
												],
												"src": "21858:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22214:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22224:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22251:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22233:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22233:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "22224:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22347:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22349:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22349:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22349:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22272:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22279:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "22269:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22269:77:1"
															},
															"nodeType": "YulIf",
															"src": "22266:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22378:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22389:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22396:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22385:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22385:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "22378:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22200:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "22210:3:1",
														"type": ""
													}
												],
												"src": "22171:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22438:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22455:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22458:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22448:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22448:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22552:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22555:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22545:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22545:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22545:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22576:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22579:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22569:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22569:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "22410:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22624:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22641:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22644:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22634:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22634:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22738:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22741:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22731:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22731:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22731:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22762:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22765:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22755:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22755:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22755:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "22596:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22810:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22827:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22830:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22820:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22820:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22924:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22927:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22917:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22917:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22917:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22948:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22951:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22941:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22941:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22941:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "22782:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22996:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23013:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23016:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23006:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23006:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23006:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23110:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23113:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23103:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23103:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23103:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23134:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23137:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23127:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23127:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "22968:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23243:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23260:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23263:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23253:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23253:12:1"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "23154:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23366:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23383:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23386:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23376:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23376:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23376:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "23277:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23489:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23506:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23509:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23499:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23499:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23499:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "23400:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23622:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23622:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "23523:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23745:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23745:12:1"
														}
													]
												},
												"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
												"nodeType": "YulFunctionDefinition",
												"src": "23646:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23858:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23875:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23878:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23868:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23868:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23868:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "23769:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23940:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23950:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23968:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23975:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23964:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23984:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "23980:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23980:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23960:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23960:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "23950:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23923:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "23933:6:1",
														"type": ""
													}
												],
												"src": "23892:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24106:68:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24128:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24136:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24124:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24124:14:1"
																	},
																	{
																		"hexValue": "4e4654205374616b696e673a20456d707479204172726179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24140:26:1",
																		"type": "",
																		"value": "NFT Staking: Empty Array"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24117:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24117:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24117:50:1"
														}
													]
												},
												"name": "store_literal_in_memory_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24098:6:1",
														"type": ""
													}
												],
												"src": "24000:174:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24286:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24308:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24316:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24304:14:1"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24320:34:1",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24297:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24297:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24297:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24376:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24384:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24372:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24372:15:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24389:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24365:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24365:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24365:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24278:6:1",
														"type": ""
													}
												],
												"src": "24180:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24521:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24543:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24551:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24539:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24539:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24555:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24532:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24532:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24532:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24611:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24619:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24607:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24624:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24600:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24600:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24513:6:1",
														"type": ""
													}
												],
												"src": "24415:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24752:130:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24774:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24782:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24770:14:1"
																	},
																	{
																		"hexValue": "4e4654205374616b696e673a206475706c696361746520746f6b656e20696473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24786:34:1",
																		"type": "",
																		"value": "NFT Staking: duplicate token ids"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24763:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24763:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24842:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24850:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24838:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24838:15:1"
																	},
																	{
																		"hexValue": "20696e20696e70757420706172616d732e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24855:19:1",
																		"type": "",
																		"value": " in input params."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24831:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24831:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24744:6:1",
														"type": ""
													}
												],
												"src": "24646:236:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24994:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25016:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25024:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25012:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25012:14:1"
																	},
																	{
																		"hexValue": "4e4654205374616b696e673a206e6f74206f776e6572206f6620746f6b656e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25028:34:1",
																		"type": "",
																		"value": "NFT Staking: not owner of token."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25005:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25005:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25005:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24986:6:1",
														"type": ""
													}
												],
												"src": "24888:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25182:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25204:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25212:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25200:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25216:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25193:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25193:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25174:6:1",
														"type": ""
													}
												],
												"src": "25076:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25370:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25392:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25400:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25388:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25388:14:1"
																	},
																	{
																		"hexValue": "736574486172766573744665653a2066656550657263656e74203e203430",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25404:32:1",
																		"type": "",
																		"value": "setHarvestFee: feePercent > 40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25381:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25381:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25381:56:1"
														}
													]
												},
												"name": "store_literal_in_memory_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25362:6:1",
														"type": ""
													}
												],
												"src": "25264:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25556:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25578:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25586:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25574:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25574:14:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25590:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25567:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25567:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25567:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25548:6:1",
														"type": ""
													}
												],
												"src": "25450:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25741:138:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25763:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25771:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25759:14:1"
																	},
																	{
																		"hexValue": "4e667420556e7374616b696e673a20746f6b656e206e6f74207374616b656420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25775:34:1",
																		"type": "",
																		"value": "Nft Unstaking: token not staked "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25752:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25752:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25752:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25831:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25839:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25827:15:1"
																	},
																	{
																		"hexValue": "6f7220696e636f727265637420746f6b656e206f776e65722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25844:27:1",
																		"type": "",
																		"value": "or incorrect token owner."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25820:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25820:52:1"
														}
													]
												},
												"name": "store_literal_in_memory_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25733:6:1",
														"type": ""
													}
												],
												"src": "25635:244:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25928:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25985:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25994:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25997:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25987:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25987:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25987:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25951:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "25976:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "25958:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25958:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "25948:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25948:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25941:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25941:43:1"
															},
															"nodeType": "YulIf",
															"src": "25938:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25921:5:1",
														"type": ""
													}
												],
												"src": "25885:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26053:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26107:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26116:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26119:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "26109:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26109:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26109:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26076:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "26098:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "26083:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26083:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "26073:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26073:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26066:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26066:40:1"
															},
															"nodeType": "YulIf",
															"src": "26063:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26046:5:1",
														"type": ""
													}
												],
												"src": "26013:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26178:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26235:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26244:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26247:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "26237:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26237:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26237:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26201:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "26226:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "26208:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26208:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "26198:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26198:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26191:43:1"
															},
															"nodeType": "YulIf",
															"src": "26188:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26171:5:1",
														"type": ""
													}
												],
												"src": "26135:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n\n        if gt(length, 0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() }\n        length := mul(length, 0x20)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$100_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$1076_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$1076_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_calldata_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$100__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$1076__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$1076_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IBEP20_$100_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$1076_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT Staking: Empty Array\")\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT Staking: duplicate token ids\")\n\n        mstore(add(memPtr, 32), \" in input params.\")\n\n    }\n\n    function store_literal_in_memory_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT Staking: not owner of token.\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e(memPtr) {\n\n        mstore(add(memPtr, 0), \"setHarvestFee: feePercent > 40\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nft Unstaking: token not staked \")\n\n        mstore(add(memPtr, 32), \"or incorrect token owner.\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1098": [
									{
										"length": 32,
										"start": 1101
									},
									{
										"length": 32,
										"start": 2111
									},
									{
										"length": 32,
										"start": 5266
									},
									{
										"length": 32,
										"start": 6959
									}
								],
								"1101": [
									{
										"length": 32,
										"start": 2508
									},
									{
										"length": 32,
										"start": 2674
									},
									{
										"length": 32,
										"start": 3361
									},
									{
										"length": 32,
										"start": 3536
									},
									{
										"length": 32,
										"start": 3713
									},
									{
										"length": 32,
										"start": 3784
									},
									{
										"length": 32,
										"start": 3959
									},
									{
										"length": 32,
										"start": 4170
									},
									{
										"length": 32,
										"start": 5913
									},
									{
										"length": 32,
										"start": 6088
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c80638ae39cac116100b8578063b59629171161007c578063b59629171461031e578063d06fcba81461033c578063d086c2541461035a578063e449f3411461038a578063f25f4b56146103a6578063f2fde38b146103c457610142565b80638ae39cac146102785780638da5cb5b146102965780638dbb1e3a146102b457806390d49b9d146102e4578063a9f8d1811461030057610142565b806343db3c5f1161010a57806343db3c5f146101ee5780634641257d1461020c578063567e98f9146102165780635e42b45514610234578063715018a614610252578063792b55b61461025c57610142565b80630fbf0a93146101475780631959a0021461016357806319fca9f6146101965780631e2720ff146101b45780632955c60c146101d0575b600080fd5b610161600480360381019061015c91906125ba565b6103e0565b005b61017d60048036038101906101789190612560565b61099a565b60405161018d9493929190612c40565b60405180910390f35b61019e6109ca565b6040516101ab9190612aad565b60405180910390f35b6101ce60048036038101906101c99190612634565b6109ee565b005b6101d8610b23565b6040516101e59190612a8b565b60405180910390f35b6101f6610c8c565b6040516102039190612c25565b60405180910390f35b610214610c92565b005b61021e611119565b60405161022b9190612c25565b60405180910390f35b61023c61111f565b6040516102499190612c25565b60405180910390f35b61025a61118a565b005b61027660048036038101906102719190612634565b611212565b005b610280611313565b60405161028d9190612c25565b60405180910390f35b61029e611319565b6040516102ab91906129a7565b60405180910390f35b6102ce60048036038101906102c9919061268e565b611342565b6040516102db9190612c25565b60405180910390f35b6102fe60048036038101906102f99190612560565b61135f565b005b610308611484565b6040516103159190612c25565b60405180910390f35b61032661148a565b6040516103339190612c25565b60405180910390f35b610344611490565b6040516103519190612ac8565b60405180910390f35b610374600480360381019061036f9190612560565b6114b4565b6040516103819190612c25565b60405180910390f35b6103a4600480360381019061039f91906125ba565b611503565b005b6103ae611c9d565b6040516103bb91906129a7565b60405180910390f35b6103de60048036038101906103d99190612560565b611cc3565b005b60008282905011610426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041d90612b05565b60405180910390fd5b60005b8282905081101561068b573373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e85858581811061049a57610499612f7e565b5b905060200201356040518263ffffffff1660e01b81526004016104bd9190612c25565b60206040518083038186803b1580156104d557600080fd5b505afa1580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d919061258d565b73ffffffffffffffffffffffffffffffffffffffff1614610563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055a90612b85565b60405180910390fd5b6000600a600085858581811061057c5761057b612f7e565b5b90506020020135815260200190815260200160002054146105d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c990612c05565b60405180910390fd5b60006001826105e19190612cf0565b90505b838390508110156106775783838281811061060257610601612f7e565b5b9050602002013584848481811061061c5761061b612f7e565b5b905060200201351415610664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065b90612b65565b60405180910390fd5b808061066f90612ed7565b9150506105e4565b50808061068390612ed7565b915050610429565b50610694611dbb565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154111561074f57600061072c826001015461071e64e8d4a510006107106002548760000154611eef90919063ffffffff16565b611f0590919063ffffffff16565b611f1b90919063ffffffff16565b9050610745818360020154611f3190919063ffffffff16565b8260020181905550505b600083839050905061076c81600654611f3190919063ffffffff16565b60068190555060005b848490508110156108f85784848281811061079357610792612f7e565b5b90506020020135600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008386600001546107eb9190612cf0565b81526020019081526020016000208190555080836000015461080d9190612cf0565b600a600087878581811061082457610823612f7e565b5b905060200201358152602001908152602001600020819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd333088888681811061088e5761088d612f7e565b5b905060200201356040518463ffffffff1660e01b81526004016108b3939291906129c2565b600060405180830381600087803b1580156108cd57600080fd5b505af11580156108e1573d6000803e3d6000fd5b5050505080806108f090612ed7565b915050610775565b50610910818360000154611f3190919063ffffffff16565b826000018190555061094864e8d4a5100061093a6002548560000154611eef90919063ffffffff16565b611f0590919063ffffffff16565b82600101819055504282600301819055507f134b166c6094cc1ccbf1e3353ce5c3cd9fd29869051bdb999895854d77cc5ef633858560405161098c939291906129f9565b60405180910390a150505050565b600b6020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109f6611f47565b73ffffffffffffffffffffffffffffffffffffffff16610a14611319565b73ffffffffffffffffffffffffffffffffffffffff1614610a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6190612ba5565b60405180910390fd5b610ab73330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f4f909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f4f7fd5c9e17300a4800fd572ea53fc291e2ee7470d73346d16b357faee4e721082604051610afd9190612c25565b60405180910390a2610b1a81600754611f3190919063ffffffff16565b60078190555050565b60606000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015467ffffffffffffffff811115610b8357610b82612fad565b5b604051908082528060200260200182016040528015610bb15781602001602082028036833780820191505090505b50905060005b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154811015610c8457600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002054828281518110610c6557610c64612f7e565b5b6020026020010181815250508080610c7c90612ed7565b915050610bb7565b508091505090565b60025481565b6000610c9d33611fd8565b90506000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000610d0c6064610cfe60055486611eef90919063ffffffff16565b611f0590919063ffffffff16565b905060008184610d1c9190612dd1565b9050807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d7891906129a7565b60206040518083038186803b158015610d9057600080fd5b505afa158015610da4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc89190612661565b1015610e7a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e2791906129a7565b60206040518083038186803b158015610e3f57600080fd5b505afa158015610e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e779190612661565b90505b610ec533827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661210b9092919063ffffffff16565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f1f91906129a7565b60206040518083038186803b158015610f3757600080fd5b505afa158015610f4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6f9190612661565b1015611021577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fce91906129a7565b60206040518083038186803b158015610fe657600080fd5b505afa158015610ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101e9190612661565b91505b61108e600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661210b9092919063ffffffff16565b611096611dbb565b600083600201819055506110d064e8d4a510006110c26002548660000154611eef90919063ffffffff16565b611f0590919063ffffffff16565b83600101819055507f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae066092495433828460405161110b93929190612a54565b60405180910390a150505050565b60065481565b6000600154431180156111355750600060065414155b1561118157600061114860015443611342565b9050600061116160035483611eef90919063ffffffff16565b905061117881600754611f1b90919063ffffffff16565b92505050611187565b60075490505b90565b611192611f47565b73ffffffffffffffffffffffffffffffffffffffff166111b0611319565b73ffffffffffffffffffffffffffffffffffffffff1614611206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fd90612ba5565b60405180910390fd5b6112106000612191565b565b61121a611f47565b73ffffffffffffffffffffffffffffffffffffffff16611238611319565b73ffffffffffffffffffffffffffffffffffffffff161461128e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128590612ba5565b60405180910390fd5b60288111156112d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c990612bc5565b60405180910390fd5b806005819055507ff419800a2d8930c61d5d9cd782aa72c512cf6be2f79da6db0b8855870b7269ed816040516113089190612c25565b60405180910390a150565b60035481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006113578383611f1b90919063ffffffff16565b905092915050565b611367611f47565b73ffffffffffffffffffffffffffffffffffffffff16611385611319565b73ffffffffffffffffffffffffffffffffffffffff16146113db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d290612ba5565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3d21e5a2b633291bd1ff5f9c654e402d063783c95759d2ea521b31fb30e4da4160405160405180910390a250565b60015481565b60055481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806114c083611fd8565b905060006114ec60646114de60055485611eef90919063ffffffff16565b611f0590919063ffffffff16565b905080826114fa9190612dd1565b92505050919050565b60008282905011611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154090612b05565b60405180910390fd5b60005b82829050811015611680576000600a60008585858181106115705761156f612f7e565b5b9050602002013581526020019081526020016000205414156115c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115be90612c05565b60405180910390fd5b60006001826115d69190612cf0565b90505b8383905081101561166c578383828181106115f7576115f6612f7e565b5b9050602002013584848481811061161157611610612f7e565b5b905060200201351415611659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165090612b65565b60405180910390fd5b808061166490612ed7565b9150506115d9565b50808061167890612ed7565b91505061154c565b50611689611dbb565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000611714826001015461170664e8d4a510006116f86002548760000154611eef90919063ffffffff16565b611f0590919063ffffffff16565b611f1b90919063ffffffff16565b9050807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161177091906129a7565b60206040518083038186803b15801561178857600080fd5b505afa15801561179c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c09190612661565b1015611872577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161181f91906129a7565b60206040518083038186803b15801561183757600080fd5b505afa15801561184b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186f9190612661565b90505b611889818360020154611f3190919063ffffffff16565b8260020181905550600084849050905060005b81811015611be85760018185600001546118b69190612dd1565b6118c09190612dd1565b600a60008888858181106118d7576118d6612f7e565b5b9050602002013581526020019081526020016000205414611a8e57600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018387600001546119459190612dd1565b61194f9190612dd1565b815260200190815260200160002054600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600a60008a8a878181106119b6576119b5612f7e565b5b90506020020135815260200190815260200160002054815260200190815260200160002081905550600a60008787848181106119f5576119f4612f7e565b5b90506020020135815260200190815260200160002054600a6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001868a60000154611a629190612dd1565b611a6c9190612dd1565b8152602001908152602001600020548152602001908152602001600020819055505b600a6000878784818110611aa557611aa4612f7e565b5b90506020020135815260200190815260200160002060009055600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001838760000154611b119190612dd1565b611b1b9190612dd1565b8152602001908152602001600020600090557f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3033898986818110611b7e57611b7d612f7e565b5b905060200201356040518463ffffffff1660e01b8152600401611ba3939291906129c2565b600060405180830381600087803b158015611bbd57600080fd5b505af1158015611bd1573d6000803e3d6000fd5b505050508080611be090612ed7565b91505061189c565b50611bfe81600654611f1b90919063ffffffff16565b600681905550611c1b818460000154611f1b90919063ffffffff16565b8360000181905550611c5364e8d4a51000611c456002548660000154611eef90919063ffffffff16565b611f0590919063ffffffff16565b83600101819055507f80cc10bf7e52583ae0a17d8dd6ab5005573b17a08091a091af1a81205a675c91338686604051611c8e939291906129f9565b60405180910390a15050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611ccb611f47565b73ffffffffffffffffffffffffffffffffffffffff16611ce9611319565b73ffffffffffffffffffffffffffffffffffffffff1614611d3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3690612ba5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611daf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611da690612b45565b60405180910390fd5b611db881612191565b50565b6001544311611dc957611eed565b60006006541415611de05743600181905550611eed565b6000611dee60015443611342565b90506000611e0760035483611eef90919063ffffffff16565b905060006007541415611e2257436001819055505050611eed565b806007541015611e8157611e6e611e5d600654611e4f64e8d4a51000600754611eef90919063ffffffff16565b611f0590919063ffffffff16565b600254611f3190919063ffffffff16565b6002819055506000600781905550611ee3565b611e9681600754611f1b90919063ffffffff16565b600781905550611edc611ecb600654611ebd64e8d4a5100085611eef90919063ffffffff16565b611f0590919063ffffffff16565b600254611f3190919063ffffffff16565b6002819055505b4360018190555050505b565b60008183611efd9190612d77565b905092915050565b60008183611f139190612d46565b905092915050565b60008183611f299190612dd1565b905092915050565b60008183611f3f9190612cf0565b905092915050565b600033905090565b611fd2846323b872dd60e01b858585604051602401611f70939291906129c2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612255565b50505050565b600080600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006002549050600154431180156120375750600060065414155b156120a857600061204a60015443611342565b9050600061206360035483611eef90919063ffffffff16565b90506120a361209460065461208664e8d4a5100085611eef90919063ffffffff16565b611f0590919063ffffffff16565b84611f3190919063ffffffff16565b925050505b61210282600201546120f484600101546120e664e8d4a510006120d8878960000154611eef90919063ffffffff16565b611f0590919063ffffffff16565b611f1b90919063ffffffff16565b611f3190919063ffffffff16565b92505050919050565b61218c8363a9059cbb60e01b848460405160240161212a929190612a2b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612255565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006122b7826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661231c9092919063ffffffff16565b905060008151111561231757808060200190518101906122d79190612607565b612316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161230d90612b25565b60405180910390fd5b5b505050565b606061232b8484600085612334565b90509392505050565b606061233f85612456565b61237e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237590612be5565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516123a79190612990565b60006040518083038185875af1925050503d80600081146123e4576040519150601f19603f3d011682016040523d82523d6000602084013e6123e9565b606091505b509150915081156123fe57809250505061244e565b6000815111156124115780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124459190612ae3565b60405180910390fd5b949350505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561249857506000801b8214155b92505050919050565b6000813590506124b081613214565b92915050565b6000815190506124c581613214565b92915050565b60008083601f8401126124e1576124e0612fe1565b5b8235905067ffffffffffffffff8111156124fe576124fd612fdc565b5b60208301915083602082028301111561251a57612519612fe6565b5b9250929050565b6000815190506125308161322b565b92915050565b60008135905061254581613242565b92915050565b60008151905061255a81613242565b92915050565b60006020828403121561257657612575612ff5565b5b6000612584848285016124a1565b91505092915050565b6000602082840312156125a3576125a2612ff5565b5b60006125b1848285016124b6565b91505092915050565b600080602083850312156125d1576125d0612ff5565b5b600083013567ffffffffffffffff8111156125ef576125ee612feb565b5b6125fb858286016124cb565b92509250509250929050565b60006020828403121561261d5761261c612ff5565b5b600061262b84828501612521565b91505092915050565b60006020828403121561264a57612649612ff5565b5b600061265884828501612536565b91505092915050565b60006020828403121561267757612676612ff5565b5b60006126858482850161254b565b91505092915050565b600080604083850312156126a5576126a4612ff5565b5b60006126b385828601612536565b92505060206126c485828601612536565b9150509250929050565b60006126da8383612972565b60208301905092915050565b6126ef81612e05565b82525050565b60006127018385612cc3565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561273457612733612ff0565b5b602083029250612745838584612e95565b82840190509392505050565b600061275c82612c95565b6127668185612cc3565b935061277183612c85565b8060005b838110156127a257815161278988826126ce565b975061279483612cb6565b925050600181019050612775565b5085935050505092915050565b60006127ba82612ca0565b6127c48185612cd4565b93506127d4818560208601612ea4565b80840191505092915050565b6127e981612e4d565b82525050565b6127f881612e5f565b82525050565b600061280982612cab565b6128138185612cdf565b9350612823818560208601612ea4565b61282c81612ffa565b840191505092915050565b6000612844601883612cdf565b915061284f8261300b565b602082019050919050565b6000612867602a83612cdf565b915061287282613034565b604082019050919050565b600061288a602683612cdf565b915061289582613083565b604082019050919050565b60006128ad603183612cdf565b91506128b8826130d2565b604082019050919050565b60006128d0602083612cdf565b91506128db82613121565b602082019050919050565b60006128f3602083612cdf565b91506128fe8261314a565b602082019050919050565b6000612916601e83612cdf565b915061292182613173565b602082019050919050565b6000612939601d83612cdf565b91506129448261319c565b602082019050919050565b600061295c603983612cdf565b9150612967826131c5565b604082019050919050565b61297b81612e43565b82525050565b61298a81612e43565b82525050565b600061299c82846127af565b915081905092915050565b60006020820190506129bc60008301846126e6565b92915050565b60006060820190506129d760008301866126e6565b6129e460208301856126e6565b6129f16040830184612981565b949350505050565b6000604082019050612a0e60008301866126e6565b8181036020830152612a218184866126f5565b9050949350505050565b6000604082019050612a4060008301856126e6565b612a4d6020830184612981565b9392505050565b6000606082019050612a6960008301866126e6565b612a766020830185612981565b612a836040830184612981565b949350505050565b60006020820190508181036000830152612aa58184612751565b905092915050565b6000602082019050612ac260008301846127e0565b92915050565b6000602082019050612add60008301846127ef565b92915050565b60006020820190508181036000830152612afd81846127fe565b905092915050565b60006020820190508181036000830152612b1e81612837565b9050919050565b60006020820190508181036000830152612b3e8161285a565b9050919050565b60006020820190508181036000830152612b5e8161287d565b9050919050565b60006020820190508181036000830152612b7e816128a0565b9050919050565b60006020820190508181036000830152612b9e816128c3565b9050919050565b60006020820190508181036000830152612bbe816128e6565b9050919050565b60006020820190508181036000830152612bde81612909565b9050919050565b60006020820190508181036000830152612bfe8161292c565b9050919050565b60006020820190508181036000830152612c1e8161294f565b9050919050565b6000602082019050612c3a6000830184612981565b92915050565b6000608082019050612c556000830187612981565b612c626020830186612981565b612c6f6040830185612981565b612c7c6060830184612981565b95945050505050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000612cfb82612e43565b9150612d0683612e43565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612d3b57612d3a612f20565b5b828201905092915050565b6000612d5182612e43565b9150612d5c83612e43565b925082612d6c57612d6b612f4f565b5b828204905092915050565b6000612d8282612e43565b9150612d8d83612e43565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612dc657612dc5612f20565b5b828202905092915050565b6000612ddc82612e43565b9150612de783612e43565b925082821015612dfa57612df9612f20565b5b828203905092915050565b6000612e1082612e23565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612e5882612e71565b9050919050565b6000612e6a82612e71565b9050919050565b6000612e7c82612e83565b9050919050565b6000612e8e82612e23565b9050919050565b82818337600083830152505050565b60005b83811015612ec2578082015181840152602081019050612ea7565b83811115612ed1576000848401525b50505050565b6000612ee282612e43565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612f1557612f14612f20565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e4654205374616b696e673a20456d7074792041727261790000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e4654205374616b696e673a206475706c696361746520746f6b656e2069647360008201527f20696e20696e70757420706172616d732e000000000000000000000000000000602082015250565b7f4e4654205374616b696e673a206e6f74206f776e6572206f6620746f6b656e2e600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f736574486172766573744665653a2066656550657263656e74203e2034300000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f4e667420556e7374616b696e673a20746f6b656e206e6f74207374616b65642060008201527f6f7220696e636f727265637420746f6b656e206f776e65722e00000000000000602082015250565b61321d81612e05565b811461322857600080fd5b50565b61323481612e17565b811461323f57600080fd5b50565b61324b81612e43565b811461325657600080fd5b5056fea26469706673582212209f0f0306562c7050fb4362a04b54d39be153609b603d55ccfc8ff86b01f4291b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AE39CAC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB5962917 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB5962917 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xD06FCBA8 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xD086C254 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xE449F341 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF25F4B56 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C4 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x90D49B9D EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x300 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x43DB3C5F GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x43DB3C5F EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x567E98F9 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x5E42B455 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x792B55B6 EQ PUSH2 0x25C JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0xFBF0A93 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x19FCA9F6 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x1E2720FF EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x2955C60C EQ PUSH2 0x1D0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2A8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0xC92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH2 0x118A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x1212 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x135F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x308 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x1503 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x1CC3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP GT PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP1 PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x68B JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x258D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55A SWAP1 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x57C JUMPI PUSH2 0x57B PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C9 SWAP1 PUSH2 0x2C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x677 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x602 JUMPI PUSH2 0x601 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x61C JUMPI PUSH2 0x61B PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD EQ ISZERO PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65B SWAP1 PUSH2 0x2B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x66F SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5E4 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x683 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x429 JUMP JUMPDEST POP PUSH2 0x694 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 PUSH2 0x72C DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x71E PUSH5 0xE8D4A51000 PUSH2 0x710 PUSH1 0x2 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x745 DUP2 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SWAP1 POP PUSH2 0x76C DUP2 PUSH1 0x6 SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x8F8 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x793 JUMPI PUSH2 0x792 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x80D SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x824 JUMPI PUSH2 0x823 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x88E JUMPI PUSH2 0x88D PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x8F0 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x775 JUMP JUMPDEST POP PUSH2 0x910 DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x948 PUSH5 0xE8D4A51000 PUSH2 0x93A PUSH1 0x2 SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x134B166C6094CC1CCBF1E3353CE5C3CD9FD29869051BDB999895854D77CC5EF6 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x98C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x1F47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA14 PUSH2 0x1319 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB7 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F4F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F7FD5C9E17300A4800FD572EA53FC291E2EE7470D73346D16B357FAEE4E7210 DUP3 PUSH1 0x40 MLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xB1A DUP2 PUSH1 0x7 SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB83 JUMPI PUSH2 0xB82 PUSH2 0x2FAD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBB1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 LT ISZERO PUSH2 0xC84 JUMPI PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC65 JUMPI PUSH2 0xC64 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xC7C SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBB7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9D CALLER PUSH2 0x1FD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xD0C PUSH1 0x64 PUSH2 0xCFE PUSH1 0x5 SLOAD DUP7 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH2 0xD1C SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD78 SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC8 SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST LT ISZERO PUSH2 0xE7A JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE27 SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE77 SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xEC5 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x210B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1F SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF6F SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST LT ISZERO PUSH2 0x1021 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCE SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101E SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x108E PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x210B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1096 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10D0 PUSH5 0xE8D4A51000 PUSH2 0x10C2 PUSH1 0x2 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954 CALLER DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x110B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x1135 JUMPI POP PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1181 JUMPI PUSH1 0x0 PUSH2 0x1148 PUSH1 0x1 SLOAD NUMBER PUSH2 0x1342 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1161 PUSH1 0x3 SLOAD DUP4 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1178 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1192 PUSH2 0x1F47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11B0 PUSH2 0x1319 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1206 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FD SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1210 PUSH1 0x0 PUSH2 0x2191 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x121A PUSH2 0x1F47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1238 PUSH2 0x1319 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1285 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x28 DUP2 GT ISZERO PUSH2 0x12D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C9 SWAP1 PUSH2 0x2BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0xF419800A2D8930C61D5D9CD782AA72C512CF6BE2F79DA6DB0B8855870B7269ED DUP2 PUSH1 0x40 MLOAD PUSH2 0x1308 SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1357 DUP4 DUP4 PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1367 PUSH2 0x1F47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1385 PUSH2 0x1319 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D21E5A2B633291BD1FF5F9C654E402D063783C95759D2EA521B31FB30E4DA41 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14C0 DUP4 PUSH2 0x1FD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14EC PUSH1 0x64 PUSH2 0x14DE PUSH1 0x5 SLOAD DUP6 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x14FA SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP GT PUSH2 0x1549 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1540 SWAP1 PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1680 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1570 JUMPI PUSH2 0x156F PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BE SWAP1 PUSH2 0x2C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x15D6 SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x166C JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x15F7 JUMPI PUSH2 0x15F6 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x1611 JUMPI PUSH2 0x1610 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD EQ ISZERO PUSH2 0x1659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1650 SWAP1 PUSH2 0x2B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x1664 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15D9 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x1678 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x154C JUMP JUMPDEST POP PUSH2 0x1689 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1714 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1706 PUSH5 0xE8D4A51000 PUSH2 0x16F8 PUSH1 0x2 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1770 SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x179C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17C0 SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST LT ISZERO PUSH2 0x1872 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181F SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x184B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x186F SWAP2 SWAP1 PUSH2 0x2661 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1889 DUP2 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BE8 JUMPI PUSH1 0x1 DUP2 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x18B6 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0x18C0 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x18D7 JUMPI PUSH2 0x18D6 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1A8E JUMPI PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1945 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0x194F SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP11 DUP11 DUP8 DUP2 DUP2 LT PUSH2 0x19B6 JUMPI PUSH2 0x19B5 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x19F5 JUMPI PUSH2 0x19F4 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP7 DUP11 PUSH1 0x0 ADD SLOAD PUSH2 0x1A62 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0x1A6C SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x1AA5 JUMPI PUSH2 0x1AA4 PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1B11 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0x1B1B SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP10 DUP10 DUP7 DUP2 DUP2 LT PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x2F7E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x1BE0 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x189C JUMP JUMPDEST POP PUSH2 0x1BFE DUP2 PUSH1 0x6 SLOAD PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x1C1B DUP2 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1C53 PUSH5 0xE8D4A51000 PUSH2 0x1C45 PUSH1 0x2 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x80CC10BF7E52583AE0A17D8DD6AB5005573B17A08091A091AF1A81205A675C91 CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1C8E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1CCB PUSH2 0x1F47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CE9 PUSH2 0x1319 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D36 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA6 SWAP1 PUSH2 0x2B45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB8 DUP2 PUSH2 0x2191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD NUMBER GT PUSH2 0x1DC9 JUMPI PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x1DE0 JUMPI NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEE PUSH1 0x1 SLOAD NUMBER PUSH2 0x1342 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E07 PUSH1 0x3 SLOAD DUP4 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x1E22 JUMPI NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1EED JUMP JUMPDEST DUP1 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0x1E81 JUMPI PUSH2 0x1E6E PUSH2 0x1E5D PUSH1 0x6 SLOAD PUSH2 0x1E4F PUSH5 0xE8D4A51000 PUSH1 0x7 SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0x1E96 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x1EDC PUSH2 0x1ECB PUSH1 0x6 SLOAD PUSH2 0x1EBD PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1EFD SWAP2 SWAP1 PUSH2 0x2D77 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1F13 SWAP2 SWAP1 PUSH2 0x2D46 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1F29 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1F3F SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FD2 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F70 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2255 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x1 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x2037 JUMPI POP PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x20A8 JUMPI PUSH1 0x0 PUSH2 0x204A PUSH1 0x1 SLOAD NUMBER PUSH2 0x1342 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2063 PUSH1 0x3 SLOAD DUP4 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x20A3 PUSH2 0x2094 PUSH1 0x6 SLOAD PUSH2 0x2086 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH2 0x2102 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x20F4 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x20E6 PUSH5 0xE8D4A51000 PUSH2 0x20D8 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x1EEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x218C DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x212A SWAP3 SWAP2 SWAP1 PUSH2 0x2A2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2255 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x231C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2317 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x22D7 SWAP2 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH2 0x2316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230D SWAP1 PUSH2 0x2B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x232B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x233F DUP6 PUSH2 0x2456 JUMP JUMPDEST PUSH2 0x237E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2375 SWAP1 PUSH2 0x2BE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x23A7 SWAP2 SWAP1 PUSH2 0x2990 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23E4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23E9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x23FE JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x244E JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2411 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2445 SWAP2 SWAP1 PUSH2 0x2AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x2498 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24B0 DUP2 PUSH2 0x3214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24C5 DUP2 PUSH2 0x3214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x24E1 JUMPI PUSH2 0x24E0 PUSH2 0x2FE1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24FE JUMPI PUSH2 0x24FD PUSH2 0x2FDC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x251A JUMPI PUSH2 0x2519 PUSH2 0x2FE6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2530 DUP2 PUSH2 0x322B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2545 DUP2 PUSH2 0x3242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x255A DUP2 PUSH2 0x3242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2576 JUMPI PUSH2 0x2575 PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2584 DUP5 DUP3 DUP6 ADD PUSH2 0x24A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25A3 JUMPI PUSH2 0x25A2 PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25B1 DUP5 DUP3 DUP6 ADD PUSH2 0x24B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25D1 JUMPI PUSH2 0x25D0 PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25EF JUMPI PUSH2 0x25EE PUSH2 0x2FEB JUMP JUMPDEST JUMPDEST PUSH2 0x25FB DUP6 DUP3 DUP7 ADD PUSH2 0x24CB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x261D JUMPI PUSH2 0x261C PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x262B DUP5 DUP3 DUP6 ADD PUSH2 0x2521 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x264A JUMPI PUSH2 0x2649 PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2658 DUP5 DUP3 DUP6 ADD PUSH2 0x2536 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2677 JUMPI PUSH2 0x2676 PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2685 DUP5 DUP3 DUP6 ADD PUSH2 0x254B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26A5 JUMPI PUSH2 0x26A4 PUSH2 0x2FF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26B3 DUP6 DUP3 DUP7 ADD PUSH2 0x2536 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26C4 DUP6 DUP3 DUP7 ADD PUSH2 0x2536 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DA DUP4 DUP4 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26EF DUP2 PUSH2 0x2E05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2701 DUP4 DUP6 PUSH2 0x2CC3 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2734 JUMPI PUSH2 0x2733 PUSH2 0x2FF0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x2745 DUP4 DUP6 DUP5 PUSH2 0x2E95 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275C DUP3 PUSH2 0x2C95 JUMP JUMPDEST PUSH2 0x2766 DUP2 DUP6 PUSH2 0x2CC3 JUMP JUMPDEST SWAP4 POP PUSH2 0x2771 DUP4 PUSH2 0x2C85 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27A2 JUMPI DUP2 MLOAD PUSH2 0x2789 DUP9 DUP3 PUSH2 0x26CE JUMP JUMPDEST SWAP8 POP PUSH2 0x2794 DUP4 PUSH2 0x2CB6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2775 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BA DUP3 PUSH2 0x2CA0 JUMP JUMPDEST PUSH2 0x27C4 DUP2 DUP6 PUSH2 0x2CD4 JUMP JUMPDEST SWAP4 POP PUSH2 0x27D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2EA4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E9 DUP2 PUSH2 0x2E4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x27F8 DUP2 PUSH2 0x2E5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2809 DUP3 PUSH2 0x2CAB JUMP JUMPDEST PUSH2 0x2813 DUP2 DUP6 PUSH2 0x2CDF JUMP JUMPDEST SWAP4 POP PUSH2 0x2823 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2EA4 JUMP JUMPDEST PUSH2 0x282C DUP2 PUSH2 0x2FFA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2844 PUSH1 0x18 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x284F DUP3 PUSH2 0x300B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2867 PUSH1 0x2A DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2872 DUP3 PUSH2 0x3034 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288A PUSH1 0x26 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2895 DUP3 PUSH2 0x3083 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28AD PUSH1 0x31 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x28B8 DUP3 PUSH2 0x30D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D0 PUSH1 0x20 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x28DB DUP3 PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F3 PUSH1 0x20 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x28FE DUP3 PUSH2 0x314A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2916 PUSH1 0x1E DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2921 DUP3 PUSH2 0x3173 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2939 PUSH1 0x1D DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2944 DUP3 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295C PUSH1 0x39 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2967 DUP3 PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x297B DUP2 PUSH2 0x2E43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x298A DUP2 PUSH2 0x2E43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299C DUP3 DUP5 PUSH2 0x27AF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29D7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26E6 JUMP JUMPDEST PUSH2 0x29E4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x26E6 JUMP JUMPDEST PUSH2 0x29F1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2981 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A0E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26E6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2A21 DUP2 DUP5 DUP7 PUSH2 0x26F5 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A40 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26E6 JUMP JUMPDEST PUSH2 0x2A4D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2981 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A69 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26E6 JUMP JUMPDEST PUSH2 0x2A76 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2981 JUMP JUMPDEST PUSH2 0x2A83 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2981 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AA5 DUP2 DUP5 PUSH2 0x2751 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2ADD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AFD DUP2 DUP5 PUSH2 0x27FE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B1E DUP2 PUSH2 0x2837 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B3E DUP2 PUSH2 0x285A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B5E DUP2 PUSH2 0x287D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B7E DUP2 PUSH2 0x28A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B9E DUP2 PUSH2 0x28C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BBE DUP2 PUSH2 0x28E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BDE DUP2 PUSH2 0x2909 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BFE DUP2 PUSH2 0x292C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C1E DUP2 PUSH2 0x294F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2981 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2C55 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2981 JUMP JUMPDEST PUSH2 0x2C62 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2981 JUMP JUMPDEST PUSH2 0x2C6F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2981 JUMP JUMPDEST PUSH2 0x2C7C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2981 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CFB DUP3 PUSH2 0x2E43 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D06 DUP4 PUSH2 0x2E43 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2D3B JUMPI PUSH2 0x2D3A PUSH2 0x2F20 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D51 DUP3 PUSH2 0x2E43 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D5C DUP4 PUSH2 0x2E43 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2D6C JUMPI PUSH2 0x2D6B PUSH2 0x2F4F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D82 DUP3 PUSH2 0x2E43 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D8D DUP4 PUSH2 0x2E43 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2DC6 JUMPI PUSH2 0x2DC5 PUSH2 0x2F20 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDC DUP3 PUSH2 0x2E43 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DE7 DUP4 PUSH2 0x2E43 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2DFA JUMPI PUSH2 0x2DF9 PUSH2 0x2F20 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E10 DUP3 PUSH2 0x2E23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E58 DUP3 PUSH2 0x2E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6A DUP3 PUSH2 0x2E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E7C DUP3 PUSH2 0x2E83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E8E DUP3 PUSH2 0x2E23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EC2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2EA7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2ED1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE2 DUP3 PUSH2 0x2E43 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2F15 JUMPI PUSH2 0x2F14 PUSH2 0x2F20 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A20456D7074792041727261790000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A206475706C696361746520746F6B656E20696473 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20696E20696E70757420706172616D732E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A206E6F74206F776E6572206F6620746F6B656E2E PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x736574486172766573744665653A2066656550657263656E74203E2034300000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E667420556E7374616B696E673A20746F6B656E206E6F74207374616B656420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F7220696E636F727265637420746F6B656E206F776E65722E00000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x321D DUP2 PUSH2 0x2E05 JUMP JUMPDEST DUP2 EQ PUSH2 0x3228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3234 DUP2 PUSH2 0x2E17 JUMP JUMPDEST DUP2 EQ PUSH2 0x323F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x324B DUP2 PUSH2 0x2E43 JUMP JUMPDEST DUP2 EQ PUSH2 0x3256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xF SUB MOD JUMP 0x2C PUSH17 0x50FB4362A04B54D39BE153609B603D55CC 0xFC DUP16 0xF8 PUSH12 0x1F4291B64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "27968:8890:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31635:1505;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28805:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;28285:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30498:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;36544:311;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28362:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;35701:837;;;:::i;:::-;;28498:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30085:405;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5562:103;;;:::i;:::-;;29729:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28399:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4911:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29956:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29580:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28325:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28466:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28245:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34904:224;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33148:1748;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28435:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5820:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31635:1505;31725:1;31707:8;;:15;;:19;31699:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;31770:9;31766:466;31789:8;;:15;;31785:1;:19;31766:466;;;31867:10;31834:43;;:8;:16;;;31851:8;;31860:1;31851:11;;;;;;;:::i;:::-;;;;;;;;31834:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;31826:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;31971:1;31937:17;:30;31955:8;;31964:1;31955:11;;;;;;;:::i;:::-;;;;;;;;31937:30;;;;;;;;;;;;:35;31929:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;32053:9;32069:1;32065;:5;;;;:::i;:::-;32053:17;;32049:172;32076:8;;:15;;32072:1;:19;32049:172;;;32140:8;;32149:1;32140:11;;;;;;;:::i;:::-;;;;;;;;32125:8;;32134:1;32125:11;;;;;;;:::i;:::-;;;;;;;;:26;;32117:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;32093:4;;;;;:::i;:::-;;;;32049:172;;;;31806:4;;;;;:::i;:::-;;;;31766:466;;;;32242:14;:12;:14::i;:::-;32267:21;32291:8;:20;32300:10;32291:20;;;;;;;;;;;;;;;32267:44;;32340:1;32326:4;:11;;;:15;32322:196;;;32358:15;32376:63;32423:4;:15;;;32376:42;32413:4;32376:32;32392:15;;32376:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;:46;;:63;;;;:::i;:::-;32358:81;;32475:31;32498:7;32475:4;:18;;;:22;;:31;;;;:::i;:::-;32454:4;:18;;:52;;;;32343:175;32322:196;32528:19;32550:8;;:15;;32528:37;;32596:34;32618:11;32596:17;;:21;;:34;;;;:::i;:::-;32576:17;:54;;;;32655:9;32651:266;32674:8;;:15;;32670:1;:19;32651:266;;;32755:8;;32764:1;32755:11;;;;;;;:::i;:::-;;;;;;;;32711:12;:24;32724:10;32711:24;;;;;;;;;;;;;;;:41;32750:1;32736:4;:11;;;:15;;;;:::i;:::-;32711:41;;;;;;;;;;;:55;;;;32828:1;32814:4;:11;;;:15;;;;:::i;:::-;32781:17;:30;32799:8;;32808:1;32799:11;;;;;;;:::i;:::-;;;;;;;;32781:30;;;;;;;;;;;:48;;;;32844:8;:21;;;32866:10;32886:4;32893:8;;32902:1;32893:11;;;;;;;:::i;:::-;;;;;;;;32844:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32691:4;;;;;:::i;:::-;;;;32651:266;;;;32941:28;32957:11;32941:4;:11;;;:15;;:28;;;;:::i;:::-;32927:4;:11;;:42;;;;32998;33035:4;32998:32;33014:15;;32998:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;32980:4;:15;;:60;;;;33073:15;33051:4;:19;;:37;;;;33104:28;33111:10;33123:8;;33104:28;;;;;;;;:::i;:::-;;;;;;;;31688:1452;;31635:1505;;:::o;28805:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;28285:33::-;;;:::o;30498:245::-;5142:12;:10;:12::i;:::-;5131:23;;:7;:5;:7::i;:::-;:23;;;5123:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;30568:62:::1;30595:10;30615:4;30622:7;30568:9;:26;;;;:62;;;;;;:::i;:::-;30660:10;30646:34;;;30672:7;30646:34;;;;;;:::i;:::-;;;;;;;;30708:27;30727:7;30708:14;;:18;;:27;;;;:::i;:::-;30691:14;:44;;;;30498:245:::0;:::o;36544:311::-;36594:16;36622:23;36662:8;:20;36671:10;36662:20;;;;;;;;;;;;;;;:27;;;36648:42;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36622:68;;36705:9;36701:123;36724:8;:20;36733:10;36724:20;;;;;;;;;;;;;;;:27;;;36720:1;:31;36701:123;;;36785:12;:24;36798:10;36785:24;;;;;;;;;;;;;;;:27;36810:1;36785:27;;;;;;;;;;;;36773:6;36780:1;36773:9;;;;;;;;:::i;:::-;;;;;;;:39;;;;;36753:4;;;;;:::i;:::-;;;;36701:123;;;;36841:6;36834:13;;;36544:311;:::o;28362:30::-;;;;:::o;35701:837::-;35740:20;35763:23;35775:10;35763:11;:23::i;:::-;35740:46;;35797:21;35821:8;:20;35830:10;35821:20;;;;;;;;;;;;;;;35797:44;;35852:19;35874:37;35907:3;35874:28;35891:10;;35874:12;:16;;:28;;;;:::i;:::-;:32;;:37;;;;:::i;:::-;35852:59;;35922:14;35954:11;35939:12;:26;;;;:::i;:::-;35922:43;;36017:6;35980:9;:19;;;36008:4;35980:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;35976:119;;;36049:9;:19;;;36077:4;36049:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;36040:43;;35976:119;36105:42;36128:10;36140:6;36105:9;:22;;;;:42;;;;;:::i;:::-;36201:11;36164:9;:19;;;36192:4;36164:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;36160:129;;;36243:9;:19;;;36271:4;36243:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;36229:48;;36160:129;36299:46;36322:9;;;;;;;;;;;36333:11;36299:9;:22;;;;:46;;;;;:::i;:::-;36356:14;:12;:14::i;:::-;36402:1;36381:4;:18;;:22;;;;36432:42;36469:4;36432:32;36448:15;;36432:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;36414:4;:15;;:60;;;;36490:40;36498:10;36510:6;36518:11;36490:40;;;;;;;;:::i;:::-;;;;;;;;35729:809;;;;35701:837::o;28498:32::-;;;;:::o;30085:405::-;30136:7;30175:15;;30160:12;:30;:56;;;;;30215:1;30194:17;;:22;;30160:56;30156:327;;;30233:18;30254:44;30268:15;;30285:12;30254:13;:44::i;:::-;30233:65;;30313:14;30330:30;30345:14;;30330:10;:14;;:30;;;;:::i;:::-;30313:47;;30382:26;30401:6;30382:14;;:18;;:26;;;;:::i;:::-;30375:33;;;;;;30156:327;30457:14;;30450:21;;30085:405;;:::o;5562:103::-;5142:12;:10;:12::i;:::-;5131:23;;:7;:5;:7::i;:::-;:23;;;5123:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5627:30:::1;5654:1;5627:18;:30::i;:::-;5562:103::o:0;29729:219::-;5142:12;:10;:12::i;:::-;5131:23;;:7;:5;:7::i;:::-;:23;;;5123:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;29826:2:::1;29811:11;:17;;29803:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;29887:11;29874:10;:24;;;;29914:26;29928:11;29914:26;;;;;;:::i;:::-;;;;;;;;29729:219:::0;:::o;28399:29::-;;;;:::o;4911:87::-;4957:7;4984:6;;;;;;;;;;;4977:13;;4911:87;:::o;29956:121::-;30028:7;30055:14;30063:5;30055:3;:7;;:14;;;;:::i;:::-;30048:21;;29956:121;;;;:::o;29580:141::-;5142:12;:10;:12::i;:::-;5131:23;;:7;:5;:7::i;:::-;:23;;;5123:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;29664:10:::1;29652:9;;:22;;;;;;;;;;;;;;;;;;29703:9;;;;;;;;;;;29690:23;;;;;;;;;;;;29580:141:::0;:::o;28325:30::-;;;;:::o;28466:25::-;;;;:::o;28245:33::-;;;:::o;34904:224::-;34960:7;34980:15;34998:18;35010:5;34998:11;:18::i;:::-;34980:36;;35027:19;35049:32;35077:3;35049:23;35061:10;;35049:7;:11;;:23;;;;:::i;:::-;:27;;:32;;;;:::i;:::-;35027:54;;35109:11;35099:7;:21;;;;:::i;:::-;35092:28;;;;34904:224;;;:::o;33148:1748::-;33240:1;33222:8;;:15;;:19;33214:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;33285:9;33281:363;33304:8;;:15;;33300:1;:19;33281:363;;;33383:1;33349:17;:30;33367:8;;33376:1;33367:11;;;;;;;:::i;:::-;;;;;;;;33349:30;;;;;;;;;;;;:35;;33341:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;33465:9;33481:1;33477;:5;;;;:::i;:::-;33465:17;;33461:172;33488:8;;:15;;33484:1;:19;33461:172;;;33552:8;;33561:1;33552:11;;;;;;;:::i;:::-;;;;;;;;33537:8;;33546:1;33537:11;;;;;;;:::i;:::-;;;;;;;;:26;;33529:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;33505:4;;;;;:::i;:::-;;;;33461:172;;;;33321:4;;;;;:::i;:::-;;;;33281:363;;;;33656:14;:12;:14::i;:::-;33681:21;33705:8;:20;33714:10;33705:20;;;;;;;;;;;;;;;33681:44;;33736:15;33754:63;33801:4;:15;;;33754:42;33791:4;33754:32;33770:15;;33754:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;:46;;:63;;;;:::i;:::-;33736:81;;33869:7;33832:9;:19;;;33860:4;33832:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;33828:121;;;33903:9;:19;;;33931:4;33903:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33893:44;;33828:121;33980:31;34003:7;33980:4;:18;;;:22;;:31;;;;:::i;:::-;33959:4;:18;;:52;;;;34022:19;34044:8;;:15;;34022:37;;34074:9;34070:584;34093:11;34089:1;:15;34070:584;;;34182:1;34178;34164:4;:11;;;:15;;;;:::i;:::-;:19;;;;:::i;:::-;34129:17;:30;34147:8;;34156:1;34147:11;;;;;;;:::i;:::-;;;;;;;;34129:30;;;;;;;;;;;;:55;34126:320;;34263:12;:24;34276:10;34263:24;;;;;;;;;;;;;;;:47;34307:1;34303;34289:4;:11;;;:15;;;;:::i;:::-;:19;;;;:::i;:::-;34263:47;;;;;;;;;;;;34204:12;:24;34217:10;34204:24;;;;;;;;;;;;;;;:56;34229:17;:30;34247:8;;34256:1;34247:11;;;;;;;:::i;:::-;;;;;;;;34229:30;;;;;;;;;;;;34204:56;;;;;;;;;;;:106;;;;34399:17;:30;34417:8;;34426:1;34417:11;;;;;;;:::i;:::-;;;;;;;;34399:30;;;;;;;;;;;;34330:17;:66;34348:12;:24;34361:10;34348:24;;;;;;;;;;;;;;;:47;34392:1;34388;34374:4;:11;;;:15;;;;:::i;:::-;:19;;;;:::i;:::-;34348:47;;;;;;;;;;;;34330:66;;;;;;;;;;;:99;;;;34126:320;34467:17;:30;34485:8;;34494:1;34485:11;;;;;;;:::i;:::-;;;;;;;;34467:30;;;;;;;;;;;34460:37;;;34519:12;:24;34532:10;34519:24;;;;;;;;;;;;;;;:47;34563:1;34559;34545:4;:11;;;:15;;;;:::i;:::-;:19;;;;:::i;:::-;34519:47;;;;;;;;;;;34512:54;;;34581:8;:21;;;34611:4;34618:10;34630:8;;34639:1;34630:11;;;;;;;:::i;:::-;;;;;;;;34581:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34106:4;;;;;:::i;:::-;;;;34070:584;;;;34684:34;34706:11;34684:17;;:21;;:34;;;;:::i;:::-;34664:17;:54;;;;34743:28;34759:11;34743:4;:11;;;:15;;:28;;;;:::i;:::-;34729:4;:11;;:42;;;;34800;34837:4;34800:32;34816:15;;34800:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;34782:4;:15;;:60;;;;34858:30;34867:10;34879:8;;34858:30;;;;;;;;:::i;:::-;;;;;;;;33203:1693;;;33148:1748;;:::o;28435:24::-;;;;;;;;;;;;;:::o;5820:201::-;5142:12;:10;:12::i;:::-;5131:23;;:7;:5;:7::i;:::-;:23;;;5123:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5929:1:::1;5909:22;;:8;:22;;;;5901:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;5985:28;6004:8;5985:18;:28::i;:::-;5820:201:::0;:::o;30751:878::-;30814:15;;30798:12;:31;30794:70;;30846:7;;30794:70;30899:1;30878:17;;:22;30874:106;;;30935:12;30917:15;:30;;;;30962:7;;30874:106;30990:18;31011:44;31025:15;;31042:12;31011:13;:44::i;:::-;30990:65;;31066:14;31083:30;31098:14;;31083:10;:14;;:30;;;;:::i;:::-;31066:47;;31146:1;31128:14;;:19;31124:103;;;31182:12;31164:15;:30;;;;31209:7;;;;31124:103;31258:6;31241:14;;:23;31237:344;;;31299:68;31319:47;31348:17;;31319:24;31338:4;31319:14;;:18;;:24;;;;:::i;:::-;:28;;:47;;;;:::i;:::-;31299:15;;:19;;:68;;;;:::i;:::-;31281:15;:86;;;;31399:1;31382:14;:18;;;;31237:344;;;31450:26;31469:6;31450:14;;:18;;:26;;;;:::i;:::-;31433:14;:43;;;;31509:60;31529:39;31550:17;;31529:16;31540:4;31529:6;:10;;:16;;;;:::i;:::-;:20;;:39;;;;:::i;:::-;31509:15;;:19;;:60;;;;:::i;:::-;31491:15;:78;;;;31237:344;31609:12;31591:15;:30;;;;30783:846;;30751:878;:::o;9698:98::-;9756:7;9787:1;9783;:5;;;;:::i;:::-;9776:12;;9698:98;;;;:::o;10097:::-;10155:7;10186:1;10182;:5;;;;:::i;:::-;10175:12;;10097:98;;;;:::o;9341:::-;9399:7;9430:1;9426;:5;;;;:::i;:::-;9419:12;;9341:98;;;;:::o;8960:::-;9018:7;9049:1;9045;:5;;;;:::i;:::-;9038:12;;8960:98;;;;:::o;3751:::-;3804:7;3831:10;3824:17;;3751:98;:::o;13429:205::-;13530:96;13550:5;13580:27;;;13609:4;13615:2;13619:5;13557:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13530:19;:96::i;:::-;13429:205;;;;:::o;35140:553::-;35198:7;35218:21;35242:8;:15;35251:5;35242:15;;;;;;;;;;;;;;;35218:39;;35268:11;35282:15;;35268:29;;35327:15;;35312:12;:30;:56;;;;;35367:1;35346:17;;:22;;35312:56;35308:285;;;35385:18;35406:44;35420:15;;35437:12;35406:13;:44::i;:::-;35385:65;;35465:14;35482:30;35497:14;;35482:10;:14;;:30;;;;:::i;:::-;35465:47;;35533:48;35541:39;35562:17;;35541:16;35552:4;35541:6;:10;;:16;;;;:::i;:::-;:20;;:39;;;;:::i;:::-;35533:3;:7;;:48;;;;:::i;:::-;35527:54;;35370:223;;35308:285;35610:75;35666:4;:18;;;35610:51;35645:4;:15;;;35610:30;35635:4;35610:20;35626:3;35610:4;:11;;;:15;;:20;;;;:::i;:::-;:24;;:30;;;;:::i;:::-;:34;;:51;;;;:::i;:::-;:55;;:75;;;;:::i;:::-;35603:82;;;;35140:553;;;:::o;13244:177::-;13327:86;13347:5;13377:23;;;13402:2;13406:5;13354:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13327:19;:86::i;:::-;13244:177;;;:::o;6181:191::-;6255:16;6274:6;;;;;;;;;;;6255:25;;6300:8;6291:6;;:17;;;;;;;;;;;;;;;;;;6355:8;6324:40;;6345:8;6324:40;;;;;;;;;;;;6244:128;6181:191;:::o;15549:761::-;15973:23;15999:69;16027:4;15999:69;;;;;;;;;;;;;;;;;16007:5;15999:27;;;;:69;;;;;:::i;:::-;15973:95;;16103:1;16083:10;:17;:21;16079:224;;;16225:10;16214:30;;;;;;;;;;;;:::i;:::-;16206:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;16079:224;15619:691;15549:761;;:::o;20069:196::-;20172:12;20204:53;20227:6;20235:4;20241:1;20244:12;20204:22;:53::i;:::-;20197:60;;20069:196;;;;;:::o;21446:979::-;21576:12;21609:18;21620:6;21609:10;:18::i;:::-;21601:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;21735:12;21749:23;21776:6;:11;;21796:8;21807:4;21776:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21734:78;;;;21827:7;21823:595;;;21858:10;21851:17;;;;;;21823:595;21992:1;21972:10;:17;:21;21968:439;;;22235:10;22229:17;22296:15;22283:10;22279:2;22275:19;22268:44;21968:439;22378:12;22371:20;;;;;;;;;;;:::i;:::-;;;;;;;;21446:979;;;;;;;:::o;16954:619::-;17014:4;17276:16;17303:19;17325:66;17303:88;;;;17494:7;17482:20;17470:32;;17534:11;17522:8;:23;;:42;;;;;17561:3;17549:15;;:8;:15;;17522:42;17514:51;;;;16954:619;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;152:143;;;;:::o;318:568::-;391:8;401:6;451:3;444:4;436:6;432:17;428:27;418:122;;459:79;;:::i;:::-;418:122;572:6;559:20;549:30;;602:18;594:6;591:30;588:117;;;624:79;;:::i;:::-;588:117;738:4;730:6;726:17;714:29;;792:3;784:4;776:6;772:17;762:8;758:32;755:41;752:128;;;799:79;;:::i;:::-;752:128;318:568;;;;;:::o;892:137::-;946:5;977:6;971:13;962:22;;993:30;1017:5;993:30;:::i;:::-;892:137;;;;:::o;1035:139::-;1081:5;1119:6;1106:20;1097:29;;1135:33;1162:5;1135:33;:::i;:::-;1035:139;;;;:::o;1180:143::-;1237:5;1268:6;1262:13;1253:22;;1284:33;1311:5;1284:33;:::i;:::-;1180:143;;;;:::o;1329:329::-;1388:6;1437:2;1425:9;1416:7;1412:23;1408:32;1405:119;;;1443:79;;:::i;:::-;1405:119;1563:1;1588:53;1633:7;1624:6;1613:9;1609:22;1588:53;:::i;:::-;1578:63;;1534:117;1329:329;;;;:::o;1664:351::-;1734:6;1783:2;1771:9;1762:7;1758:23;1754:32;1751:119;;;1789:79;;:::i;:::-;1751:119;1909:1;1934:64;1990:7;1981:6;1970:9;1966:22;1934:64;:::i;:::-;1924:74;;1880:128;1664:351;;;;:::o;2021:559::-;2107:6;2115;2164:2;2152:9;2143:7;2139:23;2135:32;2132:119;;;2170:79;;:::i;:::-;2132:119;2318:1;2307:9;2303:17;2290:31;2348:18;2340:6;2337:30;2334:117;;;2370:79;;:::i;:::-;2334:117;2483:80;2555:7;2546:6;2535:9;2531:22;2483:80;:::i;:::-;2465:98;;;;2261:312;2021:559;;;;;:::o;2586:345::-;2653:6;2702:2;2690:9;2681:7;2677:23;2673:32;2670:119;;;2708:79;;:::i;:::-;2670:119;2828:1;2853:61;2906:7;2897:6;2886:9;2882:22;2853:61;:::i;:::-;2843:71;;2799:125;2586:345;;;;:::o;2937:329::-;2996:6;3045:2;3033:9;3024:7;3020:23;3016:32;3013:119;;;3051:79;;:::i;:::-;3013:119;3171:1;3196:53;3241:7;3232:6;3221:9;3217:22;3196:53;:::i;:::-;3186:63;;3142:117;2937:329;;;;:::o;3272:351::-;3342:6;3391:2;3379:9;3370:7;3366:23;3362:32;3359:119;;;3397:79;;:::i;:::-;3359:119;3517:1;3542:64;3598:7;3589:6;3578:9;3574:22;3542:64;:::i;:::-;3532:74;;3488:128;3272:351;;;;:::o;3629:474::-;3697:6;3705;3754:2;3742:9;3733:7;3729:23;3725:32;3722:119;;;3760:79;;:::i;:::-;3722:119;3880:1;3905:53;3950:7;3941:6;3930:9;3926:22;3905:53;:::i;:::-;3895:63;;3851:117;4007:2;4033:53;4078:7;4069:6;4058:9;4054:22;4033:53;:::i;:::-;4023:63;;3978:118;3629:474;;;;;:::o;4109:179::-;4178:10;4199:46;4241:3;4233:6;4199:46;:::i;:::-;4277:4;4272:3;4268:14;4254:28;;4109:179;;;;:::o;4294:118::-;4381:24;4399:5;4381:24;:::i;:::-;4376:3;4369:37;4294:118;;:::o;4448:537::-;4576:3;4597:86;4676:6;4671:3;4597:86;:::i;:::-;4590:93;;4707:66;4699:6;4696:78;4693:165;;;4777:79;;:::i;:::-;4693:165;4889:4;4881:6;4877:17;4867:27;;4904:43;4940:6;4935:3;4928:5;4904:43;:::i;:::-;4972:6;4967:3;4963:16;4956:23;;4448:537;;;;;:::o;5021:732::-;5140:3;5169:54;5217:5;5169:54;:::i;:::-;5239:86;5318:6;5313:3;5239:86;:::i;:::-;5232:93;;5349:56;5399:5;5349:56;:::i;:::-;5428:7;5459:1;5444:284;5469:6;5466:1;5463:13;5444:284;;;5545:6;5539:13;5572:63;5631:3;5616:13;5572:63;:::i;:::-;5565:70;;5658:60;5711:6;5658:60;:::i;:::-;5648:70;;5504:224;5491:1;5488;5484:9;5479:14;;5444:284;;;5448:14;5744:3;5737:10;;5145:608;;;5021:732;;;;:::o;5759:373::-;5863:3;5891:38;5923:5;5891:38;:::i;:::-;5945:88;6026:6;6021:3;5945:88;:::i;:::-;5938:95;;6042:52;6087:6;6082:3;6075:4;6068:5;6064:16;6042:52;:::i;:::-;6119:6;6114:3;6110:16;6103:23;;5867:265;5759:373;;;;:::o;6138:159::-;6239:51;6284:5;6239:51;:::i;:::-;6234:3;6227:64;6138:159;;:::o;6303:163::-;6406:53;6453:5;6406:53;:::i;:::-;6401:3;6394:66;6303:163;;:::o;6472:364::-;6560:3;6588:39;6621:5;6588:39;:::i;:::-;6643:71;6707:6;6702:3;6643:71;:::i;:::-;6636:78;;6723:52;6768:6;6763:3;6756:4;6749:5;6745:16;6723:52;:::i;:::-;6800:29;6822:6;6800:29;:::i;:::-;6795:3;6791:39;6784:46;;6564:272;6472:364;;;;:::o;6842:366::-;6984:3;7005:67;7069:2;7064:3;7005:67;:::i;:::-;6998:74;;7081:93;7170:3;7081:93;:::i;:::-;7199:2;7194:3;7190:12;7183:19;;6842:366;;;:::o;7214:::-;7356:3;7377:67;7441:2;7436:3;7377:67;:::i;:::-;7370:74;;7453:93;7542:3;7453:93;:::i;:::-;7571:2;7566:3;7562:12;7555:19;;7214:366;;;:::o;7586:::-;7728:3;7749:67;7813:2;7808:3;7749:67;:::i;:::-;7742:74;;7825:93;7914:3;7825:93;:::i;:::-;7943:2;7938:3;7934:12;7927:19;;7586:366;;;:::o;7958:::-;8100:3;8121:67;8185:2;8180:3;8121:67;:::i;:::-;8114:74;;8197:93;8286:3;8197:93;:::i;:::-;8315:2;8310:3;8306:12;8299:19;;7958:366;;;:::o;8330:::-;8472:3;8493:67;8557:2;8552:3;8493:67;:::i;:::-;8486:74;;8569:93;8658:3;8569:93;:::i;:::-;8687:2;8682:3;8678:12;8671:19;;8330:366;;;:::o;8702:::-;8844:3;8865:67;8929:2;8924:3;8865:67;:::i;:::-;8858:74;;8941:93;9030:3;8941:93;:::i;:::-;9059:2;9054:3;9050:12;9043:19;;8702:366;;;:::o;9074:::-;9216:3;9237:67;9301:2;9296:3;9237:67;:::i;:::-;9230:74;;9313:93;9402:3;9313:93;:::i;:::-;9431:2;9426:3;9422:12;9415:19;;9074:366;;;:::o;9446:::-;9588:3;9609:67;9673:2;9668:3;9609:67;:::i;:::-;9602:74;;9685:93;9774:3;9685:93;:::i;:::-;9803:2;9798:3;9794:12;9787:19;;9446:366;;;:::o;9818:::-;9960:3;9981:67;10045:2;10040:3;9981:67;:::i;:::-;9974:74;;10057:93;10146:3;10057:93;:::i;:::-;10175:2;10170:3;10166:12;10159:19;;9818:366;;;:::o;10190:108::-;10267:24;10285:5;10267:24;:::i;:::-;10262:3;10255:37;10190:108;;:::o;10304:118::-;10391:24;10409:5;10391:24;:::i;:::-;10386:3;10379:37;10304:118;;:::o;10428:271::-;10558:3;10580:93;10669:3;10660:6;10580:93;:::i;:::-;10573:100;;10690:3;10683:10;;10428:271;;;;:::o;10705:222::-;10798:4;10836:2;10825:9;10821:18;10813:26;;10849:71;10917:1;10906:9;10902:17;10893:6;10849:71;:::i;:::-;10705:222;;;;:::o;10933:442::-;11082:4;11120:2;11109:9;11105:18;11097:26;;11133:71;11201:1;11190:9;11186:17;11177:6;11133:71;:::i;:::-;11214:72;11282:2;11271:9;11267:18;11258:6;11214:72;:::i;:::-;11296;11364:2;11353:9;11349:18;11340:6;11296:72;:::i;:::-;10933:442;;;;;;:::o;11381:503::-;11562:4;11600:2;11589:9;11585:18;11577:26;;11613:71;11681:1;11670:9;11666:17;11657:6;11613:71;:::i;:::-;11731:9;11725:4;11721:20;11716:2;11705:9;11701:18;11694:48;11759:118;11872:4;11863:6;11855;11759:118;:::i;:::-;11751:126;;11381:503;;;;;;:::o;11890:332::-;12011:4;12049:2;12038:9;12034:18;12026:26;;12062:71;12130:1;12119:9;12115:17;12106:6;12062:71;:::i;:::-;12143:72;12211:2;12200:9;12196:18;12187:6;12143:72;:::i;:::-;11890:332;;;;;:::o;12228:442::-;12377:4;12415:2;12404:9;12400:18;12392:26;;12428:71;12496:1;12485:9;12481:17;12472:6;12428:71;:::i;:::-;12509:72;12577:2;12566:9;12562:18;12553:6;12509:72;:::i;:::-;12591;12659:2;12648:9;12644:18;12635:6;12591:72;:::i;:::-;12228:442;;;;;;:::o;12676:373::-;12819:4;12857:2;12846:9;12842:18;12834:26;;12906:9;12900:4;12896:20;12892:1;12881:9;12877:17;12870:47;12934:108;13037:4;13028:6;12934:108;:::i;:::-;12926:116;;12676:373;;;;:::o;13055:250::-;13162:4;13200:2;13189:9;13185:18;13177:26;;13213:85;13295:1;13284:9;13280:17;13271:6;13213:85;:::i;:::-;13055:250;;;;:::o;13311:254::-;13420:4;13458:2;13447:9;13443:18;13435:26;;13471:87;13555:1;13544:9;13540:17;13531:6;13471:87;:::i;:::-;13311:254;;;;:::o;13571:313::-;13684:4;13722:2;13711:9;13707:18;13699:26;;13771:9;13765:4;13761:20;13757:1;13746:9;13742:17;13735:47;13799:78;13872:4;13863:6;13799:78;:::i;:::-;13791:86;;13571:313;;;;:::o;13890:419::-;14056:4;14094:2;14083:9;14079:18;14071:26;;14143:9;14137:4;14133:20;14129:1;14118:9;14114:17;14107:47;14171:131;14297:4;14171:131;:::i;:::-;14163:139;;13890:419;;;:::o;14315:::-;14481:4;14519:2;14508:9;14504:18;14496:26;;14568:9;14562:4;14558:20;14554:1;14543:9;14539:17;14532:47;14596:131;14722:4;14596:131;:::i;:::-;14588:139;;14315:419;;;:::o;14740:::-;14906:4;14944:2;14933:9;14929:18;14921:26;;14993:9;14987:4;14983:20;14979:1;14968:9;14964:17;14957:47;15021:131;15147:4;15021:131;:::i;:::-;15013:139;;14740:419;;;:::o;15165:::-;15331:4;15369:2;15358:9;15354:18;15346:26;;15418:9;15412:4;15408:20;15404:1;15393:9;15389:17;15382:47;15446:131;15572:4;15446:131;:::i;:::-;15438:139;;15165:419;;;:::o;15590:::-;15756:4;15794:2;15783:9;15779:18;15771:26;;15843:9;15837:4;15833:20;15829:1;15818:9;15814:17;15807:47;15871:131;15997:4;15871:131;:::i;:::-;15863:139;;15590:419;;;:::o;16015:::-;16181:4;16219:2;16208:9;16204:18;16196:26;;16268:9;16262:4;16258:20;16254:1;16243:9;16239:17;16232:47;16296:131;16422:4;16296:131;:::i;:::-;16288:139;;16015:419;;;:::o;16440:::-;16606:4;16644:2;16633:9;16629:18;16621:26;;16693:9;16687:4;16683:20;16679:1;16668:9;16664:17;16657:47;16721:131;16847:4;16721:131;:::i;:::-;16713:139;;16440:419;;;:::o;16865:::-;17031:4;17069:2;17058:9;17054:18;17046:26;;17118:9;17112:4;17108:20;17104:1;17093:9;17089:17;17082:47;17146:131;17272:4;17146:131;:::i;:::-;17138:139;;16865:419;;;:::o;17290:::-;17456:4;17494:2;17483:9;17479:18;17471:26;;17543:9;17537:4;17533:20;17529:1;17518:9;17514:17;17507:47;17571:131;17697:4;17571:131;:::i;:::-;17563:139;;17290:419;;;:::o;17715:222::-;17808:4;17846:2;17835:9;17831:18;17823:26;;17859:71;17927:1;17916:9;17912:17;17903:6;17859:71;:::i;:::-;17715:222;;;;:::o;17943:553::-;18120:4;18158:3;18147:9;18143:19;18135:27;;18172:71;18240:1;18229:9;18225:17;18216:6;18172:71;:::i;:::-;18253:72;18321:2;18310:9;18306:18;18297:6;18253:72;:::i;:::-;18335;18403:2;18392:9;18388:18;18379:6;18335:72;:::i;:::-;18417;18485:2;18474:9;18470:18;18461:6;18417:72;:::i;:::-;17943:553;;;;;;;:::o;18583:132::-;18650:4;18673:3;18665:11;;18703:4;18698:3;18694:14;18686:22;;18583:132;;;:::o;18721:114::-;18788:6;18822:5;18816:12;18806:22;;18721:114;;;:::o;18841:98::-;18892:6;18926:5;18920:12;18910:22;;18841:98;;;:::o;18945:99::-;18997:6;19031:5;19025:12;19015:22;;18945:99;;;:::o;19050:113::-;19120:4;19152;19147:3;19143:14;19135:22;;19050:113;;;:::o;19169:184::-;19268:11;19302:6;19297:3;19290:19;19342:4;19337:3;19333:14;19318:29;;19169:184;;;;:::o;19359:147::-;19460:11;19497:3;19482:18;;19359:147;;;;:::o;19512:169::-;19596:11;19630:6;19625:3;19618:19;19670:4;19665:3;19661:14;19646:29;;19512:169;;;;:::o;19687:305::-;19727:3;19746:20;19764:1;19746:20;:::i;:::-;19741:25;;19780:20;19798:1;19780:20;:::i;:::-;19775:25;;19934:1;19866:66;19862:74;19859:1;19856:81;19853:107;;;19940:18;;:::i;:::-;19853:107;19984:1;19981;19977:9;19970:16;;19687:305;;;;:::o;19998:185::-;20038:1;20055:20;20073:1;20055:20;:::i;:::-;20050:25;;20089:20;20107:1;20089:20;:::i;:::-;20084:25;;20128:1;20118:35;;20133:18;;:::i;:::-;20118:35;20175:1;20172;20168:9;20163:14;;19998:185;;;;:::o;20189:348::-;20229:7;20252:20;20270:1;20252:20;:::i;:::-;20247:25;;20286:20;20304:1;20286:20;:::i;:::-;20281:25;;20474:1;20406:66;20402:74;20399:1;20396:81;20391:1;20384:9;20377:17;20373:105;20370:131;;;20481:18;;:::i;:::-;20370:131;20529:1;20526;20522:9;20511:20;;20189:348;;;;:::o;20543:191::-;20583:4;20603:20;20621:1;20603:20;:::i;:::-;20598:25;;20637:20;20655:1;20637:20;:::i;:::-;20632:25;;20676:1;20673;20670:8;20667:34;;;20681:18;;:::i;:::-;20667:34;20726:1;20723;20719:9;20711:17;;20543:191;;;;:::o;20740:96::-;20777:7;20806:24;20824:5;20806:24;:::i;:::-;20795:35;;20740:96;;;:::o;20842:90::-;20876:7;20919:5;20912:13;20905:21;20894:32;;20842:90;;;:::o;20938:126::-;20975:7;21015:42;21008:5;21004:54;20993:65;;20938:126;;;:::o;21070:77::-;21107:7;21136:5;21125:16;;21070:77;;;:::o;21153:140::-;21217:9;21250:37;21281:5;21250:37;:::i;:::-;21237:50;;21153:140;;;:::o;21299:142::-;21365:9;21398:37;21429:5;21398:37;:::i;:::-;21385:50;;21299:142;;;:::o;21447:126::-;21497:9;21530:37;21561:5;21530:37;:::i;:::-;21517:50;;21447:126;;;:::o;21579:113::-;21629:9;21662:24;21680:5;21662:24;:::i;:::-;21649:37;;21579:113;;;:::o;21698:154::-;21782:6;21777:3;21772;21759:30;21844:1;21835:6;21830:3;21826:16;21819:27;21698:154;;;:::o;21858:307::-;21926:1;21936:113;21950:6;21947:1;21944:13;21936:113;;;22035:1;22030:3;22026:11;22020:18;22016:1;22011:3;22007:11;22000:39;21972:2;21969:1;21965:10;21960:15;;21936:113;;;22067:6;22064:1;22061:13;22058:101;;;22147:1;22138:6;22133:3;22129:16;22122:27;22058:101;21907:258;21858:307;;;:::o;22171:233::-;22210:3;22233:24;22251:5;22233:24;:::i;:::-;22224:33;;22279:66;22272:5;22269:77;22266:103;;;22349:18;;:::i;:::-;22266:103;22396:1;22389:5;22385:13;22378:20;;22171:233;;;:::o;22410:180::-;22458:77;22455:1;22448:88;22555:4;22552:1;22545:15;22579:4;22576:1;22569:15;22596:180;22644:77;22641:1;22634:88;22741:4;22738:1;22731:15;22765:4;22762:1;22755:15;22782:180;22830:77;22827:1;22820:88;22927:4;22924:1;22917:15;22951:4;22948:1;22941:15;22968:180;23016:77;23013:1;23006:88;23113:4;23110:1;23103:15;23137:4;23134:1;23127:15;23154:117;23263:1;23260;23253:12;23277:117;23386:1;23383;23376:12;23400:117;23509:1;23506;23499:12;23523:117;23632:1;23629;23622:12;23646:117;23755:1;23752;23745:12;23769:117;23878:1;23875;23868:12;23892:102;23933:6;23984:2;23980:7;23975:2;23968:5;23964:14;23960:28;23950:38;;23892:102;;;:::o;24000:174::-;24140:26;24136:1;24128:6;24124:14;24117:50;24000:174;:::o;24180:229::-;24320:34;24316:1;24308:6;24304:14;24297:58;24389:12;24384:2;24376:6;24372:15;24365:37;24180:229;:::o;24415:225::-;24555:34;24551:1;24543:6;24539:14;24532:58;24624:8;24619:2;24611:6;24607:15;24600:33;24415:225;:::o;24646:236::-;24786:34;24782:1;24774:6;24770:14;24763:58;24855:19;24850:2;24842:6;24838:15;24831:44;24646:236;:::o;24888:182::-;25028:34;25024:1;25016:6;25012:14;25005:58;24888:182;:::o;25076:::-;25216:34;25212:1;25204:6;25200:14;25193:58;25076:182;:::o;25264:180::-;25404:32;25400:1;25392:6;25388:14;25381:56;25264:180;:::o;25450:179::-;25590:31;25586:1;25578:6;25574:14;25567:55;25450:179;:::o;25635:244::-;25775:34;25771:1;25763:6;25759:14;25752:58;25844:27;25839:2;25831:6;25827:15;25820:52;25635:244;:::o;25885:122::-;25958:24;25976:5;25958:24;:::i;:::-;25951:5;25948:35;25938:63;;25997:1;25994;25987:12;25938:63;25885:122;:::o;26013:116::-;26083:21;26098:5;26083:21;:::i;:::-;26076:5;26073:32;26063:60;;26119:1;26116;26109:12;26063:60;26013:116;:::o;26135:122::-;26208:24;26226:5;26208:24;:::i;:::-;26201:5;26198:35;26188:63;;26247:1;26244;26237:12;26188:63;26135:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2588600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accGHSPPerShare()": "2452",
								"balanceOfStakes()": "infinite",
								"depositReward(uint256)": "infinite",
								"feeWallet()": "2624",
								"getMultiplier(uint256,uint256)": "infinite",
								"getPending(address)": "infinite",
								"getRewardBalance()": "infinite",
								"ghspToken()": "infinite",
								"harvest()": "infinite",
								"harvestFee()": "2451",
								"lastRewardBlock()": "2540",
								"nftToken()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30485",
								"rewardPerBlock()": "2452",
								"setFeeWallet(address)": "30348",
								"setHarvestFee(uint256)": "infinite",
								"stake(uint256[])": "infinite",
								"totalStakedAmount()": "2496",
								"transferOwnership(address)": "30855",
								"unstake(uint256[])": "infinite",
								"userInfo(address)": "infinite"
							},
							"internal": {
								"_getPending(address)": "infinite",
								"updateStatus()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4790,
									"end": 4822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 4809,
									"end": 4821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4809,
									"end": 4819,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 4809,
									"end": 4819,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4809,
									"end": 4819,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4809,
									"end": 4821,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4809,
									"end": 4821,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4809,
									"end": 4821,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 4809,
									"end": 4821,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4809,
									"end": 4821,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4790,
									"end": 4808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 4790,
									"end": 4808,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4790,
									"end": 4808,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4790,
									"end": 4822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4790,
									"end": 4822,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4790,
									"end": 4822,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 4790,
									"end": 4822,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 4790,
									"end": 4822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29448,
									"end": 29457,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29437,
									"end": 29457,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29437,
									"end": 29457,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29437,
									"end": 29457,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 29437,
									"end": 29457,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29437,
									"end": 29457,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29437,
									"end": 29457,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29437,
									"end": 29457,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 29437,
									"end": 29457,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 29437,
									"end": 29457,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29437,
									"end": 29457,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29437,
									"end": 29457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29437,
									"end": 29457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29480,
									"end": 29490,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29468,
									"end": 29490,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29468,
									"end": 29490,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29468,
									"end": 29490,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 29468,
									"end": 29490,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29468,
									"end": 29490,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29468,
									"end": 29490,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29468,
									"end": 29490,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 29468,
									"end": 29490,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 29468,
									"end": 29490,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29468,
									"end": 29490,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29468,
									"end": 29490,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29468,
									"end": 29490,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29518,
									"end": 29533,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29501,
									"end": 29515,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 29501,
									"end": 29533,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29501,
									"end": 29533,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29501,
									"end": 29533,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29501,
									"end": 29533,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29556,
									"end": 29566,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29553,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 29544,
									"end": 29553,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29544,
									"end": 29566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29288,
									"end": 29574,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3751,
									"end": 3849,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3751,
									"end": 3849,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3804,
									"end": 3811,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3831,
									"end": 3841,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 3824,
									"end": 3841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3824,
									"end": 3841,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3751,
									"end": 3849,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3751,
									"end": 3849,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 6181,
									"end": 6372,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6181,
									"end": 6372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6255,
									"end": 6271,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6255,
									"end": 6280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6255,
									"end": 6280,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6300,
									"end": 6308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6355,
									"end": 6363,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6345,
									"end": 6353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6372,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6181,
									"end": 6372,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6181,
									"end": 6372,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 327,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 156,
									"end": 327,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 227,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 264,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 252,
									"end": 265,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 243,
									"end": 265,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 243,
									"end": 265,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 274,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 315,
									"end": 320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 274,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 274,
									"end": 321,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 274,
									"end": 321,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 274,
									"end": 321,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 333,
									"end": 508,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 333,
									"end": 508,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 406,
									"end": 411,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 443,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 431,
									"end": 444,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 422,
									"end": 444,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 422,
									"end": 444,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 453,
									"end": 502,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 496,
									"end": 501,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 453,
									"end": 502,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 453,
									"end": 502,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 453,
									"end": 502,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 453,
									"end": 502,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 333,
									"end": 508,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 333,
									"end": 508,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 333,
									"end": 508,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 508,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 508,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 514,
									"end": 657,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 514,
									"end": 657,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 571,
									"end": 576,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 602,
									"end": 608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 596,
									"end": 609,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 587,
									"end": 609,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 587,
									"end": 609,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 618,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 645,
									"end": 650,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 618,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 618,
									"end": 651,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 618,
									"end": 651,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 618,
									"end": 651,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 514,
									"end": 657,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 514,
									"end": 657,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 514,
									"end": 657,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 514,
									"end": 657,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 514,
									"end": 657,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 790,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 798,
									"end": 804,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 806,
									"end": 812,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 820,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 863,
									"end": 866,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 851,
									"end": 860,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 842,
									"end": 849,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 838,
									"end": 861,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 834,
									"end": 867,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 831,
									"end": 951,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 831,
									"end": 951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 831,
									"end": 951,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 870,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 870,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 870,
									"end": 949,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 870,
									"end": 949,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 870,
									"end": 949,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 831,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 831,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 990,
									"end": 991,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1015,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1087,
									"end": 1094,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1067,
									"end": 1076,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1063,
									"end": 1085,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1015,
									"end": 1095,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1015,
									"end": 1095,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1015,
									"end": 1095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1095,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1095,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 961,
									"end": 1105,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1146,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1170,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1240,
									"end": 1247,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1231,
									"end": 1237,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1220,
									"end": 1229,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1238,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1170,
									"end": 1248,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1170,
									"end": 1248,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1170,
									"end": 1248,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1248,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1248,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1297,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1379,
									"end": 1386,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1370,
									"end": 1376,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1368,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1377,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1387,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1387,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1268,
									"end": 1397,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1438,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1518,
									"end": 1525,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1509,
									"end": 1515,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1507,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1494,
									"end": 1516,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1407,
									"end": 1536,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1630,
									"end": 1726,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1630,
									"end": 1726,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1674,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1696,
									"end": 1720,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1714,
									"end": 1719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1720,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1696,
									"end": 1720,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1696,
									"end": 1720,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1696,
									"end": 1720,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1720,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1720,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1726,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1726,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1726,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1726,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1732,
									"end": 1842,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1732,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1783,
									"end": 1790,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1812,
									"end": 1836,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1830,
									"end": 1835,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1836,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1812,
									"end": 1836,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1812,
									"end": 1836,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1812,
									"end": 1836,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 1836,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 1836,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1842,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1842,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1842,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1842,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1848,
									"end": 1960,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1848,
									"end": 1960,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1908,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1930,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1948,
									"end": 1953,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1930,
									"end": 1954,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1930,
									"end": 1954,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1930,
									"end": 1954,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1919,
									"end": 1954,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1919,
									"end": 1954,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1960,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1960,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1960,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1960,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1966,
									"end": 2092,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1966,
									"end": 2092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2003,
									"end": 2010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2043,
									"end": 2085,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2036,
									"end": 2041,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2032,
									"end": 2086,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2086,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2092,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2098,
									"end": 2175,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2098,
									"end": 2175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2135,
									"end": 2142,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2164,
									"end": 2169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2098,
									"end": 2175,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2098,
									"end": 2175,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2098,
									"end": 2175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2098,
									"end": 2175,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2304,
									"end": 2421,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2304,
									"end": 2421,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2413,
									"end": 2414,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2410,
									"end": 2411,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2415,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2549,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2427,
									"end": 2549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2500,
									"end": 2524,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2518,
									"end": 2523,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2500,
									"end": 2524,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2500,
									"end": 2524,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2500,
									"end": 2524,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2500,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2493,
									"end": 2498,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2490,
									"end": 2525,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2480,
									"end": 2543,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2480,
									"end": 2543,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2539,
									"end": 2540,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2536,
									"end": 2537,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2529,
									"end": 2541,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2480,
									"end": 2543,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2480,
									"end": 2543,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2549,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2549,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2555,
									"end": 2705,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2555,
									"end": 2705,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2642,
									"end": 2680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2674,
									"end": 2679,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2642,
									"end": 2680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2642,
									"end": 2680,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2642,
									"end": 2680,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2642,
									"end": 2680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2635,
									"end": 2640,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2632,
									"end": 2681,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2622,
									"end": 2699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2622,
									"end": 2699,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2695,
									"end": 2696,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2692,
									"end": 2693,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2697,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2622,
									"end": 2699,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2622,
									"end": 2699,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2705,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2711,
									"end": 2865,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2711,
									"end": 2865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2840,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2834,
									"end": 2839,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2840,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2800,
									"end": 2840,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2800,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2800,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2793,
									"end": 2798,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 2841,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2859,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2780,
									"end": 2859,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2855,
									"end": 2856,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2852,
									"end": 2853,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2845,
									"end": 2857,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2859,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2780,
									"end": 2859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2865,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2871,
									"end": 2993,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2871,
									"end": 2993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2962,
									"end": 2967,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2937,
									"end": 2942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2934,
									"end": 2969,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2924,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2924,
									"end": 2987,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2983,
									"end": 2984,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2973,
									"end": 2985,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2924,
									"end": 2987,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2924,
									"end": 2987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2871,
									"end": 2993,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2871,
									"end": 2993,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1101"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1098"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27968,
									"end": 36858,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f0f0306562c7050fb4362a04b54d39be153609b603d55ccfc8ff86b01f4291b64736f6c63430008070033",
									".code": [
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "8AE39CAC"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "B5962917"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "B5962917"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "D06FCBA8"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "D086C254"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "E449F341"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "F25F4B56"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "8AE39CAC"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "8DBB1E3A"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "90D49B9D"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "A9F8D181"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "43DB3C5F"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "43DB3C5F"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "4641257D"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "567E98F9"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "5E42B455"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "792B55B6"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "FBF0A93"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "1959A002"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "19FCA9F6"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "1E2720FF"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "2955C60C"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 36858,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 35701,
											"end": 36538,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35701,
											"end": 36538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35701,
											"end": 36538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 35701,
											"end": 36538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 35701,
											"end": 36538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35701,
											"end": 36538,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 35701,
											"end": 36538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35701,
											"end": 36538,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31707,
											"end": 31715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31707,
											"end": 31715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31707,
											"end": 31722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31707,
											"end": 31722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31707,
											"end": 31726,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 31699,
											"end": 31755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31770,
											"end": 31779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31766,
											"end": 32232,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31766,
											"end": 32232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 31786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 31804,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31766,
											"end": 32232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31766,
											"end": 32232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 31766,
											"end": 32232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31867,
											"end": 31877,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31834,
											"end": 31877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31842,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1098"
										},
										{
											"begin": 31834,
											"end": 31850,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31834,
											"end": 31850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31850,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 31851,
											"end": 31859,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31851,
											"end": 31859,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31860,
											"end": 31861,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31851,
											"end": 31862,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 31834,
											"end": 31863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31834,
											"end": 31877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31834,
											"end": 31877,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31826,
											"end": 31914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31971,
											"end": 31972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31955,
											"end": 31963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31955,
											"end": 31963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31964,
											"end": 31965,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31955,
											"end": 31966,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 31929,
											"end": 32034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32053,
											"end": 32062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32069,
											"end": 32070,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32065,
											"end": 32066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32065,
											"end": 32070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32065,
											"end": 32070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32065,
											"end": 32070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32065,
											"end": 32070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32065,
											"end": 32070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32065,
											"end": 32070,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32065,
											"end": 32070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32053,
											"end": 32070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32053,
											"end": 32070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32049,
											"end": 32221,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32049,
											"end": 32221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32072,
											"end": 32073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32072,
											"end": 32091,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32049,
											"end": 32221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32049,
											"end": 32221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 32049,
											"end": 32221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32140,
											"end": 32151,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32133,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32133,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32135,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32136,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32125,
											"end": 32151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 32117,
											"end": 32205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32093,
											"end": 32097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32093,
											"end": 32097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32093,
											"end": 32097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 32093,
											"end": 32097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32093,
											"end": 32097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 32093,
											"end": 32097,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32093,
											"end": 32097,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 32093,
											"end": 32097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32093,
											"end": 32097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32093,
											"end": 32097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32093,
											"end": 32097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32049,
											"end": 32221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32049,
											"end": 32221,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32049,
											"end": 32221,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 32049,
											"end": 32221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32049,
											"end": 32221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31806,
											"end": 31810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31806,
											"end": 31810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31806,
											"end": 31810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 31806,
											"end": 31810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31806,
											"end": 31810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 31806,
											"end": 31810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31806,
											"end": 31810,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 31806,
											"end": 31810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31806,
											"end": 31810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31806,
											"end": 31810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31806,
											"end": 31810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31766,
											"end": 32232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31766,
											"end": 32232,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31766,
											"end": 32232,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 31766,
											"end": 32232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31766,
											"end": 32232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32242,
											"end": 32256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 32242,
											"end": 32254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 32242,
											"end": 32256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32242,
											"end": 32256,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 32242,
											"end": 32256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32291,
											"end": 32299,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32300,
											"end": 32310,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32291,
											"end": 32311,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32340,
											"end": 32341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32326,
											"end": 32330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32326,
											"end": 32337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32326,
											"end": 32337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32326,
											"end": 32337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32326,
											"end": 32341,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32322,
											"end": 32518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32322,
											"end": 32518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 32322,
											"end": 32518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32358,
											"end": 32373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32376,
											"end": 32439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32423,
											"end": 32427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32423,
											"end": 32438,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32423,
											"end": 32438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32423,
											"end": 32438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 32413,
											"end": 32417,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32376,
											"end": 32408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 32392,
											"end": 32407,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32392,
											"end": 32407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32380,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32376,
											"end": 32387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 32376,
											"end": 32391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32376,
											"end": 32408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32376,
											"end": 32408,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 32376,
											"end": 32408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 32376,
											"end": 32412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32376,
											"end": 32418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32376,
											"end": 32418,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 32376,
											"end": 32418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 32376,
											"end": 32422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32439,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32376,
											"end": 32439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32376,
											"end": 32439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32376,
											"end": 32439,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32376,
											"end": 32439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32358,
											"end": 32439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32358,
											"end": 32439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32475,
											"end": 32506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 32498,
											"end": 32505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32475,
											"end": 32479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32475,
											"end": 32493,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32475,
											"end": 32493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32475,
											"end": 32493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32475,
											"end": 32497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 32475,
											"end": 32497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32475,
											"end": 32506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32475,
											"end": 32506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32475,
											"end": 32506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32475,
											"end": 32506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32475,
											"end": 32506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32475,
											"end": 32506,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 32475,
											"end": 32506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32454,
											"end": 32458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32454,
											"end": 32472,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32454,
											"end": 32472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32454,
											"end": 32506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32454,
											"end": 32506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32454,
											"end": 32506,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32454,
											"end": 32506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32343,
											"end": 32518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32322,
											"end": 32518,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 32322,
											"end": 32518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32528,
											"end": 32547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32550,
											"end": 32558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32550,
											"end": 32558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32550,
											"end": 32565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32550,
											"end": 32565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32528,
											"end": 32565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32528,
											"end": 32565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 32618,
											"end": 32629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32613,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32596,
											"end": 32613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 32596,
											"end": 32617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32596,
											"end": 32630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32596,
											"end": 32630,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 32596,
											"end": 32630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32576,
											"end": 32593,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32576,
											"end": 32630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32576,
											"end": 32630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32576,
											"end": 32630,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32576,
											"end": 32630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32655,
											"end": 32664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32651,
											"end": 32917,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 32651,
											"end": 32917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32682,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32682,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32670,
											"end": 32671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32670,
											"end": 32689,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32651,
											"end": 32917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32651,
											"end": 32917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 32651,
											"end": 32917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32763,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32763,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32764,
											"end": 32765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32766,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32723,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32724,
											"end": 32734,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32711,
											"end": 32735,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32750,
											"end": 32751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32740,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32736,
											"end": 32747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32747,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 32736,
											"end": 32751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32736,
											"end": 32751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32736,
											"end": 32751,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 32736,
											"end": 32751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32711,
											"end": 32752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32711,
											"end": 32752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32711,
											"end": 32752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32766,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32828,
											"end": 32829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32814,
											"end": 32818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32814,
											"end": 32825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32814,
											"end": 32825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32814,
											"end": 32825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32814,
											"end": 32829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 32814,
											"end": 32829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32814,
											"end": 32829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32814,
											"end": 32829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32814,
											"end": 32829,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32814,
											"end": 32829,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 32814,
											"end": 32829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32798,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32781,
											"end": 32811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32799,
											"end": 32807,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32807,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32808,
											"end": 32809,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32810,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32781,
											"end": 32811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32781,
											"end": 32811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32781,
											"end": 32811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32829,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32852,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1098"
										},
										{
											"begin": 32844,
											"end": 32865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32844,
											"end": 32865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32865,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 32866,
											"end": 32876,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32886,
											"end": 32890,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32901,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32901,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 32902,
											"end": 32903,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32904,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32844,
											"end": 32905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32691,
											"end": 32695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32691,
											"end": 32695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32691,
											"end": 32695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 32691,
											"end": 32695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32691,
											"end": 32695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 32691,
											"end": 32695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32691,
											"end": 32695,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 32691,
											"end": 32695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32691,
											"end": 32695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32691,
											"end": 32695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32691,
											"end": 32695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32651,
											"end": 32917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 32651,
											"end": 32917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32651,
											"end": 32917,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 32651,
											"end": 32917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32651,
											"end": 32917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 32969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 32945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 32952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32941,
											"end": 32952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 32952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 32956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 32941,
											"end": 32956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 32969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 32969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 32969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32941,
											"end": 32969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 32969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32941,
											"end": 32969,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 32941,
											"end": 32969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32927,
											"end": 32931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32927,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32927,
											"end": 32938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32927,
											"end": 32969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32927,
											"end": 32969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32927,
											"end": 32969,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32927,
											"end": 32969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 33035,
											"end": 33039,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32998,
											"end": 33030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 33014,
											"end": 33029,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33014,
											"end": 33029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33002,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32998,
											"end": 33009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 32998,
											"end": 33013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32998,
											"end": 33030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32998,
											"end": 33030,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 32998,
											"end": 33030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 32998,
											"end": 33034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33040,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32998,
											"end": 33040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32998,
											"end": 33040,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 32998,
											"end": 33040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32980,
											"end": 32984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32980,
											"end": 32995,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32980,
											"end": 32995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32980,
											"end": 33040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32980,
											"end": 33040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32980,
											"end": 33040,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32980,
											"end": 33040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33073,
											"end": 33088,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33051,
											"end": 33055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33051,
											"end": 33070,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33051,
											"end": 33070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33051,
											"end": 33088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33051,
											"end": 33088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33051,
											"end": 33088,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33051,
											"end": 33088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "PUSH",
											"source": 0,
											"value": "134B166C6094CC1CCBF1E3353CE5C3CD9FD29869051BDB999895854D77CC5EF6"
										},
										{
											"begin": 33111,
											"end": 33121,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33123,
											"end": 33131,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33123,
											"end": 33131,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33132,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31688,
											"end": 33140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31688,
											"end": 33140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 33140,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28850,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5131,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30568,
											"end": 30630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 30595,
											"end": 30605,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30615,
											"end": 30619,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30622,
											"end": 30629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30568,
											"end": 30577,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 30568,
											"end": 30594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30568,
											"end": 30594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30568,
											"end": 30594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 30568,
											"end": 30594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30568,
											"end": 30630,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30568,
											"end": 30630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30568,
											"end": 30630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30568,
											"end": 30630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30568,
											"end": 30630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30568,
											"end": 30630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30568,
											"end": 30630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30568,
											"end": 30630,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 30568,
											"end": 30630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30670,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "PUSH",
											"source": 0,
											"value": "4F7FD5C9E17300A4800FD572EA53FC291E2EE7470D73346D16B357FAEE4E7210"
										},
										{
											"begin": 30672,
											"end": 30679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30680,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 30708,
											"end": 30735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 30727,
											"end": 30734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30708,
											"end": 30722,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30708,
											"end": 30722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30708,
											"end": 30726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 30708,
											"end": 30726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30708,
											"end": 30735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30708,
											"end": 30735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30708,
											"end": 30735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30708,
											"end": 30735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30708,
											"end": 30735,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30708,
											"end": 30735,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 30708,
											"end": 30735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30691,
											"end": 30735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30735,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30743,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36594,
											"end": 36610,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36622,
											"end": 36645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36662,
											"end": 36670,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36671,
											"end": 36681,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36662,
											"end": 36682,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36662,
											"end": 36689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36662,
											"end": 36689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36662,
											"end": 36689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36648,
											"end": 36690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36622,
											"end": 36690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36622,
											"end": 36690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36705,
											"end": 36714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36701,
											"end": 36824,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 36701,
											"end": 36824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36732,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36733,
											"end": 36743,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36724,
											"end": 36744,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36724,
											"end": 36751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36724,
											"end": 36751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36720,
											"end": 36721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36720,
											"end": 36751,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36701,
											"end": 36824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36701,
											"end": 36824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 36701,
											"end": 36824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36797,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36798,
											"end": 36808,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36785,
											"end": 36809,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36810,
											"end": 36811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 36812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36780,
											"end": 36781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36773,
											"end": 36812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36753,
											"end": 36757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36753,
											"end": 36757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36753,
											"end": 36757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 36753,
											"end": 36757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36753,
											"end": 36757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 36753,
											"end": 36757,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36753,
											"end": 36757,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 36753,
											"end": 36757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36753,
											"end": 36757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36753,
											"end": 36757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36753,
											"end": 36757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36701,
											"end": 36824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 36701,
											"end": 36824,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36701,
											"end": 36824,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 36701,
											"end": 36824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36701,
											"end": 36824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36841,
											"end": 36847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36834,
											"end": 36847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36834,
											"end": 36847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36834,
											"end": 36847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36855,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35701,
											"end": 36538,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 35701,
											"end": 36538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35740,
											"end": 35760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35763,
											"end": 35786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 35775,
											"end": 35785,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35763,
											"end": 35774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35763,
											"end": 35786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35763,
											"end": 35786,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 35763,
											"end": 35786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35740,
											"end": 35786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35740,
											"end": 35786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35797,
											"end": 35818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35821,
											"end": 35829,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35830,
											"end": 35840,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35821,
											"end": 35841,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35797,
											"end": 35841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35797,
											"end": 35841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35852,
											"end": 35871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35874,
											"end": 35911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 35907,
											"end": 35910,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 35874,
											"end": 35902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 35891,
											"end": 35901,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35891,
											"end": 35901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35874,
											"end": 35886,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35874,
											"end": 35890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 35874,
											"end": 35890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35874,
											"end": 35902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35874,
											"end": 35902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35874,
											"end": 35902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35874,
											"end": 35902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35874,
											"end": 35902,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35874,
											"end": 35902,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 35874,
											"end": 35902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35874,
											"end": 35906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 35874,
											"end": 35906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35874,
											"end": 35911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35874,
											"end": 35911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35874,
											"end": 35911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35874,
											"end": 35911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35874,
											"end": 35911,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35874,
											"end": 35911,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 35874,
											"end": 35911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35852,
											"end": 35911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35852,
											"end": 35911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35922,
											"end": 35936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35954,
											"end": 35965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35939,
											"end": 35951,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35939,
											"end": 35965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35939,
											"end": 35965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35939,
											"end": 35965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35939,
											"end": 35965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35939,
											"end": 35965,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35939,
											"end": 35965,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35939,
											"end": 35965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35922,
											"end": 35965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35922,
											"end": 35965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36017,
											"end": 36023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 35989,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 35980,
											"end": 35999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35980,
											"end": 35999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 35999,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 36008,
											"end": 36012,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 35980,
											"end": 36014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 36023,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35976,
											"end": 36095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35976,
											"end": 36095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 35976,
											"end": 36095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36058,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 36049,
											"end": 36068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36049,
											"end": 36068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36068,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 36077,
											"end": 36081,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 36049,
											"end": 36083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35976,
											"end": 36095,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 35976,
											"end": 36095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36105,
											"end": 36147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 36128,
											"end": 36138,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36140,
											"end": 36146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36105,
											"end": 36114,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 36105,
											"end": 36127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36105,
											"end": 36127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36105,
											"end": 36127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 36105,
											"end": 36127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36105,
											"end": 36147,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36105,
											"end": 36147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36105,
											"end": 36147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36105,
											"end": 36147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36105,
											"end": 36147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36105,
											"end": 36147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36105,
											"end": 36147,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 36105,
											"end": 36147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36201,
											"end": 36212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36173,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 36164,
											"end": 36183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36164,
											"end": 36183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36183,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 36192,
											"end": 36196,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 36164,
											"end": 36198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36212,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36160,
											"end": 36289,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36160,
											"end": 36289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 36160,
											"end": 36289,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36252,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 36243,
											"end": 36262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36243,
											"end": 36262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36262,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 36271,
											"end": 36275,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 36243,
											"end": 36277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36229,
											"end": 36277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36229,
											"end": 36277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36160,
											"end": 36289,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 36160,
											"end": 36289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 36322,
											"end": 36331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36322,
											"end": 36331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36322,
											"end": 36331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36322,
											"end": 36331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36322,
											"end": 36331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36322,
											"end": 36331,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36322,
											"end": 36331,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 36322,
											"end": 36331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36322,
											"end": 36331,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36322,
											"end": 36331,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36322,
											"end": 36331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36333,
											"end": 36344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36308,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 36299,
											"end": 36321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36299,
											"end": 36321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 36299,
											"end": 36321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36345,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36299,
											"end": 36345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36299,
											"end": 36345,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 36299,
											"end": 36345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36356,
											"end": 36370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 36356,
											"end": 36368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 36356,
											"end": 36370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36356,
											"end": 36370,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 36356,
											"end": 36370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36402,
											"end": 36403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36381,
											"end": 36385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36381,
											"end": 36399,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36381,
											"end": 36399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36381,
											"end": 36403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36381,
											"end": 36403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36381,
											"end": 36403,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36381,
											"end": 36403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 36469,
											"end": 36473,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 36432,
											"end": 36464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 36448,
											"end": 36463,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36448,
											"end": 36463,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36436,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36432,
											"end": 36443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36443,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 36432,
											"end": 36447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36432,
											"end": 36464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36464,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36432,
											"end": 36464,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 36432,
											"end": 36464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 36432,
											"end": 36468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36432,
											"end": 36474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36432,
											"end": 36474,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 36432,
											"end": 36474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36414,
											"end": 36418,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36414,
											"end": 36429,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36414,
											"end": 36429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36414,
											"end": 36474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36414,
											"end": 36474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36414,
											"end": 36474,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36414,
											"end": 36474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "PUSH",
											"source": 0,
											"value": "71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954"
										},
										{
											"begin": 36498,
											"end": 36508,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36510,
											"end": 36516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36518,
											"end": 36529,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36490,
											"end": 36530,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 35729,
											"end": 36538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35729,
											"end": 36538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35729,
											"end": 36538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35729,
											"end": 36538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35701,
											"end": 36538,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30136,
											"end": 30143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30175,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30175,
											"end": 30190,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30172,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30190,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 30160,
											"end": 30216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30215,
											"end": 30216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30194,
											"end": 30211,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30194,
											"end": 30211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30194,
											"end": 30216,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30194,
											"end": 30216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30216,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 30160,
											"end": 30216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30156,
											"end": 30483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30156,
											"end": 30483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 30156,
											"end": 30483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30254,
											"end": 30298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 30268,
											"end": 30283,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30268,
											"end": 30283,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30285,
											"end": 30297,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30254,
											"end": 30267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 30254,
											"end": 30298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30254,
											"end": 30298,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 30254,
											"end": 30298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30233,
											"end": 30298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30313,
											"end": 30327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30330,
											"end": 30360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 30345,
											"end": 30359,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30345,
											"end": 30359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30330,
											"end": 30340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30330,
											"end": 30344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 30330,
											"end": 30344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30330,
											"end": 30360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30330,
											"end": 30360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30330,
											"end": 30360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30330,
											"end": 30360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30330,
											"end": 30360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30330,
											"end": 30360,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 30330,
											"end": 30360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30313,
											"end": 30360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30313,
											"end": 30360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 30408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 30401,
											"end": 30407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 30396,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30382,
											"end": 30396,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 30400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 30382,
											"end": 30400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 30408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 30408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 30408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30382,
											"end": 30408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 30408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30382,
											"end": 30408,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 30382,
											"end": 30408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30375,
											"end": 30408,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30375,
											"end": 30408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30375,
											"end": 30408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30375,
											"end": 30408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30375,
											"end": 30408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 30375,
											"end": 30408,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30156,
											"end": 30483,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 30156,
											"end": 30483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30457,
											"end": 30471,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30457,
											"end": 30471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30450,
											"end": 30471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30450,
											"end": 30471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30085,
											"end": 30490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 5131,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 5654,
											"end": 5655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 5627,
											"end": 5657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5627,
											"end": 5657,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 5627,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 5131,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 29828,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 29811,
											"end": 29822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29828,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 29803,
											"end": 29863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29887,
											"end": 29898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29884,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29874,
											"end": 29898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29898,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "PUSH",
											"source": 0,
											"value": "F419800A2D8930C61D5D9CD782AA72C512CF6BE2F79DA6DB0B8855870B7269ED"
										},
										{
											"begin": 29928,
											"end": 29939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29914,
											"end": 29940,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29729,
											"end": 29948,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4957,
											"end": 4964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 4990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 4990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30028,
											"end": 30035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30055,
											"end": 30069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 30063,
											"end": 30068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30055,
											"end": 30058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30055,
											"end": 30062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 30055,
											"end": 30062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30055,
											"end": 30069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30055,
											"end": 30069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30055,
											"end": 30069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30055,
											"end": 30069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30055,
											"end": 30069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30055,
											"end": 30069,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 30055,
											"end": 30069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30048,
											"end": 30069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30048,
											"end": 30069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 30077,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 5131,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29664,
											"end": 29674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29703,
											"end": 29712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29703,
											"end": 29712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29712,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29703,
											"end": 29712,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29712,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29703,
											"end": 29712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "PUSH",
											"source": 0,
											"value": "3D21E5A2B633291BD1FF5F9C654E402D063783C95759D2EA521B31FB30E4DA41"
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29580,
											"end": 29721,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1098"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34960,
											"end": 34967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34980,
											"end": 34995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 35010,
											"end": 35015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 34998,
											"end": 35016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34998,
											"end": 35016,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 34998,
											"end": 35016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34980,
											"end": 35016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34980,
											"end": 35016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35027,
											"end": 35046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35049,
											"end": 35081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 35077,
											"end": 35080,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 35049,
											"end": 35072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 35061,
											"end": 35071,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35061,
											"end": 35071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35056,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 35049,
											"end": 35060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35049,
											"end": 35072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35072,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35049,
											"end": 35072,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 35049,
											"end": 35072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 35049,
											"end": 35076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35049,
											"end": 35081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35049,
											"end": 35081,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 35049,
											"end": 35081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35027,
											"end": 35081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35027,
											"end": 35081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35109,
											"end": 35120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35099,
											"end": 35106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35099,
											"end": 35120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 35099,
											"end": 35120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35099,
											"end": 35120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35099,
											"end": 35120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35099,
											"end": 35120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35099,
											"end": 35120,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 35099,
											"end": 35120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35092,
											"end": 35120,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35092,
											"end": 35120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35092,
											"end": 35120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35092,
											"end": 35120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35128,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33240,
											"end": 33241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33222,
											"end": 33230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33222,
											"end": 33230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33222,
											"end": 33237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33222,
											"end": 33237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33222,
											"end": 33241,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 33214,
											"end": 33270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33285,
											"end": 33294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33281,
											"end": 33644,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 33281,
											"end": 33644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33300,
											"end": 33301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33300,
											"end": 33319,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33281,
											"end": 33644,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33281,
											"end": 33644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 33281,
											"end": 33644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33383,
											"end": 33384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33349,
											"end": 33366,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33367,
											"end": 33375,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33375,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33376,
											"end": 33377,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33378,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33379,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 33341,
											"end": 33446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33465,
											"end": 33474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33481,
											"end": 33482,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33477,
											"end": 33478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 33477,
											"end": 33482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 33477,
											"end": 33482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33477,
											"end": 33482,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 33477,
											"end": 33482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33465,
											"end": 33482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33465,
											"end": 33482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33633,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 33461,
											"end": 33633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33488,
											"end": 33496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33488,
											"end": 33496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33488,
											"end": 33503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33488,
											"end": 33503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33484,
											"end": 33485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33484,
											"end": 33503,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33633,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 33461,
											"end": 33633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33561,
											"end": 33562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33563,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33545,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33545,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33546,
											"end": 33547,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33548,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 33529,
											"end": 33617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 33461,
											"end": 33633,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33633,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 33461,
											"end": 33633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 33321,
											"end": 33325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 33321,
											"end": 33325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33321,
											"end": 33325,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 33321,
											"end": 33325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33281,
											"end": 33644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 33281,
											"end": 33644,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33281,
											"end": 33644,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 33281,
											"end": 33644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33281,
											"end": 33644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33656,
											"end": 33670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 33656,
											"end": 33668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 33656,
											"end": 33670,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33656,
											"end": 33670,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 33656,
											"end": 33670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33705,
											"end": 33713,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33714,
											"end": 33724,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33705,
											"end": 33725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33736,
											"end": 33751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33754,
											"end": 33817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 33801,
											"end": 33805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33801,
											"end": 33816,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33801,
											"end": 33816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33801,
											"end": 33816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 33791,
											"end": 33795,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33754,
											"end": 33786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 33770,
											"end": 33785,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33770,
											"end": 33785,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33758,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33754,
											"end": 33765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33765,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 33754,
											"end": 33769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33754,
											"end": 33786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33754,
											"end": 33786,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 33754,
											"end": 33786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 33754,
											"end": 33790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33754,
											"end": 33796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33754,
											"end": 33796,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 33754,
											"end": 33796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 33754,
											"end": 33800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33817,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33754,
											"end": 33817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33754,
											"end": 33817,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 33754,
											"end": 33817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33736,
											"end": 33817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33736,
											"end": 33817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33869,
											"end": 33876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33841,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 33832,
											"end": 33851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33832,
											"end": 33851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33851,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 33860,
											"end": 33864,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 33832,
											"end": 33866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33832,
											"end": 33876,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33828,
											"end": 33949,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33828,
											"end": 33949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 33828,
											"end": 33949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33912,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 33903,
											"end": 33922,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33903,
											"end": 33922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33922,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 33931,
											"end": 33935,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 33903,
											"end": 33937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33893,
											"end": 33937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33893,
											"end": 33937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33828,
											"end": 33949,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 33828,
											"end": 33949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 34003,
											"end": 34010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 33984,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 33998,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33980,
											"end": 33998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 33998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 33980,
											"end": 34002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33980,
											"end": 34011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33980,
											"end": 34011,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 33980,
											"end": 34011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33959,
											"end": 33963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33959,
											"end": 33977,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33959,
											"end": 33977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33959,
											"end": 34011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33959,
											"end": 34011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33959,
											"end": 34011,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33959,
											"end": 34011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34022,
											"end": 34041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34044,
											"end": 34052,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34044,
											"end": 34052,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34044,
											"end": 34059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34044,
											"end": 34059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34022,
											"end": 34059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34022,
											"end": 34059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34074,
											"end": 34083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34070,
											"end": 34654,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 34070,
											"end": 34654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34093,
											"end": 34104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34089,
											"end": 34090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34089,
											"end": 34104,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34070,
											"end": 34654,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34070,
											"end": 34654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 34070,
											"end": 34654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34182,
											"end": 34183,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34178,
											"end": 34179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34164,
											"end": 34168,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34164,
											"end": 34175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34164,
											"end": 34175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34164,
											"end": 34175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34164,
											"end": 34179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 34164,
											"end": 34179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34164,
											"end": 34179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34164,
											"end": 34179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 34164,
											"end": 34179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34164,
											"end": 34179,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 34164,
											"end": 34179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34164,
											"end": 34183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 34164,
											"end": 34183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34164,
											"end": 34183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34164,
											"end": 34183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 34164,
											"end": 34183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34164,
											"end": 34183,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 34164,
											"end": 34183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34129,
											"end": 34146,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34147,
											"end": 34155,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34155,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34157,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34158,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34129,
											"end": 34159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34129,
											"end": 34184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34126,
											"end": 34446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 34126,
											"end": 34446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34275,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34276,
											"end": 34286,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34263,
											"end": 34287,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34307,
											"end": 34308,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34303,
											"end": 34304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34289,
											"end": 34293,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34289,
											"end": 34300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34289,
											"end": 34300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34289,
											"end": 34300,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34289,
											"end": 34304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 34289,
											"end": 34304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34289,
											"end": 34304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34289,
											"end": 34304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 34289,
											"end": 34304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34289,
											"end": 34304,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 34289,
											"end": 34304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34289,
											"end": 34308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 34289,
											"end": 34308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34289,
											"end": 34308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34289,
											"end": 34308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 34289,
											"end": 34308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34289,
											"end": 34308,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 34289,
											"end": 34308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34263,
											"end": 34310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34216,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34217,
											"end": 34227,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34204,
											"end": 34228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34229,
											"end": 34246,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34247,
											"end": 34255,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 34247,
											"end": 34255,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 34256,
											"end": 34257,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34247,
											"end": 34258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34204,
											"end": 34260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34204,
											"end": 34260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34204,
											"end": 34260,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34310,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34416,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34417,
											"end": 34425,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34417,
											"end": 34425,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34426,
											"end": 34427,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34417,
											"end": 34428,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34347,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 34330,
											"end": 34396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34348,
											"end": 34360,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34361,
											"end": 34371,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34348,
											"end": 34372,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34392,
											"end": 34393,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34388,
											"end": 34389,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34374,
											"end": 34378,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 34374,
											"end": 34385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34374,
											"end": 34385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34374,
											"end": 34385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34374,
											"end": 34389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 34374,
											"end": 34389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34374,
											"end": 34389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34374,
											"end": 34389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 34374,
											"end": 34389,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34374,
											"end": 34389,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 34374,
											"end": 34389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34374,
											"end": 34393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 34374,
											"end": 34393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34374,
											"end": 34393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34374,
											"end": 34393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 34374,
											"end": 34393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34374,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 34374,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34330,
											"end": 34396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34330,
											"end": 34396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34330,
											"end": 34396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34429,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34126,
											"end": 34446,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 34126,
											"end": 34446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34467,
											"end": 34484,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 34467,
											"end": 34497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34485,
											"end": 34493,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34493,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34494,
											"end": 34495,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34496,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34467,
											"end": 34497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34467,
											"end": 34497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34467,
											"end": 34497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34467,
											"end": 34497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34467,
											"end": 34497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34467,
											"end": 34497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34467,
											"end": 34497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34467,
											"end": 34497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34467,
											"end": 34497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34467,
											"end": 34497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34467,
											"end": 34497,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34460,
											"end": 34497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34460,
											"end": 34497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34460,
											"end": 34497,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34531,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34532,
											"end": 34542,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34519,
											"end": 34543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34563,
											"end": 34564,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34559,
											"end": 34560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34545,
											"end": 34549,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34545,
											"end": 34556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34545,
											"end": 34556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34545,
											"end": 34556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34545,
											"end": 34560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 34545,
											"end": 34560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34545,
											"end": 34560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34545,
											"end": 34560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 34545,
											"end": 34560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34545,
											"end": 34560,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 34545,
											"end": 34560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34545,
											"end": 34564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 34545,
											"end": 34564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34545,
											"end": 34564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34545,
											"end": 34564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 34545,
											"end": 34564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34545,
											"end": 34564,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 34545,
											"end": 34564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34519,
											"end": 34566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34519,
											"end": 34566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34519,
											"end": 34566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34519,
											"end": 34566,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34512,
											"end": 34566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34566,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34589,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1098"
										},
										{
											"begin": 34581,
											"end": 34602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34581,
											"end": 34602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34602,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 34611,
											"end": 34615,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34618,
											"end": 34628,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34638,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34638,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 34639,
											"end": 34640,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34630,
											"end": 34641,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 34106,
											"end": 34110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 34106,
											"end": 34110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34106,
											"end": 34110,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 34106,
											"end": 34110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34070,
											"end": 34654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 34070,
											"end": 34654,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34070,
											"end": 34654,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 34070,
											"end": 34654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34070,
											"end": 34654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34684,
											"end": 34718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 34706,
											"end": 34717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34684,
											"end": 34701,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34684,
											"end": 34701,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34684,
											"end": 34705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 34684,
											"end": 34705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34684,
											"end": 34718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34684,
											"end": 34718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34684,
											"end": 34718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34684,
											"end": 34718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34684,
											"end": 34718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34684,
											"end": 34718,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 34684,
											"end": 34718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34664,
											"end": 34681,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34664,
											"end": 34718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34664,
											"end": 34718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34664,
											"end": 34718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34664,
											"end": 34718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34743,
											"end": 34771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 34759,
											"end": 34770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34743,
											"end": 34747,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34743,
											"end": 34754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34743,
											"end": 34754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34743,
											"end": 34754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34743,
											"end": 34758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 34743,
											"end": 34758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34743,
											"end": 34771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34743,
											"end": 34771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34743,
											"end": 34771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34743,
											"end": 34771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34743,
											"end": 34771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34743,
											"end": 34771,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 34743,
											"end": 34771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34729,
											"end": 34733,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34729,
											"end": 34740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34729,
											"end": 34740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34729,
											"end": 34771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34729,
											"end": 34771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34729,
											"end": 34771,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34729,
											"end": 34771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 34837,
											"end": 34841,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34800,
											"end": 34832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 34816,
											"end": 34831,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34816,
											"end": 34831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34804,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34800,
											"end": 34811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 34800,
											"end": 34815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34800,
											"end": 34832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34800,
											"end": 34832,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 34800,
											"end": 34832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 34800,
											"end": 34836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34842,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34800,
											"end": 34842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34800,
											"end": 34842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34800,
											"end": 34842,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 34800,
											"end": 34842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34782,
											"end": 34786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34782,
											"end": 34797,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34782,
											"end": 34797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34782,
											"end": 34842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34782,
											"end": 34842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34782,
											"end": 34842,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34782,
											"end": 34842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "PUSH",
											"source": 0,
											"value": "80CC10BF7E52583AE0A17D8DD6AB5005573B17A08091A091AF1A81205A675C91"
										},
										{
											"begin": 34867,
											"end": 34877,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34879,
											"end": 34887,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34879,
											"end": 34887,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34858,
											"end": 34888,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 33203,
											"end": 34896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33203,
											"end": 34896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33203,
											"end": 34896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 34896,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 5131,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5929,
											"end": 5930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5909,
											"end": 5917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5985,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 6004,
											"end": 6012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5985,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 5985,
											"end": 6013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5985,
											"end": 6013,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 5985,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30751,
											"end": 31629,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 30751,
											"end": 31629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30829,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30814,
											"end": 30829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30798,
											"end": 30810,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30798,
											"end": 30829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30794,
											"end": 30864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 30794,
											"end": 30864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30846,
											"end": 30853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 30846,
											"end": 30853,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30794,
											"end": 30864,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 30794,
											"end": 30864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30899,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30878,
											"end": 30895,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30878,
											"end": 30895,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30878,
											"end": 30900,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30980,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 30874,
											"end": 30980,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30935,
											"end": 30947,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30917,
											"end": 30932,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30917,
											"end": 30947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30917,
											"end": 30947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30917,
											"end": 30947,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30917,
											"end": 30947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 30969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 30962,
											"end": 30969,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30980,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 30874,
											"end": 30980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31011,
											"end": 31055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 31025,
											"end": 31040,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31025,
											"end": 31040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31042,
											"end": 31054,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31011,
											"end": 31024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 31011,
											"end": 31055,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31011,
											"end": 31055,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 31011,
											"end": 31055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31066,
											"end": 31080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31083,
											"end": 31113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 31098,
											"end": 31112,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31098,
											"end": 31112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31083,
											"end": 31093,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31083,
											"end": 31097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 31083,
											"end": 31097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31083,
											"end": 31113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31083,
											"end": 31113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31083,
											"end": 31113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31083,
											"end": 31113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31083,
											"end": 31113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31083,
											"end": 31113,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 31083,
											"end": 31113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31066,
											"end": 31113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31066,
											"end": 31113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31146,
											"end": 31147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31128,
											"end": 31142,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31128,
											"end": 31142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31128,
											"end": 31147,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31124,
											"end": 31227,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31124,
											"end": 31227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 31124,
											"end": 31227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31182,
											"end": 31194,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31179,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31164,
											"end": 31194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31194,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31209,
											"end": 31216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31209,
											"end": 31216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31209,
											"end": 31216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 31209,
											"end": 31216,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31124,
											"end": 31227,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 31124,
											"end": 31227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31258,
											"end": 31264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31241,
											"end": 31255,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31241,
											"end": 31255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31241,
											"end": 31264,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 31237,
											"end": 31581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31299,
											"end": 31367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 31319,
											"end": 31366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 31348,
											"end": 31365,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31348,
											"end": 31365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 31338,
											"end": 31342,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31319,
											"end": 31333,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31319,
											"end": 31333,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 31319,
											"end": 31337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31319,
											"end": 31343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31319,
											"end": 31343,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 31319,
											"end": 31343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 31319,
											"end": 31347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31366,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31319,
											"end": 31366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31319,
											"end": 31366,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 31319,
											"end": 31366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31299,
											"end": 31314,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31299,
											"end": 31314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31299,
											"end": 31318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 31299,
											"end": 31318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31299,
											"end": 31367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31299,
											"end": 31367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31299,
											"end": 31367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31299,
											"end": 31367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31299,
											"end": 31367,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31299,
											"end": 31367,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 31299,
											"end": 31367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31281,
											"end": 31296,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31281,
											"end": 31367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31281,
											"end": 31367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31281,
											"end": 31367,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31281,
											"end": 31367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31399,
											"end": 31400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31382,
											"end": 31396,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31382,
											"end": 31400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31400,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31382,
											"end": 31400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 31237,
											"end": 31581,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31581,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 31237,
											"end": 31581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31450,
											"end": 31476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 31469,
											"end": 31475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31450,
											"end": 31464,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31450,
											"end": 31464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31450,
											"end": 31468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 31450,
											"end": 31468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31450,
											"end": 31476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31450,
											"end": 31476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31450,
											"end": 31476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31450,
											"end": 31476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31450,
											"end": 31476,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31450,
											"end": 31476,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 31450,
											"end": 31476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31433,
											"end": 31447,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31433,
											"end": 31476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31433,
											"end": 31476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31433,
											"end": 31476,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31433,
											"end": 31476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31509,
											"end": 31569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 31529,
											"end": 31568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 31550,
											"end": 31567,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31550,
											"end": 31567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 31540,
											"end": 31544,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31529,
											"end": 31535,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 31529,
											"end": 31539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31529,
											"end": 31545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31529,
											"end": 31545,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 31529,
											"end": 31545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 31529,
											"end": 31549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31529,
											"end": 31568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31529,
											"end": 31568,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 31529,
											"end": 31568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31509,
											"end": 31524,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31509,
											"end": 31524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31509,
											"end": 31528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 31509,
											"end": 31528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31509,
											"end": 31569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31509,
											"end": 31569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31509,
											"end": 31569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31509,
											"end": 31569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31509,
											"end": 31569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31509,
											"end": 31569,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 31509,
											"end": 31569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31491,
											"end": 31506,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31491,
											"end": 31569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31491,
											"end": 31569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31491,
											"end": 31569,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31491,
											"end": 31569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31581,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 31237,
											"end": 31581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31609,
											"end": 31621,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31591,
											"end": 31621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31591,
											"end": 31621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31591,
											"end": 31621,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31591,
											"end": 31621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 31629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 31629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30751,
											"end": 31629,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 30751,
											"end": 31629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30751,
											"end": 31629,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9756,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9787,
											"end": 9788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9783,
											"end": 9784,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9776,
											"end": 9788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9776,
											"end": 9788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10155,
											"end": 10162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10182,
											"end": 10183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9399,
											"end": 9406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9430,
											"end": 9431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9427,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9018,
											"end": 9025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9049,
											"end": 9050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9038,
											"end": 9050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9038,
											"end": 9050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3751,
											"end": 3849,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3751,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3841,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3824,
											"end": 3841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3824,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3849,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13580,
											"end": 13607,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 13580,
											"end": 13607,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13580,
											"end": 13607,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13609,
											"end": 13613,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13615,
											"end": 13617,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 13530,
											"end": 13626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13530,
											"end": 13626,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 13530,
											"end": 13626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35140,
											"end": 35693,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35140,
											"end": 35693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35218,
											"end": 35239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35250,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35251,
											"end": 35256,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35218,
											"end": 35257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35218,
											"end": 35257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35282,
											"end": 35297,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35282,
											"end": 35297,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35327,
											"end": 35342,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35327,
											"end": 35342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35324,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 35312,
											"end": 35368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35367,
											"end": 35368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35346,
											"end": 35363,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 35346,
											"end": 35363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35368,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 35312,
											"end": 35368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35308,
											"end": 35593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35308,
											"end": 35593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 35308,
											"end": 35593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35385,
											"end": 35403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35406,
											"end": 35450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 35420,
											"end": 35435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35420,
											"end": 35435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35437,
											"end": 35449,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 35406,
											"end": 35419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 35406,
											"end": 35450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35406,
											"end": 35450,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 35406,
											"end": 35450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35385,
											"end": 35450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35385,
											"end": 35450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35465,
											"end": 35479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35482,
											"end": 35512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 35497,
											"end": 35511,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35497,
											"end": 35511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35482,
											"end": 35492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35482,
											"end": 35496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 35482,
											"end": 35496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35482,
											"end": 35512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35482,
											"end": 35512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35482,
											"end": 35512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35482,
											"end": 35512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35482,
											"end": 35512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35482,
											"end": 35512,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 35482,
											"end": 35512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35465,
											"end": 35512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35465,
											"end": 35512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35533,
											"end": 35581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 35541,
											"end": 35580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 35562,
											"end": 35579,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 35562,
											"end": 35579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35541,
											"end": 35557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 35552,
											"end": 35556,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35541,
											"end": 35547,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35541,
											"end": 35551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 35541,
											"end": 35551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35541,
											"end": 35557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35541,
											"end": 35557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35541,
											"end": 35557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35541,
											"end": 35557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35541,
											"end": 35557,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35541,
											"end": 35557,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 35541,
											"end": 35557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35541,
											"end": 35561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 35541,
											"end": 35561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35541,
											"end": 35580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35541,
											"end": 35580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35541,
											"end": 35580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35541,
											"end": 35580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35541,
											"end": 35580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35541,
											"end": 35580,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 35541,
											"end": 35580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35533,
											"end": 35536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35533,
											"end": 35540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 35533,
											"end": 35540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35533,
											"end": 35581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35533,
											"end": 35581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35533,
											"end": 35581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35533,
											"end": 35581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35533,
											"end": 35581,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35533,
											"end": 35581,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 35533,
											"end": 35581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35527,
											"end": 35581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35527,
											"end": 35581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35308,
											"end": 35593,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 35308,
											"end": 35593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 35666,
											"end": 35670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35666,
											"end": 35684,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35666,
											"end": 35684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35666,
											"end": 35684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 35645,
											"end": 35649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35645,
											"end": 35660,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35645,
											"end": 35660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35645,
											"end": 35660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 35635,
											"end": 35639,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35610,
											"end": 35630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 35626,
											"end": 35629,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35614,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35610,
											"end": 35621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35621,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 35610,
											"end": 35625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35610,
											"end": 35630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35610,
											"end": 35630,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 35610,
											"end": 35630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 35610,
											"end": 35634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35610,
											"end": 35640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35610,
											"end": 35640,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 35610,
											"end": 35640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 35610,
											"end": 35644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35610,
											"end": 35661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35610,
											"end": 35661,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 35610,
											"end": 35661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 35610,
											"end": 35665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35610,
											"end": 35685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35610,
											"end": 35685,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 35610,
											"end": 35685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35603,
											"end": 35685,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35603,
											"end": 35685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35603,
											"end": 35685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35603,
											"end": 35685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35140,
											"end": 35693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35140,
											"end": 35693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35140,
											"end": 35693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35140,
											"end": 35693,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13244,
											"end": 13421,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 13244,
											"end": 13421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13327,
											"end": 13413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 13347,
											"end": 13352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13377,
											"end": 13400,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 13377,
											"end": 13400,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13377,
											"end": 13400,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13402,
											"end": 13404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13406,
											"end": 13411,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13327,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 13327,
											"end": 13413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13327,
											"end": 13413,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 13327,
											"end": 13413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13421,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6181,
											"end": 6372,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 6181,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6300,
											"end": 6308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6244,
											"end": 6372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6181,
											"end": 6372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6181,
											"end": 6372,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15549,
											"end": 16310,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 15549,
											"end": 16310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 15996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 16027,
											"end": 16031,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16012,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15999,
											"end": 16026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 15999,
											"end": 16026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 16068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 16068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16083,
											"end": 16093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16083,
											"end": 16100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16083,
											"end": 16104,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16079,
											"end": 16303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16079,
											"end": 16303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 16079,
											"end": 16303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16079,
											"end": 16303,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 16079,
											"end": 16303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15619,
											"end": 16310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 16310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 16310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 16310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20172,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20204,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 20227,
											"end": 20233,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20235,
											"end": 20239,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20241,
											"end": 20242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20244,
											"end": 20256,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20204,
											"end": 20226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 20204,
											"end": 20257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20204,
											"end": 20257,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 20204,
											"end": 20257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20197,
											"end": 20257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20197,
											"end": 20257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21576,
											"end": 21588,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21609,
											"end": 21627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 21620,
											"end": 21626,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21609,
											"end": 21619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 21609,
											"end": 21627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21609,
											"end": 21627,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 21609,
											"end": 21627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21735,
											"end": 21747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21749,
											"end": 21772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21782,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21787,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21776,
											"end": 21787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21796,
											"end": 21804,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21807,
											"end": 21811,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21734,
											"end": 21812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21734,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21734,
											"end": 21812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21734,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21823,
											"end": 22418,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21823,
											"end": 22418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 21823,
											"end": 22418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21858,
											"end": 21868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21851,
											"end": 21868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21851,
											"end": 21868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21851,
											"end": 21868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21851,
											"end": 21868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21851,
											"end": 21868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 21851,
											"end": 21868,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21823,
											"end": 22418,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 21823,
											"end": 22418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21992,
											"end": 21993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21972,
											"end": 21982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 21989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 21993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21968,
											"end": 22407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21968,
											"end": 22407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 21968,
											"end": 22407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22229,
											"end": 22246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22283,
											"end": 22293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22279,
											"end": 22281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22275,
											"end": 22294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22268,
											"end": 22312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21968,
											"end": 22407,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 21968,
											"end": 22407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22378,
											"end": 22390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16954,
											"end": 17573,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 16954,
											"end": 17573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17014,
											"end": 17018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17276,
											"end": 17292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17303,
											"end": 17322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17325,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 17303,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17303,
											"end": 17391,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17303,
											"end": 17391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17303,
											"end": 17391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17482,
											"end": 17502,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 17470,
											"end": 17502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17470,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17534,
											"end": 17545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17545,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17561,
											"end": 17564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17549,
											"end": 17564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17564,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17564,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17514,
											"end": 17565,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17514,
											"end": 17565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17514,
											"end": 17565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17514,
											"end": 17565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16954,
											"end": 17573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16954,
											"end": 17573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16954,
											"end": 17573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16954,
											"end": 17573,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 234,
											"end": 247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 225,
											"end": 247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 225,
											"end": 247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 318,
											"end": 886,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 318,
											"end": 886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 391,
											"end": 399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 444,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 436,
											"end": 442,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 432,
											"end": 449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 428,
											"end": 455,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 418,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 418,
											"end": 540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 459,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 459,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 459,
											"end": 538,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 459,
											"end": 538,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 459,
											"end": 538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 418,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 418,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 559,
											"end": 579,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 549,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 549,
											"end": 579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 591,
											"end": 621,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 588,
											"end": 705,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 588,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 588,
											"end": 705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 624,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 624,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 624,
											"end": 703,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 624,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 588,
											"end": 705,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 588,
											"end": 705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 738,
											"end": 742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 736,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 726,
											"end": 743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 714,
											"end": 743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 784,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 776,
											"end": 782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 789,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 762,
											"end": 770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 758,
											"end": 790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 755,
											"end": 796,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 752,
											"end": 880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 752,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 752,
											"end": 880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 799,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 799,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 799,
											"end": 878,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 878,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 799,
											"end": 878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 752,
											"end": 880,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 752,
											"end": 880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 318,
											"end": 886,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 318,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 886,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 318,
											"end": 886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 318,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 886,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 946,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 971,
											"end": 984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 962,
											"end": 984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 962,
											"end": 984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 1017,
											"end": 1022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 993,
											"end": 1023,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 993,
											"end": 1023,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 993,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1126,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 1135,
											"end": 1168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1135,
											"end": 1168,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 1135,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 1284,
											"end": 1317,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1284,
											"end": 1317,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 1284,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1440,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 1633,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1622,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 1588,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 1588,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1781,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1786,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1870,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 1751,
											"end": 1870,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 1789,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 1789,
											"end": 1868,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1789,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 1789,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 1751,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 1987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 1934,
											"end": 1998,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1998,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 1934,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 2008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2150,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2162,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2251,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 2132,
											"end": 2251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 2132,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2321,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2366,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2367,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 2334,
											"end": 2451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 2370,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 2370,
											"end": 2449,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2449,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 2370,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2451,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 2334,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 2555,
											"end": 2562,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 2483,
											"end": 2563,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2563,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 2483,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2690,
											"end": 2699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2688,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2700,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2705,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2789,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 2670,
											"end": 2789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 2708,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 2708,
											"end": 2787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2708,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 2708,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 2670,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 2906,
											"end": 2913,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 2853,
											"end": 2914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2853,
											"end": 2914,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 2853,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3033,
											"end": 3042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3031,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3043,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3048,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 3241,
											"end": 3248,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3230,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3217,
											"end": 3239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3377,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3389,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3362,
											"end": 3394,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3478,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 3359,
											"end": 3478,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 3397,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 3397,
											"end": 3476,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3397,
											"end": 3476,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 3397,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3478,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 3359,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3587,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 3542,
											"end": 3606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3542,
											"end": 3606,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 3542,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3740,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3725,
											"end": 3757,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 3841,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 3722,
											"end": 3841,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 3760,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 3760,
											"end": 3839,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3760,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 3760,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 3841,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 3722,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3905,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 3950,
											"end": 3957,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 3905,
											"end": 3958,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3905,
											"end": 3958,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 3905,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3958,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4033,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 4078,
											"end": 4085,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4067,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4033,
											"end": 4086,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4033,
											"end": 4086,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 4033,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4086,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4109,
											"end": 4288,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 4109,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 4241,
											"end": 4244,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 4199,
											"end": 4245,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4199,
											"end": 4245,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 4199,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4272,
											"end": 4275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4288,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4288,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4294,
											"end": 4412,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 4294,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 4399,
											"end": 4404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 4381,
											"end": 4405,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4381,
											"end": 4405,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 4381,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4376,
											"end": 4379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4412,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4448,
											"end": 4985,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 4448,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4576,
											"end": 4579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 4676,
											"end": 4682,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4674,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4597,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 4597,
											"end": 4683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4597,
											"end": 4683,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 4597,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4683,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4773,
											"name": "PUSH",
											"source": 1,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4774,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4858,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 4693,
											"end": 4858,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 4777,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 4777,
											"end": 4856,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4777,
											"end": 4856,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 4777,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4858,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 4693,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 4893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4894,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 4894,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 4894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 4940,
											"end": 4946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4938,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4933,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 4904,
											"end": 4947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4904,
											"end": 4947,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 4904,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4970,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 4979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 4979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4985,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4985,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5021,
											"end": 5753,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 5021,
											"end": 5753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5169,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 5217,
											"end": 5222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 5169,
											"end": 5223,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5169,
											"end": 5223,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 5169,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5316,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 5239,
											"end": 5325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5239,
											"end": 5325,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 5239,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5325,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 5399,
											"end": 5404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5459,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5728,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 5444,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5476,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5728,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 5444,
											"end": 5728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5552,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 5631,
											"end": 5634,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 5572,
											"end": 5635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5572,
											"end": 5635,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 5572,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5565,
											"end": 5635,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 5565,
											"end": 5635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 5711,
											"end": 5717,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 5658,
											"end": 5718,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5658,
											"end": 5718,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 5658,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5718,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5504,
											"end": 5728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5492,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5488,
											"end": 5489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 5444,
											"end": 5728,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5728,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 5444,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5747,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5021,
											"end": 5753,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5021,
											"end": 5753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5021,
											"end": 5753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5021,
											"end": 5753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5021,
											"end": 5753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5759,
											"end": 6132,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 5759,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5891,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 5923,
											"end": 5928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 5891,
											"end": 5929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5891,
											"end": 5929,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 5891,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 6026,
											"end": 6032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6024,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 5945,
											"end": 6033,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5945,
											"end": 6033,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 5945,
											"end": 6033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6033,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 6087,
											"end": 6093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6085,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6073,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6064,
											"end": 6080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 6042,
											"end": 6094,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6042,
											"end": 6094,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 6042,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6119,
											"end": 6125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6117,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6103,
											"end": 6126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6103,
											"end": 6126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5759,
											"end": 6132,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5759,
											"end": 6132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5759,
											"end": 6132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5759,
											"end": 6132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5759,
											"end": 6132,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6138,
											"end": 6297,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 6138,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 6284,
											"end": 6289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 6239,
											"end": 6290,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6239,
											"end": 6290,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 6239,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6297,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6303,
											"end": 6466,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 6303,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 6406,
											"end": 6459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6406,
											"end": 6459,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 6406,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6394,
											"end": 6460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6303,
											"end": 6466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6303,
											"end": 6466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6303,
											"end": 6466,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6472,
											"end": 6836,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 6472,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 6563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6588,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 6621,
											"end": 6626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 6588,
											"end": 6627,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6588,
											"end": 6627,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 6588,
											"end": 6627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 6707,
											"end": 6713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 6643,
											"end": 6714,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6643,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 6643,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6636,
											"end": 6714,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6636,
											"end": 6714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 6768,
											"end": 6774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6763,
											"end": 6766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6756,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6749,
											"end": 6754,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 6822,
											"end": 6828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 6800,
											"end": 6829,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6800,
											"end": 6829,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 6800,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6798,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6836,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6836,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6842,
											"end": 7208,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 6842,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 6987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 7069,
											"end": 7071,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7064,
											"end": 7067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 7005,
											"end": 7072,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7005,
											"end": 7072,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 7005,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6998,
											"end": 7072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6998,
											"end": 7072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7081,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 7170,
											"end": 7173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7081,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 7081,
											"end": 7174,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7081,
											"end": 7174,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 7081,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 7201,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7194,
											"end": 7197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7190,
											"end": 7202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7183,
											"end": 7202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7183,
											"end": 7202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 7208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 7208,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7214,
											"end": 7580,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 7214,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7356,
											"end": 7359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 7441,
											"end": 7443,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 7436,
											"end": 7439,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 7377,
											"end": 7444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7377,
											"end": 7444,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 7377,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 7542,
											"end": 7545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 7453,
											"end": 7546,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7453,
											"end": 7546,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 7453,
											"end": 7546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7571,
											"end": 7573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7566,
											"end": 7569,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7580,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7586,
											"end": 7952,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 7586,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7749,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 7813,
											"end": 7815,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7808,
											"end": 7811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7749,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 7749,
											"end": 7816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7749,
											"end": 7816,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 7749,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7825,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 7914,
											"end": 7917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7825,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 7825,
											"end": 7918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7825,
											"end": 7918,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 7825,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7943,
											"end": 7945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7938,
											"end": 7941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 7946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7927,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7927,
											"end": 7946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7952,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7952,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7958,
											"end": 8324,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 7958,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8100,
											"end": 8103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8121,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 8185,
											"end": 8187,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 8180,
											"end": 8183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 8121,
											"end": 8188,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8121,
											"end": 8188,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 8121,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 8286,
											"end": 8289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 8197,
											"end": 8290,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8197,
											"end": 8290,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 8197,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8315,
											"end": 8317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8310,
											"end": 8313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8306,
											"end": 8318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8299,
											"end": 8318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8299,
											"end": 8318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 8324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 8324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 8324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 8324,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8330,
											"end": 8696,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 8330,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8472,
											"end": 8475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8493,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 8557,
											"end": 8559,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8552,
											"end": 8555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 8493,
											"end": 8560,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8493,
											"end": 8560,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 8493,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8569,
											"end": 8662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 8658,
											"end": 8661,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8569,
											"end": 8662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 8569,
											"end": 8662,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8569,
											"end": 8662,
											"name": "tag",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 8569,
											"end": 8662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8687,
											"end": 8689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8682,
											"end": 8685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8671,
											"end": 8690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8671,
											"end": 8690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8330,
											"end": 8696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8330,
											"end": 8696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8330,
											"end": 8696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8330,
											"end": 8696,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8702,
											"end": 9068,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 8702,
											"end": 9068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8844,
											"end": 8847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8865,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 8929,
											"end": 8931,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8924,
											"end": 8927,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 8865,
											"end": 8932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8865,
											"end": 8932,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 8865,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 9030,
											"end": 9033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 8941,
											"end": 9034,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9034,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 8941,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9059,
											"end": 9061,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9054,
											"end": 9057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9050,
											"end": 9062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9043,
											"end": 9062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9043,
											"end": 9062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 9068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 9068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 9068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 9068,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9074,
											"end": 9440,
											"name": "tag",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 9074,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9216,
											"end": 9219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9237,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 9301,
											"end": 9303,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 9296,
											"end": 9299,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9237,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 9237,
											"end": 9304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9237,
											"end": 9304,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 9237,
											"end": 9304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9313,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 9402,
											"end": 9405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9313,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 9313,
											"end": 9406,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9313,
											"end": 9406,
											"name": "tag",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 9313,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9426,
											"end": 9429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9440,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9446,
											"end": 9812,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 9446,
											"end": 9812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9588,
											"end": 9591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9609,
											"end": 9676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 9673,
											"end": 9675,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 9668,
											"end": 9671,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9609,
											"end": 9676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 9609,
											"end": 9676,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9609,
											"end": 9676,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 9609,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9602,
											"end": 9676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9602,
											"end": 9676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 9774,
											"end": 9777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 9685,
											"end": 9778,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9685,
											"end": 9778,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 9685,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9798,
											"end": 9801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9787,
											"end": 9806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9787,
											"end": 9806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9446,
											"end": 9812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9446,
											"end": 9812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9446,
											"end": 9812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9446,
											"end": 9812,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9818,
											"end": 10184,
											"name": "tag",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 9818,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9960,
											"end": 9963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9981,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 10045,
											"end": 10047,
											"name": "PUSH",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 10040,
											"end": 10043,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 9981,
											"end": 10048,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9981,
											"end": 10048,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 9981,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 10146,
											"end": 10149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 10057,
											"end": 10150,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10057,
											"end": 10150,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 10057,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10175,
											"end": 10177,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10170,
											"end": 10173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10166,
											"end": 10178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9818,
											"end": 10184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9818,
											"end": 10184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9818,
											"end": 10184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9818,
											"end": 10184,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10190,
											"end": 10298,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 10190,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 10285,
											"end": 10290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 10267,
											"end": 10291,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10267,
											"end": 10291,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 10267,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10298,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10304,
											"end": 10422,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 10304,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10391,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 10409,
											"end": 10414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10391,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 10391,
											"end": 10415,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10391,
											"end": 10415,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 10391,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10386,
											"end": 10389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10379,
											"end": 10416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10422,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10428,
											"end": 10699,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10428,
											"end": 10699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10580,
											"end": 10673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 10669,
											"end": 10672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10660,
											"end": 10666,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 10580,
											"end": 10673,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10580,
											"end": 10673,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 10580,
											"end": 10673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10573,
											"end": 10673,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10573,
											"end": 10673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10690,
											"end": 10693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10683,
											"end": 10693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10683,
											"end": 10693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10699,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10705,
											"end": 10927,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10705,
											"end": 10927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10798,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10836,
											"end": 10838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10825,
											"end": 10834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10821,
											"end": 10839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10813,
											"end": 10839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10813,
											"end": 10839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 10917,
											"end": 10918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10906,
											"end": 10915,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10902,
											"end": 10919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10893,
											"end": 10899,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 10849,
											"end": 10920,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10849,
											"end": 10920,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 10849,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10927,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10927,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10933,
											"end": 11375,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10933,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11082,
											"end": 11086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11120,
											"end": 11122,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11109,
											"end": 11118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11105,
											"end": 11123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11097,
											"end": 11123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11097,
											"end": 11123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11133,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 11201,
											"end": 11202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11190,
											"end": 11199,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11186,
											"end": 11203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11177,
											"end": 11183,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11133,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 11133,
											"end": 11204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11133,
											"end": 11204,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 11133,
											"end": 11204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 11282,
											"end": 11284,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11271,
											"end": 11280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11264,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 11214,
											"end": 11286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11214,
											"end": 11286,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 11214,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 11364,
											"end": 11366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11353,
											"end": 11362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11349,
											"end": 11367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11340,
											"end": 11346,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 11296,
											"end": 11368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11296,
											"end": 11368,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 11296,
											"end": 11368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 11375,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 11375,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 11375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 11375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 11375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 11375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 11375,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11381,
											"end": 11884,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 11381,
											"end": 11884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11562,
											"end": 11566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11600,
											"end": 11602,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11589,
											"end": 11598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11577,
											"end": 11603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11577,
											"end": 11603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11613,
											"end": 11684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 11681,
											"end": 11682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11670,
											"end": 11679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11666,
											"end": 11683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11657,
											"end": 11663,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11613,
											"end": 11684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 11613,
											"end": 11684,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11613,
											"end": 11684,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 11613,
											"end": 11684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11731,
											"end": 11740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11725,
											"end": 11729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11741,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11718,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11705,
											"end": 11714,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11701,
											"end": 11719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11759,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 11872,
											"end": 11876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11863,
											"end": 11869,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11855,
											"end": 11861,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11759,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 11759,
											"end": 11877,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11759,
											"end": 11877,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 11759,
											"end": 11877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11884,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11884,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11890,
											"end": 12222,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 11890,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12011,
											"end": 12015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12049,
											"end": 12051,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12026,
											"end": 12052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12026,
											"end": 12052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 12130,
											"end": 12131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12119,
											"end": 12128,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12115,
											"end": 12132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12112,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 12062,
											"end": 12133,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12062,
											"end": 12133,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 12062,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12143,
											"end": 12215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 12211,
											"end": 12213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12200,
											"end": 12209,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12196,
											"end": 12214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12187,
											"end": 12193,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12143,
											"end": 12215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 12143,
											"end": 12215,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12143,
											"end": 12215,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 12143,
											"end": 12215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11890,
											"end": 12222,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11890,
											"end": 12222,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11890,
											"end": 12222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11890,
											"end": 12222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11890,
											"end": 12222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11890,
											"end": 12222,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12228,
											"end": 12670,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 12228,
											"end": 12670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12377,
											"end": 12381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12417,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12404,
											"end": 12413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12400,
											"end": 12418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12392,
											"end": 12418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12392,
											"end": 12418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12428,
											"end": 12499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 12496,
											"end": 12497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12485,
											"end": 12494,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12472,
											"end": 12478,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12428,
											"end": 12499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 12428,
											"end": 12499,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12428,
											"end": 12499,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 12428,
											"end": 12499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12509,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 12577,
											"end": 12579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12566,
											"end": 12575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12562,
											"end": 12580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12559,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12509,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 12509,
											"end": 12581,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12509,
											"end": 12581,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 12509,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12591,
											"end": 12663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 12659,
											"end": 12661,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12648,
											"end": 12657,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12644,
											"end": 12662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12635,
											"end": 12641,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12591,
											"end": 12663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 12591,
											"end": 12663,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12591,
											"end": 12663,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 12591,
											"end": 12663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12670,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12670,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12676,
											"end": 13049,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 12676,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12819,
											"end": 12823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12857,
											"end": 12859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12846,
											"end": 12855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12834,
											"end": 12860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12834,
											"end": 12860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12900,
											"end": 12904,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12896,
											"end": 12916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12892,
											"end": 12893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12881,
											"end": 12890,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12870,
											"end": 12917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 13037,
											"end": 13041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13028,
											"end": 13034,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 12934,
											"end": 13042,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12934,
											"end": 13042,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 12934,
											"end": 13042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12926,
											"end": 13042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12926,
											"end": 13042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12676,
											"end": 13049,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12676,
											"end": 13049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12676,
											"end": 13049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12676,
											"end": 13049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12676,
											"end": 13049,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13055,
											"end": 13305,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 13055,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13162,
											"end": 13166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13200,
											"end": 13202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13189,
											"end": 13198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13185,
											"end": 13203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13177,
											"end": 13203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13177,
											"end": 13203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13213,
											"end": 13298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 13295,
											"end": 13296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13284,
											"end": 13293,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13280,
											"end": 13297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13271,
											"end": 13277,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13213,
											"end": 13298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 13213,
											"end": 13298,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13213,
											"end": 13298,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 13213,
											"end": 13298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13305,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13305,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13311,
											"end": 13565,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13311,
											"end": 13565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13458,
											"end": 13460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13447,
											"end": 13456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13443,
											"end": 13461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13435,
											"end": 13461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13435,
											"end": 13461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13471,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 13555,
											"end": 13556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13544,
											"end": 13553,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13540,
											"end": 13557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13531,
											"end": 13537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13471,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 13471,
											"end": 13558,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13471,
											"end": 13558,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 13471,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13311,
											"end": 13565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13311,
											"end": 13565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13311,
											"end": 13565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13311,
											"end": 13565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13311,
											"end": 13565,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13571,
											"end": 13884,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 13571,
											"end": 13884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13722,
											"end": 13724,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13711,
											"end": 13720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13707,
											"end": 13725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13771,
											"end": 13780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13765,
											"end": 13769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 13781,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13757,
											"end": 13758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13746,
											"end": 13755,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13742,
											"end": 13759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13735,
											"end": 13782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13799,
											"end": 13877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 13872,
											"end": 13876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13863,
											"end": 13869,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13799,
											"end": 13877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 13799,
											"end": 13877,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13799,
											"end": 13877,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 13799,
											"end": 13877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 13877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 13877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13884,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13884,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13890,
											"end": 14309,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 13890,
											"end": 14309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14056,
											"end": 14060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14094,
											"end": 14096,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14083,
											"end": 14092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14079,
											"end": 14097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14137,
											"end": 14141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14133,
											"end": 14153,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14118,
											"end": 14127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14114,
											"end": 14131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14171,
											"end": 14302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 14297,
											"end": 14301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14171,
											"end": 14302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 14171,
											"end": 14302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14171,
											"end": 14302,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 14171,
											"end": 14302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14163,
											"end": 14302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14163,
											"end": 14302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13890,
											"end": 14309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13890,
											"end": 14309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13890,
											"end": 14309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13890,
											"end": 14309,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14315,
											"end": 14734,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 14315,
											"end": 14734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14519,
											"end": 14521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14508,
											"end": 14517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14504,
											"end": 14522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14496,
											"end": 14522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14496,
											"end": 14522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14568,
											"end": 14577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14562,
											"end": 14566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14558,
											"end": 14578,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14554,
											"end": 14555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14543,
											"end": 14552,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14539,
											"end": 14556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14532,
											"end": 14579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14596,
											"end": 14727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 14722,
											"end": 14726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14596,
											"end": 14727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 14596,
											"end": 14727,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14596,
											"end": 14727,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 14596,
											"end": 14727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14588,
											"end": 14727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14588,
											"end": 14727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14734,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14740,
											"end": 15159,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 14740,
											"end": 15159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14906,
											"end": 14910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14944,
											"end": 14946,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14933,
											"end": 14942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14929,
											"end": 14947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14921,
											"end": 14947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14921,
											"end": 14947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14993,
											"end": 15002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14987,
											"end": 14991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14983,
											"end": 15003,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14979,
											"end": 14980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 14977,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14964,
											"end": 14981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14957,
											"end": 15004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15021,
											"end": 15152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 15147,
											"end": 15151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15021,
											"end": 15152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 15021,
											"end": 15152,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15021,
											"end": 15152,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 15021,
											"end": 15152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 15159,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 15159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 15159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 15159,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15165,
											"end": 15584,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 15165,
											"end": 15584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15331,
											"end": 15335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15369,
											"end": 15371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15358,
											"end": 15367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15354,
											"end": 15372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15418,
											"end": 15427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15412,
											"end": 15416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15408,
											"end": 15428,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15405,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15393,
											"end": 15402,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15382,
											"end": 15429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15446,
											"end": 15577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 15572,
											"end": 15576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15446,
											"end": 15577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 15446,
											"end": 15577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15446,
											"end": 15577,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 15446,
											"end": 15577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15438,
											"end": 15577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15438,
											"end": 15577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15165,
											"end": 15584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15165,
											"end": 15584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15165,
											"end": 15584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15165,
											"end": 15584,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15590,
											"end": 16009,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 15590,
											"end": 16009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15756,
											"end": 15760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15783,
											"end": 15792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15779,
											"end": 15797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15771,
											"end": 15797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15771,
											"end": 15797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15843,
											"end": 15852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15837,
											"end": 15841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15833,
											"end": 15853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15829,
											"end": 15830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15818,
											"end": 15827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15807,
											"end": 15854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15871,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 15997,
											"end": 16001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15871,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 15871,
											"end": 16002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15871,
											"end": 16002,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 15871,
											"end": 16002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15863,
											"end": 16002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15863,
											"end": 16002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15590,
											"end": 16009,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15590,
											"end": 16009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15590,
											"end": 16009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15590,
											"end": 16009,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16015,
											"end": 16434,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 16015,
											"end": 16434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16219,
											"end": 16221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16208,
											"end": 16217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16204,
											"end": 16222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16196,
											"end": 16222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16196,
											"end": 16222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16268,
											"end": 16277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16262,
											"end": 16266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16258,
											"end": 16278,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16254,
											"end": 16255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16243,
											"end": 16252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16239,
											"end": 16256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16232,
											"end": 16279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16296,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 16422,
											"end": 16426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16296,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 16296,
											"end": 16427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16296,
											"end": 16427,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 16296,
											"end": 16427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16015,
											"end": 16434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16015,
											"end": 16434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16015,
											"end": 16434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16015,
											"end": 16434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16440,
											"end": 16859,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 16440,
											"end": 16859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16606,
											"end": 16610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16644,
											"end": 16646,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16633,
											"end": 16642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16629,
											"end": 16647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16621,
											"end": 16647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16621,
											"end": 16647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16693,
											"end": 16702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16687,
											"end": 16691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16683,
											"end": 16703,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16679,
											"end": 16680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16668,
											"end": 16677,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16664,
											"end": 16681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16657,
											"end": 16704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16721,
											"end": 16852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 16847,
											"end": 16851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16721,
											"end": 16852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 16721,
											"end": 16852,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16721,
											"end": 16852,
											"name": "tag",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 16721,
											"end": 16852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16713,
											"end": 16852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16713,
											"end": 16852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16440,
											"end": 16859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16440,
											"end": 16859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16440,
											"end": 16859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16440,
											"end": 16859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16865,
											"end": 17284,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 16865,
											"end": 17284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17031,
											"end": 17035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17069,
											"end": 17071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17058,
											"end": 17067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17054,
											"end": 17072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17046,
											"end": 17072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17046,
											"end": 17072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17118,
											"end": 17127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17112,
											"end": 17116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17108,
											"end": 17128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17104,
											"end": 17105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17093,
											"end": 17102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17089,
											"end": 17106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17082,
											"end": 17129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 17272,
											"end": 17276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 17146,
											"end": 17277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17146,
											"end": 17277,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 17146,
											"end": 17277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17138,
											"end": 17277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17138,
											"end": 17277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16865,
											"end": 17284,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16865,
											"end": 17284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16865,
											"end": 17284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16865,
											"end": 17284,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17290,
											"end": 17709,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 17290,
											"end": 17709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17494,
											"end": 17496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17483,
											"end": 17492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17479,
											"end": 17497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17471,
											"end": 17497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17471,
											"end": 17497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17537,
											"end": 17541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17533,
											"end": 17553,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17529,
											"end": 17530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17518,
											"end": 17527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17514,
											"end": 17531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17507,
											"end": 17554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17571,
											"end": 17702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 17697,
											"end": 17701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17571,
											"end": 17702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 17571,
											"end": 17702,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17571,
											"end": 17702,
											"name": "tag",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 17571,
											"end": 17702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17563,
											"end": 17702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17563,
											"end": 17702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17290,
											"end": 17709,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17290,
											"end": 17709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17290,
											"end": 17709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17290,
											"end": 17709,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17715,
											"end": 17937,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 17715,
											"end": 17937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17808,
											"end": 17812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17846,
											"end": 17848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17835,
											"end": 17844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 17849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17823,
											"end": 17849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17823,
											"end": 17849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17859,
											"end": 17930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 17927,
											"end": 17928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17916,
											"end": 17925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17912,
											"end": 17929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17903,
											"end": 17909,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17859,
											"end": 17930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 17859,
											"end": 17930,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17859,
											"end": 17930,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 17859,
											"end": 17930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17715,
											"end": 17937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17715,
											"end": 17937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17715,
											"end": 17937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17715,
											"end": 17937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17715,
											"end": 17937,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17943,
											"end": 18496,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 17943,
											"end": 18496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18120,
											"end": 18124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18158,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18147,
											"end": 18156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18143,
											"end": 18162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18135,
											"end": 18162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18135,
											"end": 18162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18172,
											"end": 18243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 18240,
											"end": 18241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18229,
											"end": 18238,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18225,
											"end": 18242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18216,
											"end": 18222,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18172,
											"end": 18243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 18172,
											"end": 18243,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18172,
											"end": 18243,
											"name": "tag",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 18172,
											"end": 18243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18253,
											"end": 18325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 18321,
											"end": 18323,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18310,
											"end": 18319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18306,
											"end": 18324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18297,
											"end": 18303,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18253,
											"end": 18325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 18253,
											"end": 18325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18253,
											"end": 18325,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 18253,
											"end": 18325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18335,
											"end": 18407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 18403,
											"end": 18405,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18392,
											"end": 18401,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18388,
											"end": 18406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18379,
											"end": 18385,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18335,
											"end": 18407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 18335,
											"end": 18407,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18335,
											"end": 18407,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 18335,
											"end": 18407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18417,
											"end": 18489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 18485,
											"end": 18487,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18474,
											"end": 18483,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18470,
											"end": 18488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18461,
											"end": 18467,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18417,
											"end": 18489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 18417,
											"end": 18489,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18417,
											"end": 18489,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 18417,
											"end": 18489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 18496,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 18496,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 18496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 18496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 18496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 18496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 18496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 18496,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18583,
											"end": 18715,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 18583,
											"end": 18715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18650,
											"end": 18654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18673,
											"end": 18676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18665,
											"end": 18676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18665,
											"end": 18676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18703,
											"end": 18707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18698,
											"end": 18701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18694,
											"end": 18708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18686,
											"end": 18708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18686,
											"end": 18708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18583,
											"end": 18715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18583,
											"end": 18715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18583,
											"end": 18715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18583,
											"end": 18715,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18721,
											"end": 18835,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 18721,
											"end": 18835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18788,
											"end": 18794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18822,
											"end": 18827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18816,
											"end": 18828,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18806,
											"end": 18828,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18806,
											"end": 18828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18721,
											"end": 18835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18721,
											"end": 18835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18721,
											"end": 18835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18721,
											"end": 18835,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18841,
											"end": 18939,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 18841,
											"end": 18939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18892,
											"end": 18898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18926,
											"end": 18931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18920,
											"end": 18932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18910,
											"end": 18932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18910,
											"end": 18932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18841,
											"end": 18939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18841,
											"end": 18939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18841,
											"end": 18939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18841,
											"end": 18939,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18945,
											"end": 19044,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 18945,
											"end": 19044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18997,
											"end": 19003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19031,
											"end": 19036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19025,
											"end": 19037,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19015,
											"end": 19037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19015,
											"end": 19037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18945,
											"end": 19044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18945,
											"end": 19044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18945,
											"end": 19044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18945,
											"end": 19044,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19050,
											"end": 19163,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 19050,
											"end": 19163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19120,
											"end": 19124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19152,
											"end": 19156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19147,
											"end": 19150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19143,
											"end": 19157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19135,
											"end": 19157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19135,
											"end": 19157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19050,
											"end": 19163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19050,
											"end": 19163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19050,
											"end": 19163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19050,
											"end": 19163,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19169,
											"end": 19353,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 19169,
											"end": 19353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19268,
											"end": 19279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19302,
											"end": 19308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19297,
											"end": 19300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19290,
											"end": 19309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19342,
											"end": 19346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19337,
											"end": 19340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19333,
											"end": 19347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19318,
											"end": 19347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19318,
											"end": 19347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19169,
											"end": 19353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19169,
											"end": 19353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19169,
											"end": 19353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19169,
											"end": 19353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19169,
											"end": 19353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19359,
											"end": 19506,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 19359,
											"end": 19506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19460,
											"end": 19471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19497,
											"end": 19500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19482,
											"end": 19500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19482,
											"end": 19500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19359,
											"end": 19506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19359,
											"end": 19506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19359,
											"end": 19506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19359,
											"end": 19506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19359,
											"end": 19506,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19512,
											"end": 19681,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 19512,
											"end": 19681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19596,
											"end": 19607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19630,
											"end": 19636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19625,
											"end": 19628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19618,
											"end": 19637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19670,
											"end": 19674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19665,
											"end": 19668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19661,
											"end": 19675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19646,
											"end": 19675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19646,
											"end": 19675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19512,
											"end": 19681,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19512,
											"end": 19681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19512,
											"end": 19681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19512,
											"end": 19681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19512,
											"end": 19681,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19687,
											"end": 19992,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 19687,
											"end": 19992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19727,
											"end": 19730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19746,
											"end": 19766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 19764,
											"end": 19765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19746,
											"end": 19766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 19746,
											"end": 19766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19746,
											"end": 19766,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 19746,
											"end": 19766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19741,
											"end": 19766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19741,
											"end": 19766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19780,
											"end": 19800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 19798,
											"end": 19799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19780,
											"end": 19800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 19780,
											"end": 19800,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19780,
											"end": 19800,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 19780,
											"end": 19800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19775,
											"end": 19800,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19775,
											"end": 19800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19934,
											"end": 19935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19866,
											"end": 19932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19862,
											"end": 19936,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19859,
											"end": 19860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19856,
											"end": 19937,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19853,
											"end": 19960,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19853,
											"end": 19960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 19853,
											"end": 19960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19940,
											"end": 19958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 19940,
											"end": 19958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 19940,
											"end": 19958,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19940,
											"end": 19958,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 19940,
											"end": 19958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19853,
											"end": 19960,
											"name": "tag",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 19853,
											"end": 19960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19984,
											"end": 19985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19981,
											"end": 19982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19977,
											"end": 19986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19970,
											"end": 19986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19970,
											"end": 19986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19992,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19992,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19992,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19998,
											"end": 20183,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 19998,
											"end": 20183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20038,
											"end": 20039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20055,
											"end": 20075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 20073,
											"end": 20074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20055,
											"end": 20075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 20055,
											"end": 20075,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20055,
											"end": 20075,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 20055,
											"end": 20075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20050,
											"end": 20075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20050,
											"end": 20075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20089,
											"end": 20109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 20107,
											"end": 20108,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20089,
											"end": 20109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 20089,
											"end": 20109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20089,
											"end": 20109,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 20089,
											"end": 20109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20084,
											"end": 20109,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20084,
											"end": 20109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20128,
											"end": 20129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20118,
											"end": 20153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 20118,
											"end": 20153,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "tag",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20118,
											"end": 20153,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 20118,
											"end": 20153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20175,
											"end": 20176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20172,
											"end": 20173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20168,
											"end": 20177,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 20163,
											"end": 20177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20163,
											"end": 20177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19998,
											"end": 20183,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19998,
											"end": 20183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19998,
											"end": 20183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19998,
											"end": 20183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19998,
											"end": 20183,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20189,
											"end": 20537,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 20189,
											"end": 20537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20229,
											"end": 20236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20252,
											"end": 20272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 20270,
											"end": 20271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20252,
											"end": 20272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 20252,
											"end": 20272,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20252,
											"end": 20272,
											"name": "tag",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 20252,
											"end": 20272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20247,
											"end": 20272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20247,
											"end": 20272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20286,
											"end": 20306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 20304,
											"end": 20305,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20286,
											"end": 20306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 20286,
											"end": 20306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20286,
											"end": 20306,
											"name": "tag",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 20286,
											"end": 20306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20281,
											"end": 20306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20281,
											"end": 20306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20474,
											"end": 20475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20406,
											"end": 20472,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20402,
											"end": 20476,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 20399,
											"end": 20400,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20396,
											"end": 20477,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20391,
											"end": 20392,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20384,
											"end": 20393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20377,
											"end": 20394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20373,
											"end": 20478,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20370,
											"end": 20501,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20370,
											"end": 20501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 20370,
											"end": 20501,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "tag",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20370,
											"end": 20501,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 20370,
											"end": 20501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20529,
											"end": 20530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20526,
											"end": 20527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20522,
											"end": 20531,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 20511,
											"end": 20531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20511,
											"end": 20531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20189,
											"end": 20537,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20189,
											"end": 20537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20189,
											"end": 20537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20189,
											"end": 20537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20189,
											"end": 20537,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20543,
											"end": 20734,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 20543,
											"end": 20734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20583,
											"end": 20587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20603,
											"end": 20623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 20621,
											"end": 20622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20603,
											"end": 20623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 20603,
											"end": 20623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20603,
											"end": 20623,
											"name": "tag",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 20603,
											"end": 20623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20598,
											"end": 20623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20598,
											"end": 20623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20637,
											"end": 20657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 20655,
											"end": 20656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20637,
											"end": 20657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 20637,
											"end": 20657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20637,
											"end": 20657,
											"name": "tag",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 20637,
											"end": 20657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20632,
											"end": 20657,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20632,
											"end": 20657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20676,
											"end": 20677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20673,
											"end": 20674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20670,
											"end": 20678,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20667,
											"end": 20701,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20667,
											"end": 20701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 20667,
											"end": 20701,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20681,
											"end": 20699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 20681,
											"end": 20699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 20681,
											"end": 20699,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20681,
											"end": 20699,
											"name": "tag",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 20681,
											"end": 20699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20667,
											"end": 20701,
											"name": "tag",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 20667,
											"end": 20701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20726,
											"end": 20727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20719,
											"end": 20728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20711,
											"end": 20728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20711,
											"end": 20728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20543,
											"end": 20734,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20543,
											"end": 20734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20543,
											"end": 20734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20543,
											"end": 20734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20543,
											"end": 20734,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20740,
											"end": 20836,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 20740,
											"end": 20836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20777,
											"end": 20784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 20824,
											"end": 20829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20795,
											"end": 20830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20795,
											"end": 20830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20740,
											"end": 20836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20740,
											"end": 20836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20740,
											"end": 20836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20740,
											"end": 20836,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20842,
											"end": 20932,
											"name": "tag",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 20842,
											"end": 20932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20876,
											"end": 20883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20919,
											"end": 20924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20912,
											"end": 20925,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20905,
											"end": 20926,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20894,
											"end": 20926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20894,
											"end": 20926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20842,
											"end": 20932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20842,
											"end": 20932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20842,
											"end": 20932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20842,
											"end": 20932,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20938,
											"end": 21064,
											"name": "tag",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 20938,
											"end": 21064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20975,
											"end": 20982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21015,
											"end": 21057,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21008,
											"end": 21013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21004,
											"end": 21058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20993,
											"end": 21058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20993,
											"end": 21058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20938,
											"end": 21064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20938,
											"end": 21064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20938,
											"end": 21064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20938,
											"end": 21064,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21070,
											"end": 21147,
											"name": "tag",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 21070,
											"end": 21147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21107,
											"end": 21114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21136,
											"end": 21141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21125,
											"end": 21141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21125,
											"end": 21141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21070,
											"end": 21147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21070,
											"end": 21147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21070,
											"end": 21147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21070,
											"end": 21147,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21153,
											"end": 21293,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 21153,
											"end": 21293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21217,
											"end": 21226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21250,
											"end": 21287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 21281,
											"end": 21286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21250,
											"end": 21287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 21250,
											"end": 21287,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21250,
											"end": 21287,
											"name": "tag",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 21250,
											"end": 21287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21237,
											"end": 21287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21237,
											"end": 21287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21153,
											"end": 21293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21153,
											"end": 21293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21153,
											"end": 21293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21153,
											"end": 21293,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21299,
											"end": 21441,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 21299,
											"end": 21441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21365,
											"end": 21374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21398,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 21429,
											"end": 21434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21398,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 21398,
											"end": 21435,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21398,
											"end": 21435,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 21398,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21385,
											"end": 21435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21385,
											"end": 21435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21299,
											"end": 21441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21299,
											"end": 21441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21299,
											"end": 21441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21299,
											"end": 21441,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21447,
											"end": 21573,
											"name": "tag",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 21447,
											"end": 21573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21497,
											"end": 21506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21530,
											"end": 21567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 21561,
											"end": 21566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21530,
											"end": 21567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 21530,
											"end": 21567,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21530,
											"end": 21567,
											"name": "tag",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 21530,
											"end": 21567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21517,
											"end": 21567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21517,
											"end": 21567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21447,
											"end": 21573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21447,
											"end": 21573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21447,
											"end": 21573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21447,
											"end": 21573,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21579,
											"end": 21692,
											"name": "tag",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 21579,
											"end": 21692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21629,
											"end": 21638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21662,
											"end": 21686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 21680,
											"end": 21685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21662,
											"end": 21686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 21662,
											"end": 21686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21662,
											"end": 21686,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 21662,
											"end": 21686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21649,
											"end": 21686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21649,
											"end": 21686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21579,
											"end": 21692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21579,
											"end": 21692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21579,
											"end": 21692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21579,
											"end": 21692,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21698,
											"end": 21852,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 21698,
											"end": 21852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21782,
											"end": 21788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21777,
											"end": 21780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21772,
											"end": 21775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21759,
											"end": 21789,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 21845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21835,
											"end": 21841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21830,
											"end": 21833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21826,
											"end": 21842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21819,
											"end": 21846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21698,
											"end": 21852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21698,
											"end": 21852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21698,
											"end": 21852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21698,
											"end": 21852,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21858,
											"end": 22165,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 21858,
											"end": 22165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21926,
											"end": 21927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21936,
											"end": 22049,
											"name": "tag",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 21936,
											"end": 22049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21950,
											"end": 21956,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21947,
											"end": 21948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21944,
											"end": 21957,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 21936,
											"end": 22049,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21936,
											"end": 22049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 21936,
											"end": 22049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22035,
											"end": 22036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22030,
											"end": 22033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22026,
											"end": 22037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22020,
											"end": 22038,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22016,
											"end": 22017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22011,
											"end": 22014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22007,
											"end": 22018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22000,
											"end": 22039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21972,
											"end": 21974,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21969,
											"end": 21970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21965,
											"end": 21975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21960,
											"end": 21975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21960,
											"end": 21975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21936,
											"end": 22049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 21936,
											"end": 22049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21936,
											"end": 22049,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 21936,
											"end": 22049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22067,
											"end": 22073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22064,
											"end": 22065,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22061,
											"end": 22074,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 22058,
											"end": 22159,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22058,
											"end": 22159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 22058,
											"end": 22159,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22147,
											"end": 22148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22138,
											"end": 22144,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22133,
											"end": 22136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22129,
											"end": 22145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22122,
											"end": 22149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22058,
											"end": 22159,
											"name": "tag",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 22058,
											"end": 22159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21907,
											"end": 22165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21858,
											"end": 22165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21858,
											"end": 22165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21858,
											"end": 22165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21858,
											"end": 22165,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22171,
											"end": 22404,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 22171,
											"end": 22404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22210,
											"end": 22213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22233,
											"end": 22257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 22251,
											"end": 22256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 22233,
											"end": 22257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22233,
											"end": 22257,
											"name": "tag",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 22233,
											"end": 22257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22224,
											"end": 22257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22224,
											"end": 22257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22279,
											"end": 22345,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22272,
											"end": 22277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22269,
											"end": 22346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22266,
											"end": 22369,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22266,
											"end": 22369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 22266,
											"end": 22369,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 22349,
											"end": 22367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 22349,
											"end": 22367,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22349,
											"end": 22367,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 22349,
											"end": 22367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22266,
											"end": 22369,
											"name": "tag",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 22266,
											"end": 22369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22396,
											"end": 22397,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22389,
											"end": 22394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22385,
											"end": 22398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22378,
											"end": 22398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22378,
											"end": 22398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22171,
											"end": 22404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22171,
											"end": 22404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22171,
											"end": 22404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22171,
											"end": 22404,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22410,
											"end": 22590,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 22410,
											"end": 22590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22458,
											"end": 22535,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22455,
											"end": 22456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22448,
											"end": 22536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22555,
											"end": 22559,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 22552,
											"end": 22553,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22545,
											"end": 22560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22579,
											"end": 22583,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 22576,
											"end": 22577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22569,
											"end": 22584,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22596,
											"end": 22776,
											"name": "tag",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 22596,
											"end": 22776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22644,
											"end": 22721,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22641,
											"end": 22642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22634,
											"end": 22722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22741,
											"end": 22745,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 22738,
											"end": 22739,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22731,
											"end": 22746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22765,
											"end": 22769,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 22762,
											"end": 22763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22755,
											"end": 22770,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22782,
											"end": 22962,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 22782,
											"end": 22962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22830,
											"end": 22907,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22827,
											"end": 22828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22820,
											"end": 22908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22927,
											"end": 22931,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 22924,
											"end": 22925,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22917,
											"end": 22932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22951,
											"end": 22955,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 22948,
											"end": 22949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22941,
											"end": 22956,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22968,
											"end": 23148,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 22968,
											"end": 23148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23016,
											"end": 23093,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23013,
											"end": 23014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23006,
											"end": 23094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23113,
											"end": 23117,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 23110,
											"end": 23111,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23103,
											"end": 23118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23137,
											"end": 23141,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 23134,
											"end": 23135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23127,
											"end": 23142,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23154,
											"end": 23271,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 23154,
											"end": 23271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23263,
											"end": 23264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23260,
											"end": 23261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23253,
											"end": 23265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23277,
											"end": 23394,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 23277,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23386,
											"end": 23387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23383,
											"end": 23384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23376,
											"end": 23388,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23400,
											"end": 23517,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 23400,
											"end": 23517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23509,
											"end": 23510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23506,
											"end": 23507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23499,
											"end": 23511,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23523,
											"end": 23640,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 23523,
											"end": 23640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23632,
											"end": 23633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23629,
											"end": 23630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23622,
											"end": 23634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23646,
											"end": 23763,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 23646,
											"end": 23763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23755,
											"end": 23756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23752,
											"end": 23753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23745,
											"end": 23757,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23769,
											"end": 23886,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 23769,
											"end": 23886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23878,
											"end": 23879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23875,
											"end": 23876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23868,
											"end": 23880,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23892,
											"end": 23994,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 23892,
											"end": 23994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23933,
											"end": 23939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23984,
											"end": 23986,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 23980,
											"end": 23987,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 23975,
											"end": 23977,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 23968,
											"end": 23973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23964,
											"end": 23978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23960,
											"end": 23988,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23950,
											"end": 23988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23950,
											"end": 23988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23892,
											"end": 23994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23892,
											"end": 23994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23892,
											"end": 23994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23892,
											"end": 23994,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24000,
											"end": 24174,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 24000,
											"end": 24174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24140,
											"end": 24166,
											"name": "PUSH",
											"source": 1,
											"value": "4E4654205374616B696E673A20456D7074792041727261790000000000000000"
										},
										{
											"begin": 24136,
											"end": 24137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24128,
											"end": 24134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24124,
											"end": 24138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24117,
											"end": 24167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24000,
											"end": 24174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24000,
											"end": 24174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24180,
											"end": 24409,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 24180,
											"end": 24409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24320,
											"end": 24354,
											"name": "PUSH",
											"source": 1,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 24316,
											"end": 24317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24308,
											"end": 24314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24304,
											"end": 24318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24297,
											"end": 24355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24389,
											"end": 24401,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 24384,
											"end": 24386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24376,
											"end": 24382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24372,
											"end": 24387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24365,
											"end": 24402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24180,
											"end": 24409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24180,
											"end": 24409,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24415,
											"end": 24640,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 24415,
											"end": 24640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24555,
											"end": 24589,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 24551,
											"end": 24552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24543,
											"end": 24549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24539,
											"end": 24553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24532,
											"end": 24590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24624,
											"end": 24632,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24619,
											"end": 24621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24611,
											"end": 24617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24607,
											"end": 24622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24600,
											"end": 24633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24415,
											"end": 24640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24415,
											"end": 24640,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24646,
											"end": 24882,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 24646,
											"end": 24882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24786,
											"end": 24820,
											"name": "PUSH",
											"source": 1,
											"value": "4E4654205374616B696E673A206475706C696361746520746F6B656E20696473"
										},
										{
											"begin": 24782,
											"end": 24783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24774,
											"end": 24780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24770,
											"end": 24784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24763,
											"end": 24821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24855,
											"end": 24874,
											"name": "PUSH",
											"source": 1,
											"value": "20696E20696E70757420706172616D732E000000000000000000000000000000"
										},
										{
											"begin": 24850,
											"end": 24852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24842,
											"end": 24848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24838,
											"end": 24853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24831,
											"end": 24875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24646,
											"end": 24882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24646,
											"end": 24882,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24888,
											"end": 25070,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 24888,
											"end": 25070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25028,
											"end": 25062,
											"name": "PUSH",
											"source": 1,
											"value": "4E4654205374616B696E673A206E6F74206F776E6572206F6620746F6B656E2E"
										},
										{
											"begin": 25024,
											"end": 25025,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25012,
											"end": 25026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25005,
											"end": 25063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24888,
											"end": 25070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24888,
											"end": 25070,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25076,
											"end": 25258,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 25076,
											"end": 25258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25216,
											"end": 25250,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 25212,
											"end": 25213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25204,
											"end": 25210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25200,
											"end": 25214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25193,
											"end": 25251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25076,
											"end": 25258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25076,
											"end": 25258,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25264,
											"end": 25444,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 25264,
											"end": 25444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25404,
											"end": 25436,
											"name": "PUSH",
											"source": 1,
											"value": "736574486172766573744665653A2066656550657263656E74203E2034300000"
										},
										{
											"begin": 25400,
											"end": 25401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25392,
											"end": 25398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25388,
											"end": 25402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25381,
											"end": 25437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25264,
											"end": 25444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25264,
											"end": 25444,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25450,
											"end": 25629,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 25450,
											"end": 25629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25590,
											"end": 25621,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 25586,
											"end": 25587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25578,
											"end": 25584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25574,
											"end": 25588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25567,
											"end": 25622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25450,
											"end": 25629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25450,
											"end": 25629,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25635,
											"end": 25879,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 25635,
											"end": 25879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25775,
											"end": 25809,
											"name": "PUSH",
											"source": 1,
											"value": "4E667420556E7374616B696E673A20746F6B656E206E6F74207374616B656420"
										},
										{
											"begin": 25771,
											"end": 25772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25763,
											"end": 25769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25759,
											"end": 25773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25752,
											"end": 25810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "PUSH",
											"source": 1,
											"value": "6F7220696E636F727265637420746F6B656E206F776E65722E00000000000000"
										},
										{
											"begin": 25839,
											"end": 25841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25831,
											"end": 25837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25827,
											"end": 25842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25820,
											"end": 25872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25635,
											"end": 25879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25635,
											"end": 25879,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25885,
											"end": 26007,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 25885,
											"end": 26007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25958,
											"end": 25982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 25976,
											"end": 25981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25958,
											"end": 25982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 25958,
											"end": 25982,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25958,
											"end": 25982,
											"name": "tag",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 25958,
											"end": 25982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25951,
											"end": 25956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 25983,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 25938,
											"end": 26001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 25938,
											"end": 26001,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25997,
											"end": 25998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25994,
											"end": 25995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25987,
											"end": 25999,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25938,
											"end": 26001,
											"name": "tag",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 25938,
											"end": 26001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25885,
											"end": 26007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25885,
											"end": 26007,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26013,
											"end": 26129,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 26013,
											"end": 26129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26083,
											"end": 26104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 26098,
											"end": 26103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26083,
											"end": 26104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 26083,
											"end": 26104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26083,
											"end": 26104,
											"name": "tag",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 26083,
											"end": 26104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26076,
											"end": 26081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26073,
											"end": 26105,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26063,
											"end": 26123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 26063,
											"end": 26123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26119,
											"end": 26120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26116,
											"end": 26117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26109,
											"end": 26121,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26063,
											"end": 26123,
											"name": "tag",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 26063,
											"end": 26123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26013,
											"end": 26129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26013,
											"end": 26129,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26135,
											"end": 26257,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 26135,
											"end": 26257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26208,
											"end": 26232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 26226,
											"end": 26231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26208,
											"end": 26232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 26208,
											"end": 26232,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26208,
											"end": 26232,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 26208,
											"end": 26232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26201,
											"end": 26206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26198,
											"end": 26233,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26188,
											"end": 26251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 26188,
											"end": 26251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26247,
											"end": 26248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26244,
											"end": 26245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26237,
											"end": 26249,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26188,
											"end": 26251,
											"name": "tag",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 26188,
											"end": 26251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26135,
											"end": 26257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26135,
											"end": 26257,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"accGHSPPerShare()": "43db3c5f",
							"balanceOfStakes()": "2955c60c",
							"depositReward(uint256)": "1e2720ff",
							"feeWallet()": "f25f4b56",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"getPending(address)": "d086c254",
							"getRewardBalance()": "5e42b455",
							"ghspToken()": "19fca9f6",
							"harvest()": "4641257d",
							"harvestFee()": "b5962917",
							"lastRewardBlock()": "a9f8d181",
							"nftToken()": "d06fcba8",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardPerBlock()": "8ae39cac",
							"setFeeWallet(address)": "90d49b9d",
							"setHarvestFee(uint256)": "792b55b6",
							"stake(uint256[])": "0fbf0a93",
							"totalStakedAmount()": "567e98f9",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256[])": "e449f341",
							"userInfo(address)": "1959a002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nftToken\",\"type\":\"address\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_ghspToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDays\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"AddUnStakeFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"harvestFee\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_feeWallet\",\"type\":\"address\"}],\"name\":\"SetFeeWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_harvestFee\",\"type\":\"uint256\"}],\"name\":\"SetHarvestFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"}],\"name\":\"UnStaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accGHSPPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOfStakes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getPending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ghspToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRewardBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftToken\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeWallet\",\"type\":\"address\"}],\"name\":\"setFeeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setHarvestFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStakedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":\"NftStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xa0361a0e2fa08944a4db8137a7b44d0414d03a61a931c69310ff61b63613ca09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccb29eb746305ea0494e61e7d85027c4f5347fb9105d637d0323268ad4b1550b\",\"dweb:/ipfs/QmbPiJBdimZCSfbtxR1B11k5RYHDiVrsXBX7KPsCgqY6Zg\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xa0361a0e2fa08944a4db8137a7b44d0414d03a61a931c69310ff61b63613ca09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccb29eb746305ea0494e61e7d85027c4f5347fb9105d637d0323268ad4b1550b\",\"dweb:/ipfs/QmbPiJBdimZCSfbtxR1B11k5RYHDiVrsXBX7KPsCgqY6Zg\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13152:16313  library SafeBEP20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":13152:16313  library SafeBEP20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220579da483079e0797a2ac8e2a6e89dc7f3fcd21fbd15b38805078db152da2d1d664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220579da483079e0797a2ac8e2a6e89dc7f3fcd21fbd15b38805078db152da2d1d664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SWAP14 LOG4 DUP4 SMOD SWAP15 SMOD SWAP8 LOG2 0xAC DUP15 0x2A PUSH15 0x89DC7F3FCD21FBD15B38805078DB15 0x2D LOG2 0xD1 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "13152:3161:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220579da483079e0797a2ac8e2a6e89dc7f3fcd21fbd15b38805078db152da2d1d664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SWAP14 LOG4 DUP4 SMOD SWAP15 SMOD SWAP8 LOG2 0xAC DUP15 0x2A PUSH15 0x89DC7F3FCD21FBD15B38805078DB15 0x2D LOG2 0xD1 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "13152:3161:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220579da483079e0797a2ac8e2a6e89dc7f3fcd21fbd15b38805078db152da2d1d664736f6c63430008070033",
									".code": [
										{
											"begin": 13152,
											"end": 16313,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xa0361a0e2fa08944a4db8137a7b44d0414d03a61a931c69310ff61b63613ca09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccb29eb746305ea0494e61e7d85027c4f5347fb9105d637d0323268ad4b1550b\",\"dweb:/ipfs/QmbPiJBdimZCSfbtxR1B11k5RYHDiVrsXBX7KPsCgqY6Zg\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6609:13121  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ghosper-NFT-Staking-MasterChef.sol\":6609:13121  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a2d1e0ce6a3d2c46065b523f04f38e5ca23797582e46d7ab55bfb418e7ed148e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a2d1e0ce6a3d2c46065b523f04f38e5ca23797582e46d7ab55bfb418e7ed148e64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xD1 0xE0 0xCE PUSH11 0x3D2C46065B523F04F38E5C LOG2 CALLDATACOPY SWAP8 PC 0x2E CHAINID 0xD7 0xAB SSTORE 0xBF 0xB4 XOR 0xE7 0xED EQ DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "6609:6512:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a2d1e0ce6a3d2c46065b523f04f38e5ca23797582e46d7ab55bfb418e7ed148e64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xD1 0xE0 0xCE PUSH11 0x3D2C46065B523F04F38E5C LOG2 CALLDATACOPY SWAP8 PC 0x2E CHAINID 0xD7 0xAB SSTORE 0xBF 0xB4 XOR 0xE7 0xED EQ DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "6609:6512:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2d1e0ce6a3d2c46065b523f04f38e5ca23797582e46d7ab55bfb418e7ed148e64736f6c63430008070033",
									".code": [
										{
											"begin": 6609,
											"end": 13121,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xa0361a0e2fa08944a4db8137a7b44d0414d03a61a931c69310ff61b63613ca09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccb29eb746305ea0494e61e7d85027c4f5347fb9105d637d0323268ad4b1550b\",\"dweb:/ipfs/QmbPiJBdimZCSfbtxR1B11k5RYHDiVrsXBX7KPsCgqY6Zg\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Ghosper-NFT-Staking-MasterChef.sol": {
				"ast": {
					"absolutePath": "contracts/Ghosper-NFT-Staking-MasterChef.sol",
					"exportedSymbols": {
						"Address": [
							951
						],
						"Context": [
							121
						],
						"IBEP20": [
							100
						],
						"IERC165": [
							962
						],
						"IERC721": [
							1076
						],
						"NftStaking": [
							2195
						],
						"Ownable": [
							224
						],
						"SafeBEP20": [
							749
						],
						"SafeMath": [
							535
						]
					},
					"id": 2196,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IBEP20",
							"nameLocation": "79:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "93:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "176:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "213:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:9:0"
									},
									"scope": 100,
									"src": "167:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "230:53:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "298:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "332:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "332:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:7:0"
									},
									"scope": 100,
									"src": "289:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "347:51:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "413:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "419:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "445:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:15:0"
									},
									"scope": 100,
									"src": "404:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "468:49:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "532:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "536:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "562:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "562:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:15:0"
									},
									"scope": 100,
									"src": "523:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "585:54:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "654:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "688:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:9:0"
									},
									"scope": 100,
									"src": "645:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "705:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "794:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "812:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "804:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:17:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "844:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:9:0"
									},
									"scope": 100,
									"src": "785:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "861:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1091:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1108:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1100:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1127:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1119:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1099:35:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1153:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1153:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:6:0"
									},
									"scope": 100,
									"src": "1082:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1167:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1452:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1470:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1462:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1486:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1478:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:33:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1518:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1517:9:0"
									},
									"scope": 100,
									"src": "1443:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1535:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2205:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2238:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2230:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:33:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2264:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2263:6:0"
									},
									"scope": 100,
									"src": "2196:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2278:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2597:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2618:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2610:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2634:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2626:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2653:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2645:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:51:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2679:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2679:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:6:0"
									},
									"scope": 100,
									"src": "2588:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2693:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 90,
									"name": "Transfer",
									"nameLocation": "2868:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2893:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2877:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2915:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2899:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2927:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2919:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:57:0"
									},
									"src": "2862:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2942:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 99,
									"name": "Approval",
									"nameLocation": "3105:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3130:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3114:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3153:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3137:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3170:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3162:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3113:63:0"
									},
									"src": "3099:78:0"
								}
							],
							"scope": 2196,
							"src": "69:3111:0",
							"usedErrors": []
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3184:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3211:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "Context",
							"nameLocation": "3736:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "3813:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3831:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3831:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "3824:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "3760:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3770:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "3804:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3803:9:0"
									},
									"scope": 121,
									"src": "3751:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "3924:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3942:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "3942:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "3935:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "3866:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3874:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3908:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3908:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:16:0"
									},
									"scope": 121,
									"src": "3857:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2196,
							"src": "3718:243:0",
							"usedErrors": []
						},
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3965:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 124,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "4528:7:0"
									},
									"id": 125,
									"nodeType": "InheritanceSpecifier",
									"src": "4528:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "3992:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 224,
							"linearizedBaseContracts": [
								224,
								121
							],
							"name": "Ownable",
							"nameLocation": "4517:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 127,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "4559:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 224,
									"src": "4543:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 126,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4543:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 133,
									"name": "OwnershipTransferred",
									"nameLocation": "4580:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "4617:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4601:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4648:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4632:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4600:57:0"
									},
									"src": "4574:84:0"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "4779:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 138,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "4809:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4809:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 137,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4790:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4790:32:0"
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4666:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 143,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4776:2:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4779:0:0"
									},
									"scope": 224,
									"src": "4765:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "4966:32:0",
										"statements": [
											{
												"expression": {
													"id": 149,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "4984:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 148,
												"id": 150,
												"nodeType": "Return",
												"src": "4977:13:0"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "4838:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "4920:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4925:2:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4957:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4956:9:0"
									},
									"scope": 224,
									"src": "4911:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "5112:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 156,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "5131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5131:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 158,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5142:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5131:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5156:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5123:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "5123:68:0"
											},
											{
												"id": 164,
												"nodeType": "PlaceholderStatement",
												"src": "5202:1:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "5006:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 166,
									"name": "onlyOwner",
									"nameLocation": "5100:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5109:2:0"
									},
									"src": "5091:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "5616:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5654:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5646:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 173,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5646:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5646:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 172,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "5627:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5627:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "5627:30:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5219:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 170,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 169,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "5606:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5606:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "5571:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5588:2:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5616:0:0"
									},
									"scope": 224,
									"src": "5562:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "5890:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 189,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "5909:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5929:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5921:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 190,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5921:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5921:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5909:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5933:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5901:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "5901:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 199,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "6004:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 198,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "5985:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5985:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "5985:28:0"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "5673:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 185,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "5880:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5880:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "5829:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "5855:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5847:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5846:18:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5890:0:0"
									},
									"scope": 224,
									"src": "5820:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "6244:128:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "6263:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "6255:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6255:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 212,
												"initialValue": {
													"id": 211,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "6274:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6255:25:0"
											},
											{
												"expression": {
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 213,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "6291:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 214,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "6300:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6291:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6291:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 218,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6345:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 219,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "6355:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "6324:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6324:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "EmitStatement",
												"src": "6319:45:0"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "6029:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "6190:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6217:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6209:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6208:18:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6244:0:0"
									},
									"scope": 224,
									"src": "6181:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2196,
							"src": "4499:1876:0",
							"usedErrors": []
						},
						{
							"id": 225,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6379:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "6406:201:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 535,
							"linearizedBaseContracts": [
								535
							],
							"name": "SafeMath",
							"nameLocation": "6617:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "6850:146:0",
										"statements": [
											{
												"id": 256,
												"nodeType": "UncheckedBlock",
												"src": "6861:128:0",
												"statements": [
													{
														"assignments": [
															239
														],
														"declarations": [
															{
																"constant": false,
																"id": 239,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "6894:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 256,
																"src": "6886:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 238,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6886:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 243,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 240,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "6898:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 241,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "6902:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6898:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6886:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 244,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "6922:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 245,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "6926:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6922:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 251,
														"nodeType": "IfStatement",
														"src": "6918:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6937:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6944:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 249,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6936:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 237,
															"id": 250,
															"nodeType": "Return",
															"src": "6929:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6969:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 253,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6975:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 254,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6968:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 237,
														"id": 255,
														"nodeType": "Return",
														"src": "6961:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6633:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "6783:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6798:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6790:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6809:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6801:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6789:22:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6835:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6835:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6841:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6834:15:0"
									},
									"scope": 535,
									"src": "6774:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "7225:118:0",
										"statements": [
											{
												"id": 284,
												"nodeType": "UncheckedBlock",
												"src": "7236:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "7265:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 271,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "7269:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7265:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 277,
														"nodeType": "IfStatement",
														"src": "7261:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7280:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7287:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 275,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7279:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 269,
															"id": 276,
															"nodeType": "Return",
															"src": "7272:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7312:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 279,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "7318:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 280,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "7322:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7318:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 282,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7311:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 269,
														"id": 283,
														"nodeType": "Return",
														"src": "7304:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "7004:139:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "7158:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7173:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7165:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7184:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7176:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7164:22:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7210:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7210:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7216:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:15:0"
									},
									"scope": 535,
									"src": "7149:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "7574:427:0",
										"statements": [
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "7585:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 298,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "7847:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7852:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7847:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 305,
														"nodeType": "IfStatement",
														"src": "7843:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7863:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7869:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 303,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7862:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 297,
															"id": 304,
															"nodeType": "Return",
															"src": "7855:16:0"
														}
													},
													{
														"assignments": [
															307
														],
														"declarations": [
															{
																"constant": false,
																"id": 307,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "7894:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 326,
																"src": "7886:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 306,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7886:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 311,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 308,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "7898:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 309,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "7902:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7898:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7886:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 312,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "7922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 313,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "7926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7922:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 315,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "7931:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7922:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 321,
														"nodeType": "IfStatement",
														"src": "7918:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7942:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7949:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 319,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7941:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 297,
															"id": 320,
															"nodeType": "Return",
															"src": "7934:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7974:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 323,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "7980:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 324,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7973:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 297,
														"id": 325,
														"nodeType": "Return",
														"src": "7966:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7351:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "7507:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "7514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7533:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "7525:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7513:22:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "7559:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "7565:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:15:0"
									},
									"scope": 535,
									"src": "7498:503:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "8233:119:0",
										"statements": [
											{
												"id": 354,
												"nodeType": "UncheckedBlock",
												"src": "8244:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 340,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "8273:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8273:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 347,
														"nodeType": "IfStatement",
														"src": "8269:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8289:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8296:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 345,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8288:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 339,
															"id": 346,
															"nodeType": "Return",
															"src": "8281:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8321:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 349,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "8327:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 350,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "8331:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8327:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 352,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8320:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 339,
														"id": 353,
														"nodeType": "Return",
														"src": "8313:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "8009:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "8166:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8181:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "8173:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8192:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "8184:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8172:22:0"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "8218:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8218:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "8224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8217:15:0"
									},
									"scope": 535,
									"src": "8157:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "8594:119:0",
										"statements": [
											{
												"id": 382,
												"nodeType": "UncheckedBlock",
												"src": "8605:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 368,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "8634:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8639:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8634:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 375,
														"nodeType": "IfStatement",
														"src": "8630:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8650:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8657:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 373,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8649:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 367,
															"id": 374,
															"nodeType": "Return",
															"src": "8642:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8682:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 377,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "8688:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 378,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "8692:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8688:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 380,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8681:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 367,
														"id": 381,
														"nodeType": "Return",
														"src": "8674:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "8360:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "8527:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8542:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8534:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8553:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8545:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8533:22:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8579:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8579:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8585:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8578:15:0"
									},
									"scope": 535,
									"src": "8518:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "9027:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 394,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "9045:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 395,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "9049:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9045:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 393,
												"id": 397,
												"nodeType": "Return",
												"src": "9038:12:0"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "8721:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8969:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8981:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "8973:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8992:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "8984:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8972:22:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9018:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9017:9:0"
									},
									"scope": 535,
									"src": "8960:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "9408:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 409,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "9426:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 410,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "9430:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9426:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 412,
												"nodeType": "Return",
												"src": "9419:12:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "9066:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9350:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9362:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "9354:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9373:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "9365:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9353:22:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "9399:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9398:9:0"
									},
									"scope": 535,
									"src": "9341:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "9765:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 424,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "9783:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 425,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "9787:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9783:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 423,
												"id": 427,
												"nodeType": "Return",
												"src": "9776:12:0"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "9447:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "9707:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9719:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "9711:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9730:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "9722:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9710:22:0"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "9756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9755:9:0"
									},
									"scope": 535,
									"src": "9698:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "10164:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "10182:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 440,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "10186:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10182:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 438,
												"id": 442,
												"nodeType": "Return",
												"src": "10175:12:0"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "9804:287:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "10106:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10118:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10110:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10109:22:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10154:9:0"
									},
									"scope": 535,
									"src": "10097:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "10729:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 454,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "10747:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 455,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "10751:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10747:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 457,
												"nodeType": "Return",
												"src": "10740:12:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "10203:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "10671:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10683:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "10675:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10694:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "10686:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10674:22:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "10720:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10719:9:0"
									},
									"scope": 535,
									"src": "10662:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "11368:111:0",
										"statements": [
											{
												"id": 482,
												"nodeType": "UncheckedBlock",
												"src": "11379:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 472,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "11412:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 473,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "11417:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11412:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 475,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "11420:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 471,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "11404:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11404:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 477,
														"nodeType": "ExpressionStatement",
														"src": "11404:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 478,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "11455:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 479,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "11459:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11455:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 470,
														"id": 481,
														"nodeType": "Return",
														"src": "11448:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "10768:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "11248:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11270:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11262:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11290:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11282:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11316:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11302:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11302:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11251:84:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11359:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11358:9:0"
									},
									"scope": 535,
									"src": "11239:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "12106:110:0",
										"statements": [
											{
												"id": 507,
												"nodeType": "UncheckedBlock",
												"src": "12117:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 497,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "12150:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12150:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 500,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "12157:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 496,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "12142:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12142:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 502,
														"nodeType": "ExpressionStatement",
														"src": "12142:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 503,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "12192:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 504,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "12196:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12192:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 495,
														"id": 506,
														"nodeType": "Return",
														"src": "12185:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "11487:484:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "11986:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "12000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12028:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "12020:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12054:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "12040:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12040:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11989:84:0"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "12097:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12096:9:0"
									},
									"scope": 535,
									"src": "11977:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "13008:110:0",
										"statements": [
											{
												"id": 532,
												"nodeType": "UncheckedBlock",
												"src": "13019:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 522,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "13052:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13056:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "13052:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 525,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "13059:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 521,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "13044:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13044:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 527,
														"nodeType": "ExpressionStatement",
														"src": "13044:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 528,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "13094:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 529,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "13098:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13094:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 520,
														"id": 531,
														"nodeType": "Return",
														"src": "13087:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "12224:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "12888:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12910:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "12902:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12930:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "12922:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12956:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "12942:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12942:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12891:84:0"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "12999:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12998:9:0"
									},
									"scope": 535,
									"src": "12879:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2196,
							"src": "6609:6512:0",
							"usedErrors": []
						},
						{
							"id": 536,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13125:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 749,
							"linearizedBaseContracts": [
								749
							],
							"name": "SafeBEP20",
							"nameLocation": "13160:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 539,
									"libraryName": {
										"id": 537,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 535,
										"src": "13183:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "13177:27:0",
									"typeName": {
										"id": 538,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 542,
									"libraryName": {
										"id": 540,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 951,
										"src": "13216:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "13210:26:0",
									"typeName": {
										"id": 541,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13228:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "13316:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "13347:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 556,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 545,
																			"src": "13377:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 49,
																		"src": "13377:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "13377:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 559,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "13402:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 560,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "13406:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 554,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "13354:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "13354:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13354:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 552,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "13327:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13327:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "13327:86:0"
											}
										]
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "13253:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13273:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "13266:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 544,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 543,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "13266:6:0"
													},
													"referencedDeclaration": 100,
													"src": "13266:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13288:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "13280:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "13292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13265:41:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13316:0:0"
									},
									"scope": 749,
									"src": "13244:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "13519:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 578,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "13550:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 581,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 568,
																			"src": "13580:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 81,
																		"src": "13580:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "13580:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 584,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "13609:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 585,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "13615:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 586,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "13619:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 579,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "13557:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "13557:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13557:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 577,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "13530:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13530:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "13530:96:0"
											}
										]
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "13438:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13462:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "13455:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 567,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 566,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "13455:6:0"
													},
													"referencedDeclaration": 100,
													"src": "13455:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13477:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "13469:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13491:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "13483:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13503:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "13495:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13454:55:0"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13519:0:0"
									},
									"scope": 749,
									"src": "13429:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "13979:546:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 603,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 599,
																			"src": "14273:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14282:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "14273:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 606,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14272:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 611,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "14313:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$749",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$749",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 610,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14305:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 609,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "14305:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 612,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14305:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 613,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "14320:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 607,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 595,
																					"src": "14289:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$100",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 59,
																				"src": "14289:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14289:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14332:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "14289:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 617,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14288:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14272:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14349:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14264:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "14264:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 623,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "14447:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 626,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 595,
																			"src": "14477:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 69,
																		"src": "14477:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "14477:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 629,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "14501:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 630,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "14510:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 624,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "14454:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "14454:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14454:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 622,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "14427:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14427:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "14427:90:0"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "13642:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "13912:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13931:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "13924:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 594,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 593,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "13924:6:0"
													},
													"referencedDeclaration": 100,
													"src": "13924:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13946:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "13938:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13963:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "13955:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13923:46:0"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13979:0:0"
									},
									"scope": 749,
									"src": "13903:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "14619:200:0",
										"statements": [
											{
												"assignments": [
													646
												],
												"declarations": [
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "14638:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 671,
														"src": "14630:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 645,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 658,
												"initialValue": {
													"arguments": [
														{
															"id": 656,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "14697:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 651,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "14677:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$749",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$749",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14669:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 649,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14669:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14669:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 653,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "14684:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 647,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "14653:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 59,
																"src": "14653:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14653:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 399,
														"src": "14653:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14653:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14630:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 660,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "14734:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 663,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "14764:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 69,
																		"src": "14764:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "14764:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 666,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "14788:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 667,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "14797:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 661,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "14741:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "14741:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14741:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 659,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "14714:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14714:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "14714:97:0"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "14542:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14571:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "14564:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 637,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 636,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "14564:6:0"
													},
													"referencedDeclaration": 100,
													"src": "14564:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14586:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "14578:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14603:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "14595:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14563:46:0"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14619:0:0"
									},
									"scope": 749,
									"src": "14533:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "14913:245:0",
										"statements": [
											{
												"assignments": [
													683
												],
												"declarations": [
													{
														"constant": false,
														"id": 683,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "14932:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "14924:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 682,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"arguments": [
														{
															"id": 693,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "14991:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14998:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 688,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "14971:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$749",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$749",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14963:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 686,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14963:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14963:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 690,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "14978:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 684,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "14947:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 59,
																"src": "14947:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14947:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 484,
														"src": "14947:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14947:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14924:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "15073:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 701,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 675,
																			"src": "15103:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 69,
																		"src": "15103:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "15103:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 704,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "15127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 705,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "15136:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15080:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "15080:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15080:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "15053:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15053:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "15053:97:0"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "14836:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14865:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "14858:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "14858:6:0"
													},
													"referencedDeclaration": 100,
													"src": "14858:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14880:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "14872:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14897:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "14889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14857:46:0"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14913:0:0"
									},
									"scope": 749,
									"src": "14827:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "15619:691:0",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15986:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 747,
														"src": "15973:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 719,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 729,
												"initialValue": {
													"arguments": [
														{
															"id": 726,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "16027:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16033:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 723,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "16007:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15999:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 721,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15999:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15999:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 847,
														"src": "15999:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15999:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15973:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 730,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "16083:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16083:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16103:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16083:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 746,
												"nodeType": "IfStatement",
												"src": "16079:224:0",
												"trueBody": {
													"id": 745,
													"nodeType": "Block",
													"src": "16106:197:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 737,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 720,
																				"src": "16225:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 739,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "16238:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 738,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "16238:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 740,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "16237:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 735,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "16214:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "16214:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16214:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16246:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 734,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "16206:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16206:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 744,
															"nodeType": "ExpressionStatement",
															"src": "16206:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "15166:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "15558:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15585:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "15578:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 713,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 712,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "15578:6:0"
													},
													"referencedDeclaration": 100,
													"src": "15578:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15605:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "15592:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15592:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15577:33:0"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15619:0:0"
									},
									"scope": 749,
									"src": "15549:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2196,
							"src": "13152:3161:0",
							"usedErrors": []
						},
						{
							"id": 750,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16317:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 951,
							"linearizedBaseContracts": [
								951
							],
							"name": "Address",
							"nameLocation": "16352:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "17020:553:0",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "codehash",
														"nameLocation": "17284:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "17276:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 758,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17276:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 760,
												"nodeType": "VariableDeclarationStatement",
												"src": "17276:16:0"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "accountHash",
														"nameLocation": "17311:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "17303:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 761,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17303:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17325:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17303:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17468:36:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17470:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "17494:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "17482:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "17482:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "17470:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "17494:7:0",
														"valueSize": 1
													},
													{
														"declaration": 759,
														"isOffset": false,
														"isSlot": false,
														"src": "17470:8:0",
														"valueSize": 1
													}
												],
												"id": 765,
												"nodeType": "InlineAssembly",
												"src": "17459:45:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 766,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "17522:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 767,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "17534:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "17522:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 769,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "17549:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "307830",
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17561:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "17549:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17522:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 773,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "17521:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 757,
												"id": 774,
												"nodeType": "Return",
												"src": "17514:51:0"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "16367:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "16963:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16982:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "16974:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16973:17:0"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "17014:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17014:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17013:6:0"
									},
									"scope": 951,
									"src": "16954:619:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "18579:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 787,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "18606:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$951",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$951",
																				"typeString": "library Address"
																			}
																		],
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 785,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18598:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18598:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "18598:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 790,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "18623:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18598:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18631:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18590:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18590:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "18590:73:0"
											},
											{
												"assignments": [
													796,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18760:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 809,
														"src": "18755:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 795,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18755:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 803,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18805:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 797,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "18773:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "18773:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 799,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "18796:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "18773:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18773:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18754:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "18827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18836:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 804,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18819:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18819:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "18819:78:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "17581:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "18517:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "18543:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "18527:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18527:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18562:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "18554:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18526:43:0"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18579:0:0"
									},
									"scope": 951,
									"src": "18508:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "19755:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "19784:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "19792:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19798:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 820,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															827,
															847
														],
														"referencedDeclaration": 847,
														"src": "19771:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19771:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 819,
												"id": 825,
												"nodeType": "Return",
												"src": "19764:67:0"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "18913:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "19675:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "19696:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "19688:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19717:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "19704:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19704:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19687:35:0"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "19741:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 817,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19741:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19740:14:0"
									},
									"scope": 951,
									"src": "19666:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "20186:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 840,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "20227:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "20235:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20241:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 843,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "20244:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 839,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "20204:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20204:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 838,
												"id": 845,
												"nodeType": "Return",
												"src": "20197:60:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "19847:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "20078:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "20099:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "20091:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "20120:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "20107:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20107:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "20140:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "20126:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20126:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20090:63:0"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "20172:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20172:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20171:14:0"
									},
									"scope": 951,
									"src": "20069:196:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "20753:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "20793:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "20801:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 862,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "20807:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20814:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 859,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															867,
															900
														],
														"referencedDeclaration": 900,
														"src": "20771:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20771:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 858,
												"id": 865,
												"nodeType": "Return",
												"src": "20764:94:0"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "20273:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "20649:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "20679:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "20671:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "20700:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "20687:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 851,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20687:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20714:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "20706:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20670:50:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "20739:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 856,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20738:14:0"
									},
									"scope": 951,
									"src": "20640:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "21263:175:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 884,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "21290:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$951",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$951",
																				"typeString": "library Address"
																			}
																		],
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21282:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 882,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "21282:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21282:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "21282:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 887,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "21307:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21282:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21314:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21274:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21274:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "21274:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "21396:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "21404:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 895,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "21410:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 896,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "21417:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 892,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "21373:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21373:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 880,
												"id": 898,
												"nodeType": "Return",
												"src": "21366:64:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "20874:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "21131:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "21161:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "21153:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "21182:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "21169:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 871,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21169:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21196:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "21188:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "21217:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "21203:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 875,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21203:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21152:78:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "21249:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 878,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21249:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21248:14:0"
									},
									"scope": 951,
									"src": "21122:316:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "21590:835:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 915,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "21620:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 914,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "21609:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21609:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21629:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21601:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "21601:60:0"
											},
											{
												"assignments": [
													921,
													923
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "21740:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 949,
														"src": "21735:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 920,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "21735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "21762:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 949,
														"src": "21749:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 922,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "21749:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 930,
												"initialValue": {
													"arguments": [
														{
															"id": 928,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "21807:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 924,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "21776:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "21776:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 926,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "21796:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "21776:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21776:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21734:78:0"
											},
											{
												"condition": {
													"id": 931,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 921,
													"src": "21827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 947,
													"nodeType": "Block",
													"src": "21886:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 935,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "21972:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "21972:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21992:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21972:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 945,
																"nodeType": "Block",
																"src": "22352:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 942,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 908,
																					"src": "22378:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 941,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "22371:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22371:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 944,
																		"nodeType": "ExpressionStatement",
																		"src": "22371:20:0"
																	}
																]
															},
															"id": 946,
															"nodeType": "IfStatement",
															"src": "21968:439:0",
															"trueBody": {
																"id": 940,
																"nodeType": "Block",
																"src": "21995:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "22183:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "22206:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "22235:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "22229:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22229:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "22210:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "22279:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "22283:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "22275:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "22275:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "22296:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "22268:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22268:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "22268:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 923,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "22235:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 923,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "22283:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 939,
																		"nodeType": "InlineAssembly",
																		"src": "22174:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 948,
												"nodeType": "IfStatement",
												"src": "21823:595:0",
												"trueBody": {
													"id": 934,
													"nodeType": "Block",
													"src": "21836:44:0",
													"statements": [
														{
															"expression": {
																"id": 932,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "21858:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 912,
															"id": 933,
															"nodeType": "Return",
															"src": "21851:17:0"
														}
													]
												}
											}
										]
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nameLocation": "21455:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "21486:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "21478:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "21507:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "21494:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21494:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "weiValue",
												"nameLocation": "21521:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "21513:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "21545:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "21531:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 907,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21477:81:0"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "21576:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 910,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21576:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21575:14:0"
									},
									"scope": 951,
									"src": "21446:979:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2196,
							"src": "16344:6084:0",
							"usedErrors": []
						},
						{
							"id": 952,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "22432:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 953,
								"nodeType": "StructuredDocumentation",
								"src": "22459:287:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 962,
							"linearizedBaseContracts": [
								962
							],
							"name": "IERC165",
							"nameLocation": "22758:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "22773:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "23135:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "23160:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "23153:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 955,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "23153:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23152:20:0"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "23196:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23196:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23195:6:0"
									},
									"scope": 962,
									"src": "23126:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2196,
							"src": "22748:457:0",
							"usedErrors": []
						},
						{
							"id": 963,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23207:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 965,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 962,
										"src": "23326:7:0"
									},
									"id": 966,
									"nodeType": "InheritanceSpecifier",
									"src": "23326:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 964,
								"nodeType": "StructuredDocumentation",
								"src": "23234:69:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1076,
							"linearizedBaseContracts": [
								1076,
								962
							],
							"name": "IERC721",
							"nameLocation": "23315:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "23341:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 975,
									"name": "Transfer",
									"nameLocation": "23443:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23468:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "23452:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23490:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "23474:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23510:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "23494:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23451:67:0"
									},
									"src": "23437:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "23527:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 984,
									"name": "Approval",
									"nameLocation": "23635:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23660:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "23644:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "23683:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "23667:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23709:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "23693:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23643:74:0"
									},
									"src": "23629:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "23726:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 993,
									"name": "ApprovalForAll",
									"nameLocation": "23857:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23888:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "23872:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "23911:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "23895:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23895:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "23926:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "23921:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 990,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23921:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23871:64:0"
									},
									"src": "23851:85:0"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "23944:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "24037:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "24055:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24047:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24046:15:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "24093:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24085:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24085:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24084:17:0"
									},
									"scope": 1076,
									"src": "24028:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "24110:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "24262:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24278:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "24270:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24269:17:0"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "24318:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "24310:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24309:15:0"
									},
									"scope": 1076,
									"src": "24253:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "24333:703:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "25051:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25086:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "25078:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25109:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "25101:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "25122:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25067:77:0"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25153:0:0"
									},
									"scope": 1076,
									"src": "25042:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "25162:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "25694:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25725:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "25717:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25748:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "25740:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25769:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "25761:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25706:77:0"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25792:0:0"
									},
									"scope": 1076,
									"src": "25685:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "25801:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "26280:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26296:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "26288:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26308:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "26300:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26287:29:0"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26325:0:0"
									},
									"scope": 1076,
									"src": "26271:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "26334:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "26494:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26514:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "26506:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26505:17:0"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "26554:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "26546:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26545:18:0"
									},
									"scope": 1076,
									"src": "26485:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "26572:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1053,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "26905:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "26931:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "26923:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "26946:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "26941:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26941:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26922:34:0"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26965:0:0"
									},
									"scope": 1076,
									"src": "26896:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "26974:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "27131:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "27156:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "27148:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27171:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "27163:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27147:33:0"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "27204:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1060,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27204:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27203:6:0"
									},
									"scope": 1076,
									"src": "27122:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "27218:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "27801:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27836:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "27828:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27859:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "27851:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27880:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "27872:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27913:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "27898:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27898:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27817:107:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27933:0:0"
									},
									"scope": 1076,
									"src": "27792:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2196,
							"src": "23305:4632:0",
							"usedErrors": []
						},
						{
							"id": 1077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "27941:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1078,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 224,
										"src": "27991:7:0"
									},
									"id": 1079,
									"nodeType": "InheritanceSpecifier",
									"src": "27991:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2195,
							"linearizedBaseContracts": [
								2195,
								224,
								121
							],
							"name": "NftStaking",
							"nameLocation": "27977:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1082,
									"libraryName": {
										"id": 1080,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 535,
										"src": "28012:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28006:27:0",
									"typeName": {
										"id": 1081,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28025:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1086,
									"libraryName": {
										"id": 1083,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 749,
										"src": "28045:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28039:27:0",
									"typeName": {
										"id": 1085,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1084,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 100,
											"src": "28059:6:0"
										},
										"referencedDeclaration": 100,
										"src": "28059:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$100",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "NftStaking.UserInfo",
									"id": 1095,
									"members": [
										{
											"constant": false,
											"id": 1088,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "28131:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1095,
											"src": "28123:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1087,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28123:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1090,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "28156:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 1095,
											"src": "28148:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1089,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28148:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1092,
											"mutability": "mutable",
											"name": "pendingAmount",
											"nameLocation": "28185:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 1095,
											"src": "28177:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1091,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28177:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1094,
											"mutability": "mutable",
											"name": "lastStakedTime",
											"nameLocation": "28217:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 1095,
											"src": "28209:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1093,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28209:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "28103:8:0",
									"nodeType": "StructDefinition",
									"scope": 2195,
									"src": "28096:143:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d06fcba8",
									"id": 1098,
									"mutability": "immutable",
									"name": "nftToken",
									"nameLocation": "28270:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28245:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$1076",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 1097,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1096,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1076,
											"src": "28245:7:0"
										},
										"referencedDeclaration": 1076,
										"src": "28245:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$1076",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19fca9f6",
									"id": 1101,
									"mutability": "immutable",
									"name": "ghspToken",
									"nameLocation": "28309:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28285:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$100",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1100,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1099,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 100,
											"src": "28285:6:0"
										},
										"referencedDeclaration": 100,
										"src": "28285:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$100",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9f8d181",
									"id": 1103,
									"mutability": "mutable",
									"name": "lastRewardBlock",
									"nameLocation": "28340:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28325:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1102,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28325:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "43db3c5f",
									"id": 1105,
									"mutability": "mutable",
									"name": "accGHSPPerShare",
									"nameLocation": "28377:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28362:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1104,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28362:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ae39cac",
									"id": 1107,
									"mutability": "mutable",
									"name": "rewardPerBlock",
									"nameLocation": "28414:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28399:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1106,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28399:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f25f4b56",
									"id": 1109,
									"mutability": "mutable",
									"name": "feeWallet",
									"nameLocation": "28450:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28435:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1108,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28435:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5962917",
									"id": 1111,
									"mutability": "mutable",
									"name": "harvestFee",
									"nameLocation": "28481:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28466:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1110,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28466:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "567e98f9",
									"id": 1113,
									"mutability": "mutable",
									"name": "totalStakedAmount",
									"nameLocation": "28513:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28498:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1112,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28498:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1115,
									"mutability": "mutable",
									"name": "_rewardBalance",
									"nameLocation": "28553:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28537:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28537:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1119,
									"mutability": "mutable",
									"name": "allStakes",
									"nameLocation": "28602:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28574:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1118,
										"keyType": {
											"id": 1116,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28582:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "28574:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1117,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28593:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1125,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "28675:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28619:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1124,
										"keyType": {
											"id": 1120,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28627:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "28619:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 1123,
											"keyType": {
												"id": 1121,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28646:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "28638:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 1122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28657:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1129,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "28730:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28694:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1128,
										"keyType": {
											"id": 1126,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28702:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "28694:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28713:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 1134,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "28842:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2195,
									"src": "28805:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
										"typeString": "mapping(address => struct NftStaking.UserInfo)"
									},
									"typeName": {
										"id": 1133,
										"keyType": {
											"id": 1130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28814:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "28805:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
											"typeString": "mapping(address => struct NftStaking.UserInfo)"
										},
										"valueType": {
											"id": 1132,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1131,
												"name": "UserInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1095,
												"src": "28825:8:0"
											},
											"referencedDeclaration": 1095,
											"src": "28825:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
												"typeString": "struct NftStaking.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1141,
									"name": "Staked",
									"nameLocation": "28865:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "28880:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "28872:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28898:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "28888:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1137,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "28888:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1138,
													"nodeType": "ArrayTypeName",
													"src": "28888:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28871:35:0"
									},
									"src": "28859:48:0"
								},
								{
									"anonymous": false,
									"id": 1148,
									"name": "UnStaked",
									"nameLocation": "28919:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "28936:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "28928:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28954:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "28944:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1144,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "28944:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1145,
													"nodeType": "ArrayTypeName",
													"src": "28944:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28927:35:0"
									},
									"src": "28913:50:0"
								},
								{
									"anonymous": false,
									"id": 1156,
									"name": "Harvest",
									"nameLocation": "28975:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "28991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "28983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29007:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "28999:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "harvestFee",
												"nameLocation": "29023:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "29015:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28982:52:0"
									},
									"src": "28969:66:0"
								},
								{
									"anonymous": false,
									"id": 1162,
									"name": "DepositReward",
									"nameLocation": "29047:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "29077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "29061:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29091:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "29083:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29060:38:0"
									},
									"src": "29041:58:0"
								},
								{
									"anonymous": false,
									"id": 1166,
									"name": "SetFeeWallet",
									"nameLocation": "29111:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"indexed": true,
												"mutability": "mutable",
												"name": "_feeWallet",
												"nameLocation": "29140:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "29124:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29124:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29123:28:0"
									},
									"src": "29105:47:0"
								},
								{
									"anonymous": false,
									"id": 1174,
									"name": "AddUnStakeFee",
									"nameLocation": "29164:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"indexed": false,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "29186:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "29178:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_minDays",
												"nameLocation": "29202:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "29194:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_feePercent",
												"nameLocation": "29220:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "29212:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29177:55:0"
									},
									"src": "29158:75:0"
								},
								{
									"anonymous": false,
									"id": 1178,
									"name": "SetHarvestFee",
									"nameLocation": "29245:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"indexed": false,
												"mutability": "mutable",
												"name": "_harvestFee",
												"nameLocation": "29267:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "29259:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29258:21:0"
									},
									"src": "29239:41:0"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "29426:148:0",
										"statements": [
											{
												"expression": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1191,
														"name": "nftToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "29437:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1076",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1192,
														"name": "_nftToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "29448:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1076",
															"typeString": "contract IERC721"
														}
													},
													"src": "29437:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1076",
														"typeString": "contract IERC721"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "29437:20:0"
											},
											{
												"expression": {
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1195,
														"name": "ghspToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "29468:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$100",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1196,
														"name": "_ghspToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "29480:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$100",
															"typeString": "contract IBEP20"
														}
													},
													"src": "29468:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "29468:22:0"
											},
											{
												"expression": {
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1199,
														"name": "rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "29501:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1200,
														"name": "_rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "29518:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29501:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "29501:32:0"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1203,
														"name": "feeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "29544:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1204,
														"name": "_feeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "29556:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29544:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "29544:22:0"
											}
										]
									},
									"id": 1208,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "_nftToken",
												"nameLocation": "29318:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "29310:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$1076",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1180,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1179,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1076,
														"src": "29310:7:0"
													},
													"referencedDeclaration": 1076,
													"src": "29310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1076",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "_ghspToken",
												"nameLocation": "29345:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "29338:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1183,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1182,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "29338:6:0"
													},
													"referencedDeclaration": 100,
													"src": "29338:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "_rewardPerBlock",
												"nameLocation": "29374:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "29366:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "_feeWallet",
												"nameLocation": "29408:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "29400:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29299:126:0"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29426:0:0"
									},
									"scope": 2195,
									"src": "29288:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "29641:80:0",
										"statements": [
											{
												"expression": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1215,
														"name": "feeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "29652:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1216,
														"name": "_feeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "29664:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29652:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "29652:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1220,
															"name": "feeWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "29703:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1219,
														"name": "SetFeeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "29690:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29690:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "EmitStatement",
												"src": "29685:28:0"
											}
										]
									},
									"functionSelector": "90d49b9d",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1213,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1212,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "29631:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29631:9:0"
										}
									],
									"name": "setFeeWallet",
									"nameLocation": "29589:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "_feeWallet",
												"nameLocation": "29610:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "29602:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29601:20:0"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29641:0:0"
									},
									"scope": 2195,
									"src": "29580:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "29792:156:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1232,
																"name": "_feePercent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "29811:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3430",
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29826:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_40_by_1",
																	"typeString": "int_const 40"
																},
																"value": "40"
															},
															"src": "29811:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736574486172766573744665653a2066656550657263656e74203e203430",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29830:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e",
																"typeString": "literal_string \"setHarvestFee: feePercent > 40\""
															},
															"value": "setHarvestFee: feePercent > 40"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e",
																"typeString": "literal_string \"setHarvestFee: feePercent > 40\""
															}
														],
														"id": 1231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29803:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "29803:60:0"
											},
											{
												"expression": {
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1238,
														"name": "harvestFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "29874:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1239,
														"name": "_feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "29887:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29874:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "29874:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1243,
															"name": "_feePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "29928:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1242,
														"name": "SetHarvestFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "29914:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29914:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "EmitStatement",
												"src": "29909:31:0"
											}
										]
									},
									"functionSelector": "792b55b6",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1229,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1228,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "29782:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29782:9:0"
										}
									],
									"name": "setHarvestFee",
									"nameLocation": "29738:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "_feePercent",
												"nameLocation": "29760:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "29752:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29751:21:0"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29792:0:0"
									},
									"scope": 2195,
									"src": "29729:219:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "30037:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1258,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "30063:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1256,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "30055:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 414,
														"src": "30055:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30055:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1255,
												"id": 1260,
												"nodeType": "Return",
												"src": "30048:21:0"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "29965:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "29987:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "29979:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "30002:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "29994:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29978:28:0"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "30028:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30027:9:0"
									},
									"scope": 2195,
									"src": "29956:121:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "30145:345:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1267,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "30160:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "30160:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1269,
															"name": "lastRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "30175:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "30160:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1271,
															"name": "totalStakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "30194:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30215:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "30194:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "30160:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1298,
													"nodeType": "Block",
													"src": "30435:48:0",
													"statements": [
														{
															"expression": {
																"id": 1296,
																"name": "_rewardBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "30457:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1266,
															"id": 1297,
															"nodeType": "Return",
															"src": "30450:21:0"
														}
													]
												},
												"id": 1299,
												"nodeType": "IfStatement",
												"src": "30156:327:0",
												"trueBody": {
													"id": 1295,
													"nodeType": "Block",
													"src": "30218:202:0",
													"statements": [
														{
															"assignments": [
																1276
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1276,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "30241:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1295,
																	"src": "30233:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1275,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30233:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1282,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1278,
																		"name": "lastRewardBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "30268:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1279,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "30285:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "30285:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1277,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "30254:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30254:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30233:65:0"
														},
														{
															"assignments": [
																1284
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1284,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "30321:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1295,
																	"src": "30313:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1283,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30313:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1289,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1287,
																		"name": "rewardPerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "30345:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1285,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1276,
																		"src": "30330:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "30330:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30330:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30313:47:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1292,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "30401:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1290,
																		"name": "_rewardBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "30382:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 414,
																	"src": "30382:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30382:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1266,
															"id": 1294,
															"nodeType": "Return",
															"src": "30375:33:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "5e42b455",
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardBalance",
									"nameLocation": "30094:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30110:2:0"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "30136:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30135:9:0"
									},
									"scope": 2195,
									"src": "30085:405:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "30557:186:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1311,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30595:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30595:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1315,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "30615:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NftStaking_$2195",
																		"typeString": "contract NftStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NftStaking_$2195",
																		"typeString": "contract NftStaking"
																	}
																],
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30607:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1313,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30607:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30607:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "30622:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1308,
															"name": "ghspToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "30568:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 591,
														"src": "30568:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$100_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30568:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "30568:62:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1321,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30660:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30660:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1323,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "30672:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1320,
														"name": "DepositReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "30646:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30646:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "EmitStatement",
												"src": "30641:39:0"
											},
											{
												"expression": {
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1326,
														"name": "_rewardBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "30691:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1329,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "30727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1327,
																"name": "_rewardBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "30708:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 399,
															"src": "30708:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30708:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30691:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "30691:44:0"
											}
										]
									},
									"functionSelector": "1e2720ff",
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1306,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1305,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "30547:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30547:9:0"
										}
									],
									"name": "depositReward",
									"nameLocation": "30507:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "30529:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "30521:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30521:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30520:17:0"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30557:0:0"
									},
									"scope": 2195,
									"src": "30498:245:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "30783:846:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1337,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "30798:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "30798:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1339,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "30814:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30798:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1343,
												"nodeType": "IfStatement",
												"src": "30794:70:0",
												"trueBody": {
													"id": 1342,
													"nodeType": "Block",
													"src": "30831:33:0",
													"statements": [
														{
															"functionReturnParameters": 1336,
															"id": 1341,
															"nodeType": "Return",
															"src": "30846:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1344,
														"name": "totalStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "30878:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30899:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30878:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "30874:106:0",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "30902:78:0",
													"statements": [
														{
															"expression": {
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1347,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "30917:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1348,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "30935:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "30935:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30917:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1351,
															"nodeType": "ExpressionStatement",
															"src": "30917:30:0"
														},
														{
															"functionReturnParameters": 1336,
															"id": 1352,
															"nodeType": "Return",
															"src": "30962:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1356
												],
												"declarations": [
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "30998:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1429,
														"src": "30990:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30990:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"arguments": [
														{
															"id": 1358,
															"name": "lastRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "31025:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1359,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "31042:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "31042:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1357,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "31011:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31011:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30990:65:0"
											},
											{
												"assignments": [
													1364
												],
												"declarations": [
													{
														"constant": false,
														"id": 1364,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "31074:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1429,
														"src": "31066:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31066:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1369,
												"initialValue": {
													"arguments": [
														{
															"id": 1367,
															"name": "rewardPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "31098:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1365,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "31083:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 429,
														"src": "31083:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31083:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31066:47:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1370,
														"name": "_rewardBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "31128:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31146:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31128:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1380,
												"nodeType": "IfStatement",
												"src": "31124:103:0",
												"trueBody": {
													"id": 1379,
													"nodeType": "Block",
													"src": "31149:78:0",
													"statements": [
														{
															"expression": {
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1373,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "31164:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1374,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "31182:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "31182:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31164:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1377,
															"nodeType": "ExpressionStatement",
															"src": "31164:30:0"
														},
														{
															"functionReturnParameters": 1336,
															"id": 1378,
															"nodeType": "Return",
															"src": "31209:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1381,
														"name": "_rewardBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "31241:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1382,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "31258:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31241:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1422,
													"nodeType": "Block",
													"src": "31418:163:0",
													"statements": [
														{
															"expression": {
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1402,
																	"name": "_rewardBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "31433:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1405,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1364,
																			"src": "31469:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1403,
																			"name": "_rewardBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "31450:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "31450:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31450:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31433:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1408,
															"nodeType": "ExpressionStatement",
															"src": "31433:43:0"
														},
														{
															"expression": {
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1409,
																	"name": "accGHSPPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "31491:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1417,
																					"name": "totalStakedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "31550:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1414,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31540:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1412,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1364,
																							"src": "31529:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1413,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 429,
																						"src": "31529:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1415,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "31529:16:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 444,
																				"src": "31529:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31529:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1410,
																			"name": "accGHSPPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "31509:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 399,
																		"src": "31509:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31509:60:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31491:78:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1421,
															"nodeType": "ExpressionStatement",
															"src": "31491:78:0"
														}
													]
												},
												"id": 1423,
												"nodeType": "IfStatement",
												"src": "31237:344:0",
												"trueBody": {
													"id": 1401,
													"nodeType": "Block",
													"src": "31266:146:0",
													"statements": [
														{
															"expression": {
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1384,
																	"name": "accGHSPPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "31281:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1392,
																					"name": "totalStakedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "31348:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1389,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31338:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1387,
																							"name": "_rewardBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1115,
																							"src": "31319:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1388,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 429,
																						"src": "31319:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1390,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "31319:24:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 444,
																				"src": "31319:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31319:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1385,
																			"name": "accGHSPPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "31299:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 399,
																		"src": "31299:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31299:68:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31281:86:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1396,
															"nodeType": "ExpressionStatement",
															"src": "31281:86:0"
														},
														{
															"expression": {
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1397,
																	"name": "_rewardBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "31382:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31399:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "31382:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1400,
															"nodeType": "ExpressionStatement",
															"src": "31382:18:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1424,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "31591:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1425,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31609:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "31609:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31591:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "31591:30:0"
											}
										]
									},
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateStatus",
									"nameLocation": "30760:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30772:2:0"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30783:0:0"
									},
									"scope": 2195,
									"src": "30751:878:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "31688:1452:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1437,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1433,
																	"src": "31707:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "31707:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31725:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31707:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4654205374616b696e673a20456d707479204172726179",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31728:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5",
																"typeString": "literal_string \"NFT Staking: Empty Array\""
															},
															"value": "NFT Staking: Empty Array"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5",
																"typeString": "literal_string \"NFT Staking: Empty Array\""
															}
														],
														"id": 1436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31699:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "31699:56:0"
											},
											{
												"body": {
													"id": 1505,
													"nodeType": "Block",
													"src": "31811:421:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1458,
																						"name": "tokenIds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1433,
																						"src": "31851:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																							"typeString": "uint256[] calldata"
																						}
																					},
																					"id": 1460,
																					"indexExpression": {
																						"id": 1459,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1445,
																						"src": "31860:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "31851:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1456,
																					"name": "nftToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1098,
																					"src": "31834:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721_$1076",
																						"typeString": "contract IERC721"
																					}
																				},
																				"id": 1457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "ownerOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1009,
																				"src": "31834:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																					"typeString": "function (uint256) view external returns (address)"
																				}
																			},
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31834:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1462,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "31867:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "31867:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "31834:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e4654205374616b696e673a206e6f74206f776e6572206f6620746f6b656e2e",
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31879:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06",
																			"typeString": "literal_string \"NFT Staking: not owner of token.\""
																		},
																		"value": "NFT Staking: not owner of token."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06",
																			"typeString": "literal_string \"NFT Staking: not owner of token.\""
																		}
																	],
																	"id": 1455,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "31826:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31826:88:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1467,
															"nodeType": "ExpressionStatement",
															"src": "31826:88:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1469,
																				"name": "_ownedTokensIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1129,
																				"src": "31937:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1473,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1470,
																					"name": "tokenIds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1433,
																					"src": "31955:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 1472,
																				"indexExpression": {
																					"id": 1471,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1445,
																					"src": "31964:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "31955:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "31937:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31971:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "31937:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e667420556e7374616b696e673a20746f6b656e206e6f74207374616b6564206f7220696e636f727265637420746f6b656e206f776e65722e",
																		"id": 1476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31974:59:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b",
																			"typeString": "literal_string \"Nft Unstaking: token not staked or incorrect token owner.\""
																		},
																		"value": "Nft Unstaking: token not staked or incorrect token owner."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b",
																			"typeString": "literal_string \"Nft Unstaking: token not staked or incorrect token owner.\""
																		}
																	],
																	"id": 1468,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "31929:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31929:105:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1478,
															"nodeType": "ExpressionStatement",
															"src": "31929:105:0"
														},
														{
															"body": {
																"id": 1503,
																"nodeType": "Block",
																"src": "32098:123:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1499,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 1493,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1433,
																							"src": "32125:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 1495,
																						"indexExpression": {
																							"id": 1494,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1445,
																							"src": "32134:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "32125:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"baseExpression": {
																							"id": 1496,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1433,
																							"src": "32140:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 1498,
																						"indexExpression": {
																							"id": 1497,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1480,
																							"src": "32149:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "32140:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "32125:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4e4654205374616b696e673a206475706c696361746520746f6b656e2069647320696e20696e70757420706172616d732e",
																					"id": 1500,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32153:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55",
																						"typeString": "literal_string \"NFT Staking: duplicate token ids in input params.\""
																					},
																					"value": "NFT Staking: duplicate token ids in input params."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55",
																						"typeString": "literal_string \"NFT Staking: duplicate token ids in input params.\""
																					}
																				],
																				"id": 1492,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "32117:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32117:88:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1502,
																		"nodeType": "ExpressionStatement",
																		"src": "32117:88:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1485,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "32072:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1486,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "32076:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "32076:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32072:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1504,
															"initializationExpression": {
																"assignments": [
																	1480
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1480,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "32061:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1504,
																		"src": "32053:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1479,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "32053:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1484,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1481,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "32065:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32069:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32065:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "32053:17:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "32093:4:0",
																	"subExpression": {
																		"id": 1489,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1480,
																		"src": "32093:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1491,
																"nodeType": "ExpressionStatement",
																"src": "32093:4:0"
															},
															"nodeType": "ForStatement",
															"src": "32049:172:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1448,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "31785:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1449,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "31789:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "31789:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31785:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1506,
												"initializationExpression": {
													"assignments": [
														1445
													],
													"declarations": [
														{
															"constant": false,
															"id": 1445,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "31778:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1506,
															"src": "31770:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1444,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "31770:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1447,
													"initialValue": {
														"hexValue": "30",
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31782:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "31770:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "31806:4:0",
														"subExpression": {
															"id": 1452,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "31806:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1454,
													"nodeType": "ExpressionStatement",
													"src": "31806:4:0"
												},
												"nodeType": "ForStatement",
												"src": "31766:466:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1507,
														"name": "updateStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "32242:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32242:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "32242:14:0"
											},
											{
												"assignments": [
													1512
												],
												"declarations": [
													{
														"constant": false,
														"id": 1512,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "32284:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1649,
														"src": "32267:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
															"typeString": "struct NftStaking.UserInfo"
														},
														"typeName": {
															"id": 1511,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1510,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1095,
																"src": "32267:8:0"
															},
															"referencedDeclaration": 1095,
															"src": "32267:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1517,
												"initialValue": {
													"baseExpression": {
														"id": 1513,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "32291:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
															"typeString": "mapping(address => struct NftStaking.UserInfo storage ref)"
														}
													},
													"id": 1516,
													"indexExpression": {
														"expression": {
															"id": 1514,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "32300:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "32300:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32291:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1095_storage",
														"typeString": "struct NftStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32267:44:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1518,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "32326:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1088,
														"src": "32326:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32340:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32326:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1548,
												"nodeType": "IfStatement",
												"src": "32322:196:0",
												"trueBody": {
													"id": 1547,
													"nodeType": "Block",
													"src": "32343:175:0",
													"statements": [
														{
															"assignments": [
																1523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1523,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "32366:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1547,
																	"src": "32358:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32358:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1536,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1533,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "32423:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																				"typeString": "struct NftStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1090,
																		"src": "32423:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1530,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32413:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1527,
																						"name": "accGHSPPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1105,
																						"src": "32392:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1524,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1512,
																							"src": "32376:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																								"typeString": "struct NftStaking.UserInfo storage pointer"
																							}
																						},
																						"id": 1525,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1088,
																						"src": "32376:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1526,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 429,
																					"src": "32376:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "32376:32:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 444,
																			"src": "32376:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32376:42:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 414,
																	"src": "32376:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32376:63:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32358:81:0"
														},
														{
															"expression": {
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1537,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "32454:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																			"typeString": "struct NftStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "pendingAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1092,
																	"src": "32454:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1543,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1523,
																			"src": "32498:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1540,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1512,
																				"src": "32475:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																					"typeString": "struct NftStaking.UserInfo storage pointer"
																				}
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "pendingAmount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1092,
																			"src": "32475:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 399,
																		"src": "32475:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32475:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32454:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1546,
															"nodeType": "ExpressionStatement",
															"src": "32454:52:0"
														}
													]
												}
											},
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "32536:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1649,
														"src": "32528:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1549,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1553,
												"initialValue": {
													"expression": {
														"id": 1551,
														"name": "tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "32550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "32550:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32528:37:0"
											},
											{
												"expression": {
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1554,
														"name": "totalStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "32576:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1557,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "32618:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1555,
																"name": "totalStakedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "32596:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 399,
															"src": "32596:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32596:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32576:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "32576:54:0"
											},
											{
												"body": {
													"id": 1611,
													"nodeType": "Block",
													"src": "32696:221:0",
													"statements": [
														{
															"expression": {
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1572,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "32711:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1579,
																		"indexExpression": {
																			"expression": {
																				"id": 1573,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "32724:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "32724:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "32711:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1580,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1575,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1512,
																				"src": "32736:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																					"typeString": "struct NftStaking.UserInfo storage pointer"
																				}
																			},
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1088,
																			"src": "32736:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1577,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "32750:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32736:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "32711:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1581,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "32755:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1583,
																	"indexExpression": {
																		"id": 1582,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1562,
																		"src": "32764:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "32755:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32711:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1585,
															"nodeType": "ExpressionStatement",
															"src": "32711:55:0"
														},
														{
															"expression": {
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1586,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "32781:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1590,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1587,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "32799:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1589,
																		"indexExpression": {
																			"id": 1588,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "32808:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "32799:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "32781:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1591,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "32814:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																				"typeString": "struct NftStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1592,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1088,
																		"src": "32814:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1593,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1562,
																		"src": "32828:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "32814:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32781:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1596,
															"nodeType": "ExpressionStatement",
															"src": "32781:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1600,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32866:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32866:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1604,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "32886:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NftStaking_$2195",
																					"typeString": "contract NftStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NftStaking_$2195",
																					"typeString": "contract NftStaking"
																				}
																			],
																			"id": 1603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "32878:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1602,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "32878:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32878:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1606,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "32893:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1608,
																		"indexExpression": {
																			"id": 1607,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "32902:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "32893:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1597,
																		"name": "nftToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "32844:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1076",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1029,
																	"src": "32844:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32844:61:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1610,
															"nodeType": "ExpressionStatement",
															"src": "32844:61:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1565,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1562,
														"src": "32670:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1566,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "32674:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "32674:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32670:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1612,
												"initializationExpression": {
													"assignments": [
														1562
													],
													"declarations": [
														{
															"constant": false,
															"id": 1562,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "32663:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1612,
															"src": "32655:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1561,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "32655:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1564,
													"initialValue": {
														"hexValue": "30",
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32667:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "32655:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "32691:4:0",
														"subExpression": {
															"id": 1569,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "32691:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1571,
													"nodeType": "ExpressionStatement",
													"src": "32691:4:0"
												},
												"nodeType": "ForStatement",
												"src": "32651:266:0"
											},
											{
												"expression": {
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1613,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "32927:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1088,
														"src": "32927:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1619,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "32957:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1616,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "32941:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																		"typeString": "struct NftStaking.UserInfo storage pointer"
																	}
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1088,
																"src": "32941:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 399,
															"src": "32941:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32941:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32927:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "32927:42:0"
											},
											{
												"expression": {
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1623,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "32980:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1090,
														"src": "32980:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33035:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1629,
																		"name": "accGHSPPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "33014:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1626,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "32998:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																				"typeString": "struct NftStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1088,
																		"src": "32998:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "32998:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32998:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 444,
															"src": "32998:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32998:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32980:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "32980:60:0"
											},
											{
												"expression": {
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1636,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "33051:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastStakedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1094,
														"src": "33051:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1639,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "33073:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "33073:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33051:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "33051:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1644,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33111:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33111:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1646,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "33123:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1643,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "33104:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33104:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1648,
												"nodeType": "EmitStatement",
												"src": "33099:33:0"
											}
										]
									},
									"functionSelector": "0fbf0a93",
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "31644:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "31669:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "31650:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1431,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "31650:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1432,
													"nodeType": "ArrayTypeName",
													"src": "31650:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31649:29:0"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31688:0:0"
									},
									"scope": 2195,
									"src": "31635:1505:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1919,
										"nodeType": "Block",
										"src": "33203:1693:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1657,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "33222:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "33222:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33240:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33222:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4654205374616b696e673a20456d707479204172726179",
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33243:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5",
																"typeString": "literal_string \"NFT Staking: Empty Array\""
															},
															"value": "NFT Staking: Empty Array"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5",
																"typeString": "literal_string \"NFT Staking: Empty Array\""
															}
														],
														"id": 1656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33214:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "33214:56:0"
											},
											{
												"body": {
													"id": 1712,
													"nodeType": "Block",
													"src": "33326:318:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1676,
																				"name": "_ownedTokensIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1129,
																				"src": "33349:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1680,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1677,
																					"name": "tokenIds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1653,
																					"src": "33367:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 1679,
																				"indexExpression": {
																					"id": 1678,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1665,
																					"src": "33376:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "33367:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "33349:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33383:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "33349:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e667420556e7374616b696e673a20746f6b656e206e6f74207374616b6564206f7220696e636f727265637420746f6b656e206f776e65722e",
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33386:59:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b",
																			"typeString": "literal_string \"Nft Unstaking: token not staked or incorrect token owner.\""
																		},
																		"value": "Nft Unstaking: token not staked or incorrect token owner."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b",
																			"typeString": "literal_string \"Nft Unstaking: token not staked or incorrect token owner.\""
																		}
																	],
																	"id": 1675,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "33341:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33341:105:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1685,
															"nodeType": "ExpressionStatement",
															"src": "33341:105:0"
														},
														{
															"body": {
																"id": 1710,
																"nodeType": "Block",
																"src": "33510:123:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1706,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 1700,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1653,
																							"src": "33537:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 1702,
																						"indexExpression": {
																							"id": 1701,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1665,
																							"src": "33546:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "33537:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"baseExpression": {
																							"id": 1703,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1653,
																							"src": "33552:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 1705,
																						"indexExpression": {
																							"id": 1704,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1687,
																							"src": "33561:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "33552:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "33537:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4e4654205374616b696e673a206475706c696361746520746f6b656e2069647320696e20696e70757420706172616d732e",
																					"id": 1707,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "33565:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55",
																						"typeString": "literal_string \"NFT Staking: duplicate token ids in input params.\""
																					},
																					"value": "NFT Staking: duplicate token ids in input params."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55",
																						"typeString": "literal_string \"NFT Staking: duplicate token ids in input params.\""
																					}
																				],
																				"id": 1699,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "33529:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33529:88:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1709,
																		"nodeType": "ExpressionStatement",
																		"src": "33529:88:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1692,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "33484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1693,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "33488:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "33488:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33484:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1711,
															"initializationExpression": {
																"assignments": [
																	1687
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1687,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "33473:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1711,
																		"src": "33465:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1686,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "33465:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1691,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1688,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "33477:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33481:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "33477:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "33465:17:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "33505:4:0",
																	"subExpression": {
																		"id": 1696,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "33505:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1698,
																"nodeType": "ExpressionStatement",
																"src": "33505:4:0"
															},
															"nodeType": "ForStatement",
															"src": "33461:172:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1668,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "33300:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1669,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "33304:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "33304:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33300:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1713,
												"initializationExpression": {
													"assignments": [
														1665
													],
													"declarations": [
														{
															"constant": false,
															"id": 1665,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "33293:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1713,
															"src": "33285:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1664,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "33285:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1667,
													"initialValue": {
														"hexValue": "30",
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "33285:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "33321:4:0",
														"subExpression": {
															"id": 1672,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "33321:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1674,
													"nodeType": "ExpressionStatement",
													"src": "33321:4:0"
												},
												"nodeType": "ForStatement",
												"src": "33281:363:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1714,
														"name": "updateStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "33656:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33656:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "33656:14:0"
											},
											{
												"assignments": [
													1719
												],
												"declarations": [
													{
														"constant": false,
														"id": 1719,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "33698:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1919,
														"src": "33681:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
															"typeString": "struct NftStaking.UserInfo"
														},
														"typeName": {
															"id": 1718,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1717,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1095,
																"src": "33681:8:0"
															},
															"referencedDeclaration": 1095,
															"src": "33681:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1724,
												"initialValue": {
													"baseExpression": {
														"id": 1720,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "33705:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
															"typeString": "mapping(address => struct NftStaking.UserInfo storage ref)"
														}
													},
													"id": 1723,
													"indexExpression": {
														"expression": {
															"id": 1721,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "33714:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "33714:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33705:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1095_storage",
														"typeString": "struct NftStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33681:44:0"
											},
											{
												"assignments": [
													1726
												],
												"declarations": [
													{
														"constant": false,
														"id": 1726,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "33744:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1919,
														"src": "33736:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1725,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33736:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1739,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1736,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "33801:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																	"typeString": "struct NftStaking.UserInfo storage pointer"
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1090,
															"src": "33801:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33791:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1730,
																			"name": "accGHSPPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "33770:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1727,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1719,
																				"src": "33754:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																					"typeString": "struct NftStaking.UserInfo storage pointer"
																				}
																			},
																			"id": 1728,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1088,
																			"src": "33754:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 429,
																		"src": "33754:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33754:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 444,
																"src": "33754:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33754:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 414,
														"src": "33754:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33754:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33736:81:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1744,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "33860:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NftStaking_$2195",
																			"typeString": "contract NftStaking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NftStaking_$2195",
																			"typeString": "contract NftStaking"
																		}
																	],
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33852:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1742,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "33852:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33852:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1740,
																"name": "ghspToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "33832:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$100",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 39,
															"src": "33832:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33832:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1747,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "33869:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33832:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1760,
												"nodeType": "IfStatement",
												"src": "33828:121:0",
												"trueBody": {
													"id": 1759,
													"nodeType": "Block",
													"src": "33878:71:0",
													"statements": [
														{
															"expression": {
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1749,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1726,
																	"src": "33893:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1754,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "33931:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_NftStaking_$2195",
																						"typeString": "contract NftStaking"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_NftStaking_$2195",
																						"typeString": "contract NftStaking"
																					}
																				],
																				"id": 1753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "33923:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1752,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "33923:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33923:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1750,
																			"name": "ghspToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "33903:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 39,
																		"src": "33903:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33903:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33893:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1758,
															"nodeType": "ExpressionStatement",
															"src": "33893:44:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1761,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "33959:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "pendingAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1092,
														"src": "33959:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1767,
																"name": "pending",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "34003:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1764,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "33980:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																		"typeString": "struct NftStaking.UserInfo storage pointer"
																	}
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "pendingAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1092,
																"src": "33980:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 399,
															"src": "33980:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33980:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33959:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "33959:52:0"
											},
											{
												"assignments": [
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "34030:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1919,
														"src": "34022:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1775,
												"initialValue": {
													"expression": {
														"id": 1773,
														"name": "tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "34044:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "34044:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34022:37:0"
											},
											{
												"body": {
													"id": 1881,
													"nodeType": "Block",
													"src": "34111:543:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1786,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "34129:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1790,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1787,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1653,
																			"src": "34147:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1789,
																		"indexExpression": {
																			"id": 1788,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1777,
																			"src": "34156:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "34147:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "34129:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1791,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1719,
																						"src": "34164:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																							"typeString": "struct NftStaking.UserInfo storage pointer"
																						}
																					},
																					"id": 1792,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1088,
																					"src": "34164:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1793,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1777,
																					"src": "34178:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "34164:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "34182:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "34164:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1797,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "34163:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34129:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1845,
															"nodeType": "IfStatement",
															"src": "34126:320:0",
															"trueBody": {
																"id": 1844,
																"nodeType": "Block",
																"src": "34185:261:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1799,
																						"name": "_ownedTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1125,
																						"src": "34204:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																							"typeString": "mapping(address => mapping(uint256 => uint256))"
																						}
																					},
																					"id": 1807,
																					"indexExpression": {
																						"expression": {
																							"id": 1800,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "34217:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1801,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "34217:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "34204:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1808,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1802,
																						"name": "_ownedTokensIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1129,
																						"src": "34229:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																							"typeString": "mapping(uint256 => uint256)"
																						}
																					},
																					"id": 1806,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 1803,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1653,
																							"src": "34247:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 1805,
																						"indexExpression": {
																							"id": 1804,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1777,
																							"src": "34256:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "34247:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "34229:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "34204:56:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1809,
																						"name": "_ownedTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1125,
																						"src": "34263:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																							"typeString": "mapping(address => mapping(uint256 => uint256))"
																						}
																					},
																					"id": 1812,
																					"indexExpression": {
																						"expression": {
																							"id": 1810,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "34276:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1811,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "34276:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "34263:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1820,
																				"indexExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1818,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1816,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"id": 1813,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1719,
																										"src": "34289:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																											"typeString": "struct NftStaking.UserInfo storage pointer"
																										}
																									},
																									"id": 1814,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "amount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1088,
																									"src": "34289:11:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 1815,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1777,
																									"src": "34303:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "34289:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 1817,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "34307:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "34289:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1819,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "34288:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "34263:47:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "34204:106:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1822,
																		"nodeType": "ExpressionStatement",
																		"src": "34204:106:0"
																	},
																	{
																		"expression": {
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1823,
																					"name": "_ownedTokensIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "34330:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1836,
																				"indexExpression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 1824,
																							"name": "_ownedTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1125,
																							"src": "34348:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																								"typeString": "mapping(address => mapping(uint256 => uint256))"
																							}
																						},
																						"id": 1827,
																						"indexExpression": {
																							"expression": {
																								"id": 1825,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "34361:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1826,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "34361:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "34348:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																							"typeString": "mapping(uint256 => uint256)"
																						}
																					},
																					"id": 1835,
																					"indexExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1833,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1831,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 1828,
																											"name": "user",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1719,
																											"src": "34374:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																												"typeString": "struct NftStaking.UserInfo storage pointer"
																											}
																										},
																										"id": 1829,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "amount",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1088,
																										"src": "34374:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "-",
																									"rightExpression": {
																										"id": 1830,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1777,
																										"src": "34388:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "34374:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1832,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "34392:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "34374:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1834,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "34373:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "34348:47:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "34330:66:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1837,
																					"name": "_ownedTokensIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "34399:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1841,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1838,
																						"name": "tokenIds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1653,
																						"src": "34417:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																							"typeString": "uint256[] calldata"
																						}
																					},
																					"id": 1840,
																					"indexExpression": {
																						"id": 1839,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1777,
																						"src": "34426:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "34417:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "34399:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "34330:99:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1843,
																		"nodeType": "ExpressionStatement",
																		"src": "34330:99:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "34460:37:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 1846,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "34467:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1850,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1847,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1653,
																			"src": "34485:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1849,
																		"indexExpression": {
																			"id": 1848,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1777,
																			"src": "34494:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "34485:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "34467:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1852,
															"nodeType": "ExpressionStatement",
															"src": "34460:37:0"
														},
														{
															"expression": {
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "34512:54:0",
																"subExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1853,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "34519:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1856,
																		"indexExpression": {
																			"expression": {
																				"id": 1854,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "34532:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "34532:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "34519:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1864,
																	"indexExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1860,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1857,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1719,
																							"src": "34545:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																								"typeString": "struct NftStaking.UserInfo storage pointer"
																							}
																						},
																						"id": 1858,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1088,
																						"src": "34545:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1859,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1777,
																						"src": "34559:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "34545:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1861,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "34563:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "34545:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1863,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "34544:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "34519:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1866,
															"nodeType": "ExpressionStatement",
															"src": "34512:54:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1872,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "34611:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NftStaking_$2195",
																					"typeString": "contract NftStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NftStaking_$2195",
																					"typeString": "contract NftStaking"
																				}
																			],
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34603:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1870,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34603:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34603:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1874,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "34618:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "34618:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1876,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1653,
																			"src": "34630:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1878,
																		"indexExpression": {
																			"id": 1877,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1777,
																			"src": "34639:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "34630:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1867,
																		"name": "nftToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "34581:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1076",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1029,
																	"src": "34581:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34581:61:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1880,
															"nodeType": "ExpressionStatement",
															"src": "34581:61:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1780,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "34089:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1781,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "34093:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34089:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1882,
												"initializationExpression": {
													"assignments": [
														1777
													],
													"declarations": [
														{
															"constant": false,
															"id": 1777,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "34082:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1882,
															"src": "34074:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1776,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34074:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1779,
													"initialValue": {
														"hexValue": "30",
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34086:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "34074:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "34106:4:0",
														"subExpression": {
															"id": 1783,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "34106:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1785,
													"nodeType": "ExpressionStatement",
													"src": "34106:4:0"
												},
												"nodeType": "ForStatement",
												"src": "34070:584:0"
											},
											{
												"expression": {
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1883,
														"name": "totalStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "34664:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1886,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "34706:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1884,
																"name": "totalStakedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "34684:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 414,
															"src": "34684:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34684:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34664:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1889,
												"nodeType": "ExpressionStatement",
												"src": "34664:54:0"
											},
											{
												"expression": {
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1890,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "34729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1892,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1088,
														"src": "34729:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1896,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "34759:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1893,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "34743:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																		"typeString": "struct NftStaking.UserInfo storage pointer"
																	}
																},
																"id": 1894,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1088,
																"src": "34743:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 414,
															"src": "34743:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34743:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34729:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1899,
												"nodeType": "ExpressionStatement",
												"src": "34729:42:0"
											},
											{
												"expression": {
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1900,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "34782:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1090,
														"src": "34782:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34837:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1906,
																		"name": "accGHSPPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "34816:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1903,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1719,
																			"src": "34800:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																				"typeString": "struct NftStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1088,
																		"src": "34800:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "34800:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34800:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 444,
															"src": "34800:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34800:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34782:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "34782:60:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1914,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34867:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34867:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1916,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "34879:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1913,
														"name": "UnStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "34858:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory)"
														}
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34858:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1918,
												"nodeType": "EmitStatement",
												"src": "34853:35:0"
											}
										]
									},
									"functionSelector": "e449f341",
									"id": 1920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "33157:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "33184:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "33165:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1651,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "33165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1652,
													"nodeType": "ArrayTypeName",
													"src": "33165:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33164:29:0"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33203:0:0"
									},
									"scope": 2195,
									"src": "33148:1748:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "34969:159:0",
										"statements": [
											{
												"assignments": [
													1928
												],
												"declarations": [
													{
														"constant": false,
														"id": 1928,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "34988:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "34980:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1927,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1932,
												"initialValue": {
													"arguments": [
														{
															"id": 1930,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "35010:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1929,
														"name": "_getPending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "34998:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34998:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34980:36:0"
											},
											{
												"assignments": [
													1934
												],
												"declarations": [
													{
														"constant": false,
														"id": 1934,
														"mutability": "mutable",
														"name": "_harvestFee",
														"nameLocation": "35035:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "35027:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35027:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1942,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35077:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1937,
																	"name": "harvestFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "35061:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1935,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1928,
																	"src": "35049:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 429,
																"src": "35049:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35049:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 444,
														"src": "35049:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35049:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35027:54:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1943,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1928,
														"src": "35099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1944,
														"name": "_harvestFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "35109:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35099:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1926,
												"id": 1946,
												"nodeType": "Return",
												"src": "35092:28:0"
											}
										]
									},
									"functionSelector": "d086c254",
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPending",
									"nameLocation": "34913:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "34932:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "34924:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34924:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34923:15:0"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "34960:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34959:9:0"
									},
									"scope": 2195,
									"src": "34904:224:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2021,
										"nodeType": "Block",
										"src": "35207:486:0",
										"statements": [
											{
												"assignments": [
													1957
												],
												"declarations": [
													{
														"constant": false,
														"id": 1957,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "35235:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2021,
														"src": "35218:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
															"typeString": "struct NftStaking.UserInfo"
														},
														"typeName": {
															"id": 1956,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1955,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1095,
																"src": "35218:8:0"
															},
															"referencedDeclaration": 1095,
															"src": "35218:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1961,
												"initialValue": {
													"baseExpression": {
														"id": 1958,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "35242:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
															"typeString": "mapping(address => struct NftStaking.UserInfo storage ref)"
														}
													},
													"id": 1960,
													"indexExpression": {
														"id": 1959,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1950,
														"src": "35251:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35242:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1095_storage",
														"typeString": "struct NftStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35218:39:0"
											},
											{
												"assignments": [
													1963
												],
												"declarations": [
													{
														"constant": false,
														"id": 1963,
														"mutability": "mutable",
														"name": "acc",
														"nameLocation": "35276:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2021,
														"src": "35268:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1962,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35268:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1965,
												"initialValue": {
													"id": 1964,
													"name": "accGHSPPerShare",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1105,
													"src": "35282:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35268:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1966,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "35312:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "35312:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1968,
															"name": "lastRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "35327:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "35312:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1970,
															"name": "totalStakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "35346:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35367:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "35346:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "35312:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2003,
												"nodeType": "IfStatement",
												"src": "35308:285:0",
												"trueBody": {
													"id": 2002,
													"nodeType": "Block",
													"src": "35370:223:0",
													"statements": [
														{
															"assignments": [
																1975
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1975,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "35393:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2002,
																	"src": "35385:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1974,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "35385:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1981,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1977,
																		"name": "lastRewardBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "35420:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1978,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "35437:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "35437:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1976,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "35406:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35406:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "35385:65:0"
														},
														{
															"assignments": [
																1983
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1983,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "35473:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2002,
																	"src": "35465:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1982,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "35465:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1988,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1986,
																		"name": "rewardPerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "35497:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1984,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1975,
																		"src": "35482:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "35482:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35482:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "35465:47:0"
														},
														{
															"expression": {
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1989,
																	"name": "acc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "35527:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1997,
																					"name": "totalStakedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "35562:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1994,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "35552:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1992,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1983,
																							"src": "35541:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1993,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 429,
																						"src": "35541:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1995,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "35541:16:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 444,
																				"src": "35541:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35541:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1990,
																			"name": "acc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1963,
																			"src": "35533:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 399,
																		"src": "35533:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35533:48:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35527:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2001,
															"nodeType": "ExpressionStatement",
															"src": "35527:54:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2017,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1957,
																"src": "35666:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																	"typeString": "struct NftStaking.UserInfo storage pointer"
																}
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "pendingAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1092,
															"src": "35666:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2013,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1957,
																		"src": "35645:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																			"typeString": "struct NftStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "35645:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653132",
																			"id": 2010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35635:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2007,
																					"name": "acc",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1963,
																					"src": "35626:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 2004,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1957,
																						"src": "35610:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																							"typeString": "struct NftStaking.UserInfo storage pointer"
																						}
																					},
																					"id": 2005,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1088,
																					"src": "35610:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2006,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 429,
																				"src": "35610:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35610:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 444,
																		"src": "35610:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35610:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 414,
																"src": "35610:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35610:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 399,
														"src": "35610:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35610:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1954,
												"id": 2020,
												"nodeType": "Return",
												"src": "35603:82:0"
											}
										]
									},
									"id": 2022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPending",
									"nameLocation": "35149:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "35169:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "35161:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35160:15:0"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "35198:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35197:9:0"
									},
									"scope": 2195,
									"src": "35140:553:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2142,
										"nodeType": "Block",
										"src": "35729:809:0",
										"statements": [
											{
												"assignments": [
													2026
												],
												"declarations": [
													{
														"constant": false,
														"id": 2026,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "35748:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 2142,
														"src": "35740:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2025,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35740:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2031,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2028,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35775:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35775:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2027,
														"name": "_getPending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "35763:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35763:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35740:46:0"
											},
											{
												"assignments": [
													2034
												],
												"declarations": [
													{
														"constant": false,
														"id": 2034,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "35814:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2142,
														"src": "35797:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
															"typeString": "struct NftStaking.UserInfo"
														},
														"typeName": {
															"id": 2033,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2032,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1095,
																"src": "35797:8:0"
															},
															"referencedDeclaration": 1095,
															"src": "35797:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2039,
												"initialValue": {
													"baseExpression": {
														"id": 2035,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "35821:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
															"typeString": "mapping(address => struct NftStaking.UserInfo storage ref)"
														}
													},
													"id": 2038,
													"indexExpression": {
														"expression": {
															"id": 2036,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "35830:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "35830:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35821:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1095_storage",
														"typeString": "struct NftStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35797:44:0"
											},
											{
												"assignments": [
													2041
												],
												"declarations": [
													{
														"constant": false,
														"id": 2041,
														"mutability": "mutable",
														"name": "_harvestFee",
														"nameLocation": "35860:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 2142,
														"src": "35852:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35852:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2049,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35907:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2044,
																	"name": "harvestFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "35891:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2042,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2026,
																	"src": "35874:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 429,
																"src": "35874:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35874:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 444,
														"src": "35874:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35874:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35852:59:0"
											},
											{
												"assignments": [
													2051
												],
												"declarations": [
													{
														"constant": false,
														"id": 2051,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "35930:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2142,
														"src": "35922:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35922:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2055,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2052,
														"name": "rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2026,
														"src": "35939:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2053,
														"name": "_harvestFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "35954:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35939:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35922:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2060,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "36008:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NftStaking_$2195",
																			"typeString": "contract NftStaking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NftStaking_$2195",
																			"typeString": "contract NftStaking"
																		}
																	],
																	"id": 2059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36000:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2058,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "36000:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36000:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2056,
																"name": "ghspToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "35980:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$100",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 39,
															"src": "35980:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35980:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2063,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2051,
														"src": "36017:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35980:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2076,
												"nodeType": "IfStatement",
												"src": "35976:119:0",
												"trueBody": {
													"id": 2075,
													"nodeType": "Block",
													"src": "36025:70:0",
													"statements": [
														{
															"expression": {
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2065,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2051,
																	"src": "36040:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2070,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "36077:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_NftStaking_$2195",
																						"typeString": "contract NftStaking"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_NftStaking_$2195",
																						"typeString": "contract NftStaking"
																					}
																				],
																				"id": 2069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "36069:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2068,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "36069:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36069:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 2066,
																			"name": "ghspToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "36049:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 39,
																		"src": "36049:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36049:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36040:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2074,
															"nodeType": "ExpressionStatement",
															"src": "36040:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2080,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "36128:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "36128:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2082,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "36140:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2077,
															"name": "ghspToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "36105:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "36105:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$100_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36105:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2084,
												"nodeType": "ExpressionStatement",
												"src": "36105:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2089,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "36192:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NftStaking_$2195",
																			"typeString": "contract NftStaking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NftStaking_$2195",
																			"typeString": "contract NftStaking"
																		}
																	],
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36184:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2087,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "36184:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36184:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2085,
																"name": "ghspToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "36164:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$100",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 39,
															"src": "36164:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36164:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2092,
														"name": "_harvestFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "36201:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36164:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2105,
												"nodeType": "IfStatement",
												"src": "36160:129:0",
												"trueBody": {
													"id": 2104,
													"nodeType": "Block",
													"src": "36214:75:0",
													"statements": [
														{
															"expression": {
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2094,
																	"name": "_harvestFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "36229:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2099,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "36271:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_NftStaking_$2195",
																						"typeString": "contract NftStaking"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_NftStaking_$2195",
																						"typeString": "contract NftStaking"
																					}
																				],
																				"id": 2098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "36263:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2097,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "36263:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36263:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 2095,
																			"name": "ghspToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "36243:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 39,
																		"src": "36243:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36243:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36229:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2103,
															"nodeType": "ExpressionStatement",
															"src": "36229:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2109,
															"name": "feeWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "36322:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2110,
															"name": "_harvestFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "36333:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2106,
															"name": "ghspToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "36299:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "36299:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$100_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36299:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2112,
												"nodeType": "ExpressionStatement",
												"src": "36299:46:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2113,
														"name": "updateStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "36356:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36356:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2115,
												"nodeType": "ExpressionStatement",
												"src": "36356:14:0"
											},
											{
												"expression": {
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2116,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "36381:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 2118,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "pendingAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1092,
														"src": "36381:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36402:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "36381:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "36381:22:0"
											},
											{
												"expression": {
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2122,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "36414:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 2124,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1090,
														"src": "36414:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36469:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2128,
																		"name": "accGHSPPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "36448:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2125,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2034,
																			"src": "36432:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																				"typeString": "struct NftStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 2126,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1088,
																		"src": "36432:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "36432:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36432:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 444,
															"src": "36432:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36432:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36414:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2134,
												"nodeType": "ExpressionStatement",
												"src": "36414:60:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2136,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "36498:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "36498:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2138,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "36510:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2139,
															"name": "_harvestFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "36518:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2135,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "36490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36490:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2141,
												"nodeType": "EmitStatement",
												"src": "36485:45:0"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 2143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "35710:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35717:2:0"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35729:0:0"
									},
									"scope": 2195,
									"src": "35701:837:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2193,
										"nodeType": "Block",
										"src": "36611:244:0",
										"statements": [
											{
												"assignments": [
													2153
												],
												"declarations": [
													{
														"constant": false,
														"id": 2153,
														"mutability": "mutable",
														"name": "stakes",
														"nameLocation": "36639:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2193,
														"src": "36622:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2151,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "36622:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2152,
															"nodeType": "ArrayTypeName",
															"src": "36622:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2163,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2157,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "36662:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
																		"typeString": "mapping(address => struct NftStaking.UserInfo storage ref)"
																	}
																},
																"id": 2160,
																"indexExpression": {
																	"expression": {
																		"id": 2158,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "36671:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "36671:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36662:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1095_storage",
																	"typeString": "struct NftStaking.UserInfo storage ref"
																}
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1088,
															"src": "36662:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "36648:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2154,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "36652:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2155,
															"nodeType": "ArrayTypeName",
															"src": "36652:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36648:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36622:68:0"
											},
											{
												"body": {
													"id": 2189,
													"nodeType": "Block",
													"src": "36758:66:0",
													"statements": [
														{
															"expression": {
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2178,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2153,
																		"src": "36773:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2180,
																	"indexExpression": {
																		"id": 2179,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2165,
																		"src": "36780:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "36773:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2181,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "36785:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 2184,
																		"indexExpression": {
																			"expression": {
																				"id": 2182,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "36798:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "36798:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "36785:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2186,
																	"indexExpression": {
																		"id": 2185,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2165,
																		"src": "36810:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "36785:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36773:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2188,
															"nodeType": "ExpressionStatement",
															"src": "36773:39:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2168,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2165,
														"src": "36720:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 2169,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "36724:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
																	"typeString": "mapping(address => struct NftStaking.UserInfo storage ref)"
																}
															},
															"id": 2172,
															"indexExpression": {
																"expression": {
																	"id": 2170,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "36733:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "36733:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "36724:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage",
																"typeString": "struct NftStaking.UserInfo storage ref"
															}
														},
														"id": 2173,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1088,
														"src": "36724:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36720:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2190,
												"initializationExpression": {
													"assignments": [
														2165
													],
													"declarations": [
														{
															"constant": false,
															"id": 2165,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "36713:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2190,
															"src": "36705:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2164,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "36705:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2167,
													"initialValue": {
														"hexValue": "30",
														"id": 2166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36717:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "36705:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "36753:4:0",
														"subExpression": {
															"id": 2175,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "36753:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2177,
													"nodeType": "ExpressionStatement",
													"src": "36753:4:0"
												},
												"nodeType": "ForStatement",
												"src": "36701:123:0"
											},
											{
												"expression": {
													"id": 2191,
													"name": "stakes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2153,
													"src": "36841:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2148,
												"id": 2192,
												"nodeType": "Return",
												"src": "36834:13:0"
											}
										]
									},
									"functionSelector": "2955c60c",
									"id": 2194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfStakes",
									"nameLocation": "36553:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36568:2:0"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "36594:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2145,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "36594:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2146,
													"nodeType": "ArrayTypeName",
													"src": "36594:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36593:18:0"
									},
									"scope": 2195,
									"src": "36544:311:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2196,
							"src": "27968:8890:0",
							"usedErrors": []
						}
					],
					"src": "42:36816:0"
				},
				"id": 0
			}
		}
	}
}