{
	"id": "d67699875db191e332272ec68df1c73c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ghosper-NFT-Staking-MasterChef.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { codehash := extcodehash(account) }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract NftStaking is Ownable {\r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    //Info each user\r\n    struct UserInfo {\r\n        uint256 amount;\r\n        uint256 rewardDebt;\r\n        uint256 pendingAmount;\r\n        uint256 lastStakedTime;\r\n    }\r\n    IERC721 public immutable nftToken;\r\n    IBEP20 public immutable ghspToken;\r\n    uint256 public lastRewardBlock;\r\n    uint256 public accGHSPPerShare;\r\n    uint256 public rewardPerBlock;\r\n    address public feeWallet;\r\n    uint256 public harvestFee;\r\n    uint256 public totalStakedAmount;\r\n    uint256 private _rewardBalance;\r\n    mapping(uint256 => address) allStakes; \r\n\r\n    // Info of each user that stakes LP tokens.\r\n    mapping (address => UserInfo) public userInfo;\r\n\r\n    event Staked(address staker, uint256[] tokenId);\r\n    event UnStaked(address staker, uint256[] tokenId);\r\n    event Harvest(address staker, uint256 amount, uint256 harvestFee);\r\n    event DepositReward(address indexed user, uint256 amount);\r\n    event SetFeeWallet(address indexed _feeWallet);\r\n    event AddUnStakeFee(uint256 _index, uint256 _minDays, uint256 _feePercent);\r\n    event SetHarvestFee(uint256 _harvestFee);\r\n\r\n    constructor(\r\n        IERC721 _nftToken,\r\n        IBEP20 _ghspToken,\r\n        uint256 _rewardPerBlock,\r\n        address _feeWallet\r\n    ) {\r\n        nftToken = _nftToken;\r\n        ghspToken = _ghspToken;\r\n        rewardPerBlock = _rewardPerBlock;\r\n        feeWallet = _feeWallet;\r\n    }\r\n    function setFeeWallet(address _feeWallet) external onlyOwner {\r\n        feeWallet = _feeWallet;\r\n        emit SetFeeWallet(feeWallet);\r\n    }\r\n\r\n    function setHarvestFee(uint256 _feePercent) external onlyOwner {\r\n        require(_feePercent <= 40, \"setHarvestFee: feePercent > 40\");\r\n        harvestFee = _feePercent;\r\n        emit SetHarvestFee(_feePercent);\r\n    }\r\n\r\n    function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {\r\n        return _to.sub(_from);\r\n    }\r\n\r\n    function getRewardBalance() external view returns (uint256) {\r\n        if (block.number > lastRewardBlock && totalStakedAmount != 0) {\r\n            uint256 multiplier = getMultiplier(lastRewardBlock, block.number);\r\n            uint256 reward = multiplier.mul(rewardPerBlock);\r\n            return _rewardBalance.sub(reward);\r\n        }\r\n        else {\r\n            return _rewardBalance;\r\n        }\r\n    }\r\n\r\n    function depositReward(uint256 _amount) external onlyOwner {\r\n        ghspToken.safeTransferFrom(msg.sender, address(this), _amount);\r\n        emit DepositReward(msg.sender, _amount);\r\n        _rewardBalance = _rewardBalance.add(_amount);\r\n    }\r\n\r\n    function updateStatus() private {\r\n        if (block.number <= lastRewardBlock) {\r\n            return;\r\n        }\r\n        if (totalStakedAmount == 0) {\r\n            lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(lastRewardBlock, block.number);\r\n        uint256 reward = multiplier.mul(rewardPerBlock);\r\n        if (_rewardBalance == 0) {\r\n            lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        if (_rewardBalance < reward) {\r\n            accGHSPPerShare = accGHSPPerShare.add(_rewardBalance.mul(1e12).div(totalStakedAmount));\r\n            _rewardBalance = 0;\r\n        } else {\r\n            _rewardBalance = _rewardBalance.sub(reward);\r\n            accGHSPPerShare = accGHSPPerShare.add(reward.mul(1e12).div(totalStakedAmount));\r\n        }\r\n        lastRewardBlock = block.number;\r\n    }\r\n    function stake(uint256[] calldata tokenIds) external {\r\n        require(tokenIds.length > 0, \"NFT Staking: Empty Array\");\r\n        for(uint256 i = 0; i < tokenIds.length; i ++){\r\n            require(nftToken.ownerOf(tokenIds[i]) == msg.sender, \"NFT Staking: not owner of token.\");\r\n            require(allStakes[tokenIds[i]] == address(0), \"NFT Staking: token already staked.\");\r\n            for(uint256 j = i + 1; j < tokenIds.length; j ++){\r\n                require(tokenIds[i] != tokenIds[j], \"NFT Staking: duplicate token ids in input params.\");\r\n            }\r\n        }\r\n        updateStatus();\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt);\r\n            user.pendingAmount = user.pendingAmount.add(pending);\r\n        }\r\n        uint256 tokenAmount = tokenIds.length;\r\n        totalStakedAmount = totalStakedAmount.add(tokenAmount);\r\n        user.amount = user.amount.add(tokenAmount);\r\n        user.rewardDebt = user.amount.mul(accGHSPPerShare).div(1e12);\r\n        user.lastStakedTime = block.timestamp;\r\n        for(uint256 i = 0; i < tokenIds.length; i ++){\r\n            allStakes[tokenIds[i]] = msg.sender;\r\n            nftToken.transferFrom(msg.sender, address(this), tokenIds[i]);\r\n        }\r\n        emit Staked(msg.sender, tokenIds);\r\n    }\r\n\r\n    function unstake(uint256[] calldata tokenIds) external {\r\n        require(tokenIds.length > 0, \"NFT Staking: Empty Array\");\r\n        for(uint256 i = 0; i < tokenIds.length; i ++){\r\n            uint256 tokenId = tokenIds[i];\r\n            require(allStakes[tokenId] == msg.sender, \"Nft Unstaking: token not staked or incorrect token owner.\");\r\n            for(uint256 j = i + 1; j < tokenIds.length; j ++){\r\n                require(tokenIds[i] != tokenIds[j], \"NFT Staking: duplicate token ids in input params.\");\r\n            }\r\n        }\r\n\r\n        updateStatus();\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        uint256 pending = user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt);\r\n        if (ghspToken.balanceOf(address(this)) < pending) {\r\n            pending = ghspToken.balanceOf(address(this));\r\n        }\r\n        user.pendingAmount = user.pendingAmount.add(pending);\r\n        uint256 tokenAmount = tokenIds.length;\r\n        totalStakedAmount = totalStakedAmount.sub(tokenAmount);\r\n        user.amount = user.amount.sub(tokenAmount);\r\n        user.rewardDebt = user.amount.mul(accGHSPPerShare).div(1e12);\r\n        for(uint256 i = 0; i < tokenAmount; i ++){\r\n            allStakes[tokenIds[i]] = address(0);\r\n            nftToken.transferFrom(address(this), msg.sender, tokenIds[i]);\r\n        }\r\n        emit UnStaked(msg.sender, tokenIds);\r\n    }\r\n\r\n    function getPending(address _user) public view returns (uint256) {\r\n        uint256 pending = _getPending(_user);\r\n        uint256 _harvestFee = pending.mul(harvestFee).div(100);\r\n        return pending - _harvestFee;\r\n    }\r\n    \r\n    function _getPending(address _user) private view returns (uint256) {\r\n        UserInfo storage user = userInfo[_user];\r\n        uint256 acc = accGHSPPerShare;\r\n        if (block.number > lastRewardBlock && totalStakedAmount != 0) {\r\n            uint256 multiplier = getMultiplier(lastRewardBlock, block.number);\r\n            uint256 reward = multiplier.mul(rewardPerBlock);\r\n            acc = acc.add(reward.mul(1e12).div(totalStakedAmount));\r\n        }\r\n        return user.amount.mul(acc).div(1e12).sub(user.rewardDebt).add(user.pendingAmount);\r\n    }\r\n\r\n    function harvest() external {\r\n        uint256 rewardAmount = _getPending(msg.sender);\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        uint256 _harvestFee = rewardAmount.mul(harvestFee).div(100);\r\n        uint256 amount = rewardAmount - _harvestFee;\r\n        if (ghspToken.balanceOf(address(this)) < amount) {\r\n            amount = ghspToken.balanceOf(address(this));\r\n        }\r\n        ghspToken.safeTransfer(msg.sender, amount);\r\n\r\n        if (ghspToken.balanceOf(address(this)) < _harvestFee) {\r\n            _harvestFee = ghspToken.balanceOf(address(this));\r\n        }\r\n        ghspToken.safeTransfer(feeWallet, _harvestFee);\r\n        updateStatus();\r\n        user.pendingAmount = 0;\r\n        user.rewardDebt = user.amount.mul(accGHSPPerShare).div(1e12);\r\n        emit Harvest(msg.sender, amount, _harvestFee);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Ghosper-NFT-Staking-MasterChef.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ghosper-NFT-Staking-MasterChef.sol\":16344:22428  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16344:22428  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206fe27c2cb5dcb60dc0b4eb1a09f486c68a7aae50d94d37bc56fb0275d7abf75164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206fe27c2cb5dcb60dc0b4eb1a09f486c68a7aae50d94d37bc56fb0275d7abf75164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xE27C2CB5DCB60DC0B4EB1A09F486C68A PUSH27 0xAE50D94D37BC56FB0275D7ABF75164736F6C634300080700330000 ",
							"sourceMap": "16344:6084:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206fe27c2cb5dcb60dc0b4eb1a09f486c68a7aae50d94d37bc56fb0275d7abf75164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xE27C2CB5DCB60DC0B4EB1A09F486C68A PUSH27 0xAE50D94D37BC56FB0275D7ABF75164736F6C634300080700330000 ",
							"sourceMap": "16344:6084:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16344,
									"end": 22428,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206fe27c2cb5dcb60dc0b4eb1a09f486c68a7aae50d94d37bc56fb0275d7abf75164736f6c63430008070033",
									".code": [
										{
											"begin": 16344,
											"end": 22428,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 22428,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ghosper-NFT-Staking-MasterChef.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xf4144d31b8f8091fc3acaf31ac6e8a6c919488f9a72d3de8e3900a07b285ad37\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://70d1eff3ae068549ea5c7747876d4f1164bffbbe3500d6e6970abc3cdeaf62fb\",\"dweb:/ipfs/QmbT99ZghqPq5qGxHVy9u1dpXXf8JPSkAqvyMK5pQPwZu6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ghosper-NFT-Staking-MasterChef.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xf4144d31b8f8091fc3acaf31ac6e8a6c919488f9a72d3de8e3900a07b285ad37\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://70d1eff3ae068549ea5c7747876d4f1164bffbbe3500d6e6970abc3cdeaf62fb\",\"dweb:/ipfs/QmbT99ZghqPq5qGxHVy9u1dpXXf8JPSkAqvyMK5pQPwZu6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ghosper-NFT-Staking-MasterChef.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xf4144d31b8f8091fc3acaf31ac6e8a6c919488f9a72d3de8e3900a07b285ad37\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://70d1eff3ae068549ea5c7747876d4f1164bffbbe3500d6e6970abc3cdeaf62fb\",\"dweb:/ipfs/QmbT99ZghqPq5qGxHVy9u1dpXXf8JPSkAqvyMK5pQPwZu6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ghosper-NFT-Staking-MasterChef.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xf4144d31b8f8091fc3acaf31ac6e8a6c919488f9a72d3de8e3900a07b285ad37\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://70d1eff3ae068549ea5c7747876d4f1164bffbbe3500d6e6970abc3cdeaf62fb\",\"dweb:/ipfs/QmbT99ZghqPq5qGxHVy9u1dpXXf8JPSkAqvyMK5pQPwZu6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ghosper-NFT-Staking-MasterChef.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xf4144d31b8f8091fc3acaf31ac6e8a6c919488f9a72d3de8e3900a07b285ad37\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://70d1eff3ae068549ea5c7747876d4f1164bffbbe3500d6e6970abc3cdeaf62fb\",\"dweb:/ipfs/QmbT99ZghqPq5qGxHVy9u1dpXXf8JPSkAqvyMK5pQPwZu6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NftStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "_nftToken",
									"type": "address"
								},
								{
									"internalType": "contract IBEP20",
									"name": "_ghspToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_feeWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_minDays",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_feePercent",
									"type": "uint256"
								}
							],
							"name": "AddUnStakeFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "harvestFee",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_feeWallet",
									"type": "address"
								}
							],
							"name": "SetFeeWallet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_harvestFee",
									"type": "uint256"
								}
							],
							"name": "SetHarvestFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "tokenId",
									"type": "uint256[]"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "tokenId",
									"type": "uint256[]"
								}
							],
							"name": "UnStaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "accGHSPPerShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depositReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getPending",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ghspToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvestFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRewardBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftToken",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeWallet",
									"type": "address"
								}
							],
							"name": "setFeeWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_feePercent",
									"type": "uint256"
								}
							],
							"name": "setHarvestFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "pendingAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastStakedTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ghosper-NFT-Staking-MasterChef.sol\":27968:35927  contract NftStaking is Ownable {\r... */\n  mstore(0x40, 0xc0)\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":29153:29439  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":4790:4822  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":4809:4821  _msgSender() */\n  tag_8\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":4809:4819  _msgSender */\n  shl(0x20, tag_9)\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":4809:4821  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":4790:4808  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":4790:4822  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":29313:29322  _nftToken */\n  dup4\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":29302:29322  nftToken = _nftToken */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":29345:29355  _ghspToken */\n  dup3\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":29333:29355  ghspToken = _ghspToken */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":29383:29398  _rewardPerBlock */\n  dup2\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":29366:29380  rewardPerBlock */\n  0x03\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":29366:29398  rewardPerBlock = _rewardPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":29421:29431  _feeWallet */\n  dup1\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":29409:29418  feeWallet */\n  0x04\n  0x00\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":29409:29431  feeWallet = _feeWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":29153:29439  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":27968:35927  contract NftStaking is Ownable {\r... */\n  jump(tag_12)\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":3751:3849  function _msgSender() internal view virtual returns (address) {\r... */\ntag_9:\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":3804:3811  address */\n  0x00\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":3831:3841  msg.sender */\n  caller\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":3824:3841  return msg.sender */\n  swap1\n  pop\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":3751:3849  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6181:6372  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_10:\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6255:6271  address oldOwner */\n  0x00\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6274:6280  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6255:6280  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6300:6308  newOwner */\n  dup2\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6291:6297  _owner */\n  0x00\n  dup1\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6291:6308  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6355:6363  newOwner */\n  dup2\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6324:6364  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6345:6353  oldOwner */\n  dup2\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6324:6364  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6244:6372  {\r... */\n  pop\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6181:6372  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_16:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_18\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:327   */\ntag_20:\n    /* \"#utility.yul\":227:232   */\n  0x00\n    /* \"#utility.yul\":258:264   */\n  dup2\n    /* \"#utility.yul\":252:265   */\n  mload\n    /* \"#utility.yul\":243:265   */\n  swap1\n  pop\n    /* \"#utility.yul\":274:321   */\n  tag_22\n    /* \"#utility.yul\":315:320   */\n  dup2\n    /* \"#utility.yul\":274:321   */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":156:327   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":333:508   */\ntag_24:\n    /* \"#utility.yul\":406:411   */\n  0x00\n    /* \"#utility.yul\":437:443   */\n  dup2\n    /* \"#utility.yul\":431:444   */\n  mload\n    /* \"#utility.yul\":422:444   */\n  swap1\n  pop\n    /* \"#utility.yul\":453:502   */\n  tag_26\n    /* \"#utility.yul\":496:501   */\n  dup2\n    /* \"#utility.yul\":453:502   */\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":333:508   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":514:657   */\ntag_28:\n    /* \"#utility.yul\":571:576   */\n  0x00\n    /* \"#utility.yul\":602:608   */\n  dup2\n    /* \"#utility.yul\":596:609   */\n  mload\n    /* \"#utility.yul\":587:609   */\n  swap1\n  pop\n    /* \"#utility.yul\":618:651   */\n  tag_30\n    /* \"#utility.yul\":645:650   */\n  dup2\n    /* \"#utility.yul\":618:651   */\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":514:657   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":663:1543   */\ntag_3:\n    /* \"#utility.yul\":790:796   */\n  0x00\n    /* \"#utility.yul\":798:804   */\n  dup1\n    /* \"#utility.yul\":806:812   */\n  0x00\n    /* \"#utility.yul\":814:820   */\n  dup1\n    /* \"#utility.yul\":863:866   */\n  0x80\n    /* \"#utility.yul\":851:860   */\n  dup6\n    /* \"#utility.yul\":842:849   */\n  dup8\n    /* \"#utility.yul\":838:861   */\n  sub\n    /* \"#utility.yul\":834:867   */\n  slt\n    /* \"#utility.yul\":831:951   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":870:949   */\n  tag_34\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":831:951   */\ntag_33:\n    /* \"#utility.yul\":990:991   */\n  0x00\n    /* \"#utility.yul\":1015:1095   */\n  tag_36\n    /* \"#utility.yul\":1087:1094   */\n  dup8\n    /* \"#utility.yul\":1078:1084   */\n  dup3\n    /* \"#utility.yul\":1067:1076   */\n  dup9\n    /* \"#utility.yul\":1063:1085   */\n  add\n    /* \"#utility.yul\":1015:1095   */\n  tag_24\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1005:1095   */\n  swap5\n  pop\n    /* \"#utility.yul\":961:1105   */\n  pop\n    /* \"#utility.yul\":1144:1146   */\n  0x20\n    /* \"#utility.yul\":1170:1248   */\n  tag_37\n    /* \"#utility.yul\":1240:1247   */\n  dup8\n    /* \"#utility.yul\":1231:1237   */\n  dup3\n    /* \"#utility.yul\":1220:1229   */\n  dup9\n    /* \"#utility.yul\":1216:1238   */\n  add\n    /* \"#utility.yul\":1170:1248   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1160:1248   */\n  swap4\n  pop\n    /* \"#utility.yul\":1115:1258   */\n  pop\n    /* \"#utility.yul\":1297:1299   */\n  0x40\n    /* \"#utility.yul\":1323:1387   */\n  tag_38\n    /* \"#utility.yul\":1379:1386   */\n  dup8\n    /* \"#utility.yul\":1370:1376   */\n  dup3\n    /* \"#utility.yul\":1359:1368   */\n  dup9\n    /* \"#utility.yul\":1355:1377   */\n  add\n    /* \"#utility.yul\":1323:1387   */\n  tag_28\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1313:1387   */\n  swap3\n  pop\n    /* \"#utility.yul\":1268:1397   */\n  pop\n    /* \"#utility.yul\":1436:1438   */\n  0x60\n    /* \"#utility.yul\":1462:1526   */\n  tag_39\n    /* \"#utility.yul\":1518:1525   */\n  dup8\n    /* \"#utility.yul\":1509:1515   */\n  dup3\n    /* \"#utility.yul\":1498:1507   */\n  dup9\n    /* \"#utility.yul\":1494:1516   */\n  add\n    /* \"#utility.yul\":1462:1526   */\n  tag_16\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1452:1526   */\n  swap2\n  pop\n    /* \"#utility.yul\":1407:1536   */\n  pop\n    /* \"#utility.yul\":663:1543   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1630:1726   */\ntag_42:\n    /* \"#utility.yul\":1667:1674   */\n  0x00\n    /* \"#utility.yul\":1696:1720   */\n  tag_44\n    /* \"#utility.yul\":1714:1719   */\n  dup3\n    /* \"#utility.yul\":1696:1720   */\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1685:1720   */\n  swap1\n  pop\n    /* \"#utility.yul\":1630:1726   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1732:1842   */\ntag_46:\n    /* \"#utility.yul\":1783:1790   */\n  0x00\n    /* \"#utility.yul\":1812:1836   */\n  tag_48\n    /* \"#utility.yul\":1830:1835   */\n  dup3\n    /* \"#utility.yul\":1812:1836   */\n  tag_42\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1801:1836   */\n  swap1\n  pop\n    /* \"#utility.yul\":1732:1842   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1848:1960   */\ntag_49:\n    /* \"#utility.yul\":1901:1908   */\n  0x00\n    /* \"#utility.yul\":1930:1954   */\n  tag_51\n    /* \"#utility.yul\":1948:1953   */\n  dup3\n    /* \"#utility.yul\":1930:1954   */\n  tag_42\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1919:1954   */\n  swap1\n  pop\n    /* \"#utility.yul\":1848:1960   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1966:2092   */\ntag_45:\n    /* \"#utility.yul\":2003:2010   */\n  0x00\n    /* \"#utility.yul\":2043:2085   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2036:2041   */\n  dup3\n    /* \"#utility.yul\":2032:2086   */\n  and\n    /* \"#utility.yul\":2021:2086   */\n  swap1\n  pop\n    /* \"#utility.yul\":1966:2092   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2098:2175   */\ntag_53:\n    /* \"#utility.yul\":2135:2142   */\n  0x00\n    /* \"#utility.yul\":2164:2169   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  swap1\n  pop\n    /* \"#utility.yul\":2098:2175   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2304:2421   */\ntag_35:\n    /* \"#utility.yul\":2413:2414   */\n  0x00\n    /* \"#utility.yul\":2410:2411   */\n  dup1\n    /* \"#utility.yul\":2403:2415   */\n  revert\n    /* \"#utility.yul\":2427:2549   */\ntag_19:\n    /* \"#utility.yul\":2500:2524   */\n  tag_59\n    /* \"#utility.yul\":2518:2523   */\n  dup2\n    /* \"#utility.yul\":2500:2524   */\n  tag_42\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2493:2498   */\n  dup2\n    /* \"#utility.yul\":2490:2525   */\n  eq\n    /* \"#utility.yul\":2480:2543   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2539:2540   */\n  0x00\n    /* \"#utility.yul\":2536:2537   */\n  dup1\n    /* \"#utility.yul\":2529:2541   */\n  revert\n    /* \"#utility.yul\":2480:2543   */\ntag_60:\n    /* \"#utility.yul\":2427:2549   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2555:2705   */\ntag_23:\n    /* \"#utility.yul\":2642:2680   */\n  tag_62\n    /* \"#utility.yul\":2674:2679   */\n  dup2\n    /* \"#utility.yul\":2642:2680   */\n  tag_46\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2635:2640   */\n  dup2\n    /* \"#utility.yul\":2632:2681   */\n  eq\n    /* \"#utility.yul\":2622:2699   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2695:2696   */\n  0x00\n    /* \"#utility.yul\":2692:2693   */\n  dup1\n    /* \"#utility.yul\":2685:2697   */\n  revert\n    /* \"#utility.yul\":2622:2699   */\ntag_63:\n    /* \"#utility.yul\":2555:2705   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2711:2865   */\ntag_27:\n    /* \"#utility.yul\":2800:2840   */\n  tag_65\n    /* \"#utility.yul\":2834:2839   */\n  dup2\n    /* \"#utility.yul\":2800:2840   */\n  tag_49\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2793:2798   */\n  dup2\n    /* \"#utility.yul\":2790:2841   */\n  eq\n    /* \"#utility.yul\":2780:2859   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2855:2856   */\n  0x00\n    /* \"#utility.yul\":2852:2853   */\n  dup1\n    /* \"#utility.yul\":2845:2857   */\n  revert\n    /* \"#utility.yul\":2780:2859   */\ntag_66:\n    /* \"#utility.yul\":2711:2865   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2871:2993   */\ntag_31:\n    /* \"#utility.yul\":2944:2968   */\n  tag_68\n    /* \"#utility.yul\":2962:2967   */\n  dup2\n    /* \"#utility.yul\":2944:2968   */\n  tag_53\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2937:2942   */\n  dup2\n    /* \"#utility.yul\":2934:2969   */\n  eq\n    /* \"#utility.yul\":2924:2987   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2983:2984   */\n  0x00\n    /* \"#utility.yul\":2980:2981   */\n  dup1\n    /* \"#utility.yul\":2973:2985   */\n  revert\n    /* \"#utility.yul\":2924:2987   */\ntag_69:\n    /* \"#utility.yul\":2871:2993   */\n  pop\n  jump\t// out\n    /* \"Ghosper-NFT-Staking-MasterChef.sol\":27968:35927  contract NftStaking is Ownable {\r... */\ntag_12:\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n  0x00\n  assignImmutable(\"0xd3d302950f380d1a27df9dd44167cfb162563e31196f778e9cbde584eeb2b78c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":27968:35927  contract NftStaking is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ae39cac\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb5962917\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xb5962917\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd06fcba8\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd086c254\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe449f341\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf25f4b56\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x8ae39cac\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x90d49b9d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9f8d181\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x4641257d\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x567e98f9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5e42b455\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x792b55b6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x0fbf0a93\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1959a002\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19fca9f6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1e2720ff\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x43db3c5f\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31500:32890  function stake(uint256[] calldata tokenIds) external {\r... */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28670:28715  mapping (address => UserInfo) public userInfo */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28285:28318  IBEP20 public immutable ghspToken */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30363:30608  function depositReward(uint256 _amount) external onlyOwner {\r... */\n    tag_6:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28362:28392  uint256 public accGHSPPerShare */\n    tag_7:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35087:35924  function harvest() external {\r... */\n    tag_8:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28498:28530  uint256 public totalStakedAmount */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29950:30355  function getRewardBalance() external view returns (uint256) {\r... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5562:5665  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29594:29813  function setHarvestFee(uint256 _feePercent) external onlyOwner {\r... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28399:28428  uint256 public rewardPerBlock */\n    tag_13:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":4911:4998  function owner() public view virtual returns (address) {\r... */\n    tag_14:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29821:29942  function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {\r... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29445:29586  function setFeeWallet(address _feeWallet) external onlyOwner {\r... */\n    tag_16:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28325:28355  uint256 public lastRewardBlock */\n    tag_17:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28466:28491  uint256 public harvestFee */\n    tag_18:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28245:28278  IERC721 public immutable nftToken */\n    tag_19:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34290:34514  function getPending(address _user) public view returns (uint256) {\r... */\n    tag_20:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32898:34282  function unstake(uint256[] calldata tokenIds) external {\r... */\n    tag_21:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28435:28459  address public feeWallet */\n    tag_22:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5820:6021  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_23:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31500:32890  function stake(uint256[] calldata tokenIds) external {\r... */\n    tag_30:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31590:31591  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31572:31580  tokenIds */\n      dup3\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31572:31587  tokenIds.length */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31572:31591  tokenIds.length > 0 */\n      gt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31564:31620  require(tokenIds.length > 0, \"NFT Staking: Empty Array\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31635:31644  uint256 i */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31631:32075  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n    tag_104:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31654:31662  tokenIds */\n      dup3\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31654:31669  tokenIds.length */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31650:31651  i */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31650:31669  i < tokenIds.length */\n      lt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31631:32075  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n      iszero\n      tag_105\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31732:31742  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31699:31742  nftToken.ownerOf(tokenIds[i]) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31699:31707  nftToken */\n      immutable(\"0xd3d302950f380d1a27df9dd44167cfb162563e31196f778e9cbde584eeb2b78c\")\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31699:31715  nftToken.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31716:31724  tokenIds */\n      dup6\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31725:31726  i */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31716:31727  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_107\n      jumpi\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n    tag_107:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31699:31728  nftToken.ownerOf(tokenIds[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_110:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31699:31742  nftToken.ownerOf(tokenIds[i]) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31691:31779  require(nftToken.ownerOf(tokenIds[i]) == msg.sender, \"NFT Staking: not owner of token.\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31836:31837  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31802:31838  allStakes[tokenIds[i]] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31802:31811  allStakes */\n      0x08\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31802:31824  allStakes[tokenIds[i]] */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31812:31820  tokenIds */\n      dup6\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31821:31822  i */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31812:31823  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_119\n      jumpi\n      tag_120\n      tag_109\n      jump\t// in\n    tag_120:\n    tag_119:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31802:31824  allStakes[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31802:31838  allStakes[tokenIds[i]] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31794:31877  require(allStakes[tokenIds[i]] == address(0), \"NFT Staking: token already staked.\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31896:31905  uint256 j */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31912:31913  1 */\n      0x01\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31908:31909  i */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31908:31913  i + 1 */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31896:31913  uint256 j = i + 1 */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31892:32064  for(uint256 j = i + 1; j < tokenIds.length; j ++){\r... */\n    tag_124:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31919:31927  tokenIds */\n      dup4\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31919:31934  tokenIds.length */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31915:31916  j */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31915:31934  j < tokenIds.length */\n      lt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31892:32064  for(uint256 j = i + 1; j < tokenIds.length; j ++){\r... */\n      iszero\n      tag_125\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31983:31991  tokenIds */\n      dup4\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31992:31993  j */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31983:31994  tokenIds[j] */\n      dup2\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_130\n      tag_109\n      jump\t// in\n    tag_130:\n    tag_129:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31968:31976  tokenIds */\n      dup5\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31977:31978  i */\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31968:31979  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_132\n      tag_109\n      jump\t// in\n    tag_132:\n    tag_131:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31968:31994  tokenIds[i] != tokenIds[j] */\n      eq\n      iszero\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31960:32048  require(tokenIds[i] != tokenIds[j], \"NFT Staking: duplicate token ids in input params.\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31936:31940  j ++ */\n      dup1\n      dup1\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      swap2\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31892:32064  for(uint256 j = i + 1; j < tokenIds.length; j ++){\r... */\n      jump(tag_124)\n    tag_125:\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31671:31675  i ++ */\n      dup1\n      dup1\n      tag_138\n      swap1\n      tag_137\n      jump\t// in\n    tag_138:\n      swap2\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31631:32075  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n      jump(tag_104)\n    tag_105:\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32085:32099  updateStatus() */\n      tag_139\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32085:32097  updateStatus */\n      tag_140\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32085:32099  updateStatus() */\n      jump\t// in\n    tag_139:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32110:32131  UserInfo storage user */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32134:32142  userInfo */\n      0x09\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32134:32154  userInfo[msg.sender] */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32143:32153  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32134:32154  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32110:32154  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32183:32184  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32169:32173  user */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32169:32180  user.amount */\n      0x00\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32169:32184  user.amount > 0 */\n      gt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32165:32361  if (user.amount > 0) {\r... */\n      iszero\n      tag_141\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32201:32216  uint256 pending */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32219:32282  user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_142\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32266:32270  user */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32266:32281  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32219:32261  user.amount.mul(accGHSPPerShare).div(1e12) */\n      tag_143\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32256:32260  1e12 */\n      0xe8d4a51000\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32219:32251  user.amount.mul(accGHSPPerShare) */\n      tag_144\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32235:32250  accGHSPPerShare */\n      sload(0x02)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32219:32223  user */\n      dup8\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32219:32230  user.amount */\n      0x00\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32219:32234  user.amount.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32219:32251  user.amount.mul(accGHSPPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32219:32255  user.amount.mul(accGHSPPerShare).div */\n      tag_146\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32219:32261  user.amount.mul(accGHSPPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32219:32265  user.amount.mul(accGHSPPerShare).div(1e12).sub */\n      tag_147\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32219:32282  user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32201:32282  uint256 pending = user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32318:32349  user.pendingAmount.add(pending) */\n      tag_148\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32341:32348  pending */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32318:32322  user */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32318:32336  user.pendingAmount */\n      0x02\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32318:32340  user.pendingAmount.add */\n      tag_149\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32318:32349  user.pendingAmount.add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32297:32301  user */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32297:32315  user.pendingAmount */\n      0x02\n      add\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32297:32349  user.pendingAmount = user.pendingAmount.add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32186:32361  {\r... */\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32165:32361  if (user.amount > 0) {\r... */\n    tag_141:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32371:32390  uint256 tokenAmount */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32393:32401  tokenIds */\n      dup4\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32393:32408  tokenIds.length */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32371:32408  uint256 tokenAmount = tokenIds.length */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32439:32473  totalStakedAmount.add(tokenAmount) */\n      tag_150\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32461:32472  tokenAmount */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32439:32456  totalStakedAmount */\n      sload(0x06)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32439:32460  totalStakedAmount.add */\n      tag_149\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32439:32473  totalStakedAmount.add(tokenAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32419:32436  totalStakedAmount */\n      0x06\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32419:32473  totalStakedAmount = totalStakedAmount.add(tokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32498:32526  user.amount.add(tokenAmount) */\n      tag_151\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32514:32525  tokenAmount */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32498:32502  user */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32498:32509  user.amount */\n      0x00\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32498:32513  user.amount.add */\n      tag_149\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32498:32526  user.amount.add(tokenAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_151:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32484:32488  user */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32484:32495  user.amount */\n      0x00\n      add\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32484:32526  user.amount = user.amount.add(tokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32555:32597  user.amount.mul(accGHSPPerShare).div(1e12) */\n      tag_152\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32592:32596  1e12 */\n      0xe8d4a51000\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32555:32587  user.amount.mul(accGHSPPerShare) */\n      tag_153\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32571:32586  accGHSPPerShare */\n      sload(0x02)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32555:32559  user */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32555:32566  user.amount */\n      0x00\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32555:32570  user.amount.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32555:32587  user.amount.mul(accGHSPPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32555:32591  user.amount.mul(accGHSPPerShare).div */\n      tag_146\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32555:32597  user.amount.mul(accGHSPPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32537:32541  user */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32537:32552  user.rewardDebt */\n      0x01\n      add\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32537:32597  user.rewardDebt = user.amount.mul(accGHSPPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32630:32645  block.timestamp */\n      timestamp\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32608:32612  user */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32608:32627  user.lastStakedTime */\n      0x03\n      add\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32608:32645  user.lastStakedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32660:32669  uint256 i */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32656:32839  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n    tag_154:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32679:32687  tokenIds */\n      dup5\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32679:32694  tokenIds.length */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32675:32676  i */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32675:32694  i < tokenIds.length */\n      lt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32656:32839  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n      iszero\n      tag_155\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32741:32751  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32716:32725  allStakes */\n      0x08\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32716:32738  allStakes[tokenIds[i]] */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32726:32734  tokenIds */\n      dup8\n      dup8\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32735:32736  i */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32726:32737  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_157\n      jumpi\n      tag_158\n      tag_109\n      jump\t// in\n    tag_158:\n    tag_157:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32716:32738  allStakes[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32716:32751  allStakes[tokenIds[i]] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32766:32774  nftToken */\n      immutable(\"0xd3d302950f380d1a27df9dd44167cfb162563e31196f778e9cbde584eeb2b78c\")\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32766:32787  nftToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32788:32798  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32808:32812  this */\n      address\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32815:32823  tokenIds */\n      dup9\n      dup9\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32824:32825  i */\n      dup7\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32815:32826  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_159\n      jumpi\n      tag_160\n      tag_109\n      jump\t// in\n    tag_160:\n    tag_159:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32766:32827  nftToken.transferFrom(msg.sender, address(this), tokenIds[i]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32696:32700  i ++ */\n      dup1\n      dup1\n      tag_166\n      swap1\n      tag_137\n      jump\t// in\n    tag_166:\n      swap2\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32656:32839  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n      jump(tag_154)\n    tag_155:\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32854:32882  Staked(msg.sender, tokenIds) */\n      0x134b166c6094cc1ccbf1e3353ce5c3cd9fd29869051bdb999895854d77cc5ef6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32861:32871  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32873:32881  tokenIds */\n      dup6\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32854:32882  Staked(msg.sender, tokenIds) */\n      mload(0x40)\n      tag_167\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31553:32890  {\r... */\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31500:32890  function stake(uint256[] calldata tokenIds) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28670:28715  mapping (address => UserInfo) public userInfo */\n    tag_34:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28285:28318  IBEP20 public immutable ghspToken */\n    tag_38:\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n      dup2\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30363:30608  function depositReward(uint256 _amount) external onlyOwner {\r... */\n    tag_44:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      tag_170\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5152  _msgSender */\n      tag_171\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      tag_172\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5136  owner */\n      tag_66\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      jump\t// in\n    tag_172:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5123:5191  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30433:30495  ghspToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_177\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30460:30470  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30480:30484  this */\n      address\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30487:30494  _amount */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30433:30442  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30433:30459  ghspToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_178\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30433:30495  ghspToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30525:30535  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30511:30545  DepositReward(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4f7fd5c9e17300a4800fd572ea53fc291e2ee7470d73346d16b357faee4e7210\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30537:30544  _amount */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30511:30545  DepositReward(msg.sender, _amount) */\n      mload(0x40)\n      tag_179\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30573:30600  _rewardBalance.add(_amount) */\n      tag_180\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30592:30599  _amount */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30573:30587  _rewardBalance */\n      sload(0x07)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30573:30591  _rewardBalance.add */\n      tag_149\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30573:30600  _rewardBalance.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30556:30570  _rewardBalance */\n      0x07\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30556:30600  _rewardBalance = _rewardBalance.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30363:30608  function depositReward(uint256 _amount) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28362:28392  uint256 public accGHSPPerShare */\n    tag_46:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35087:35924  function harvest() external {\r... */\n    tag_50:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35126:35146  uint256 rewardAmount */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35149:35172  _getPending(msg.sender) */\n      tag_182\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35161:35171  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35149:35160  _getPending */\n      tag_183\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35149:35172  _getPending(msg.sender) */\n      jump\t// in\n    tag_182:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35126:35172  uint256 rewardAmount = _getPending(msg.sender) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35183:35204  UserInfo storage user */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35207:35215  userInfo */\n      0x09\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35207:35227  userInfo[msg.sender] */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35216:35226  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35207:35227  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35183:35227  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35238:35257  uint256 _harvestFee */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35260:35297  rewardAmount.mul(harvestFee).div(100) */\n      tag_184\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35293:35296  100 */\n      0x64\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35260:35288  rewardAmount.mul(harvestFee) */\n      tag_185\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35277:35287  harvestFee */\n      sload(0x05)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35260:35272  rewardAmount */\n      dup7\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35260:35276  rewardAmount.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35260:35288  rewardAmount.mul(harvestFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35260:35292  rewardAmount.mul(harvestFee).div */\n      tag_146\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35260:35297  rewardAmount.mul(harvestFee).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35238:35297  uint256 _harvestFee = rewardAmount.mul(harvestFee).div(100) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35308:35322  uint256 amount */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35340:35351  _harvestFee */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35325:35337  rewardAmount */\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35325:35351  rewardAmount - _harvestFee */\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35308:35351  uint256 amount = rewardAmount - _harvestFee */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35403:35409  amount */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35366:35375  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35366:35385  ghspToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35394:35398  this */\n      address\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35366:35400  ghspToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_188:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35366:35409  ghspToken.balanceOf(address(this)) < amount */\n      lt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35362:35481  if (ghspToken.balanceOf(address(this)) < amount) {\r... */\n      iszero\n      tag_194\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35435:35444  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35435:35454  ghspToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35463:35467  this */\n      address\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35435:35469  ghspToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_195:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_199:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35426:35469  amount = ghspToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35362:35481  if (ghspToken.balanceOf(address(this)) < amount) {\r... */\n    tag_194:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35491:35533  ghspToken.safeTransfer(msg.sender, amount) */\n      tag_200\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35514:35524  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35526:35532  amount */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35491:35500  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35491:35513  ghspToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_201\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35491:35533  ghspToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35587:35598  _harvestFee */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35550:35559  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35550:35569  ghspToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35578:35582  this */\n      address\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35550:35584  ghspToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_202:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_206:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35550:35598  ghspToken.balanceOf(address(this)) < _harvestFee */\n      lt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35546:35675  if (ghspToken.balanceOf(address(this)) < _harvestFee) {\r... */\n      iszero\n      tag_207\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35629:35638  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35629:35648  ghspToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35657:35661  this */\n      address\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35629:35663  ghspToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_208:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_212:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35615:35663  _harvestFee = ghspToken.balanceOf(address(this)) */\n      swap2\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35546:35675  if (ghspToken.balanceOf(address(this)) < _harvestFee) {\r... */\n    tag_207:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35685:35731  ghspToken.safeTransfer(feeWallet, _harvestFee) */\n      tag_213\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35708:35717  feeWallet */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35719:35730  _harvestFee */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35685:35694  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35685:35707  ghspToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_201\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35685:35731  ghspToken.safeTransfer(feeWallet, _harvestFee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35742:35756  updateStatus() */\n      tag_214\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35742:35754  updateStatus */\n      tag_140\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35742:35756  updateStatus() */\n      jump\t// in\n    tag_214:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35788:35789  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35767:35771  user */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35767:35785  user.pendingAmount */\n      0x02\n      add\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35767:35789  user.pendingAmount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35818:35860  user.amount.mul(accGHSPPerShare).div(1e12) */\n      tag_215\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35855:35859  1e12 */\n      0xe8d4a51000\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35818:35850  user.amount.mul(accGHSPPerShare) */\n      tag_216\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35834:35849  accGHSPPerShare */\n      sload(0x02)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35818:35822  user */\n      dup7\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35818:35829  user.amount */\n      0x00\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35818:35833  user.amount.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35818:35850  user.amount.mul(accGHSPPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35818:35854  user.amount.mul(accGHSPPerShare).div */\n      tag_146\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35818:35860  user.amount.mul(accGHSPPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_215:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35800:35804  user */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35800:35815  user.rewardDebt */\n      0x01\n      add\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35800:35860  user.rewardDebt = user.amount.mul(accGHSPPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35876:35916  Harvest(msg.sender, amount, _harvestFee) */\n      0x71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35884:35894  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35896:35902  amount */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35904:35915  _harvestFee */\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35876:35916  Harvest(msg.sender, amount, _harvestFee) */\n      mload(0x40)\n      tag_217\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35115:35924  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35087:35924  function harvest() external {\r... */\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28498:28530  uint256 public totalStakedAmount */\n    tag_52:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29950:30355  function getRewardBalance() external view returns (uint256) {\r... */\n    tag_55:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30001:30008  uint256 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30040:30055  lastRewardBlock */\n      sload(0x01)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30025:30037  block.number */\n      number\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30025:30055  block.number > lastRewardBlock */\n      gt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30025:30081  block.number > lastRewardBlock && totalStakedAmount != 0 */\n      dup1\n      iszero\n      tag_220\n      jumpi\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30080:30081  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30059:30076  totalStakedAmount */\n      sload(0x06)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30059:30081  totalStakedAmount != 0 */\n      eq\n      iszero\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30025:30081  block.number > lastRewardBlock && totalStakedAmount != 0 */\n    tag_220:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30021:30348  if (block.number > lastRewardBlock && totalStakedAmount != 0) {\r... */\n      iszero\n      tag_221\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30098:30116  uint256 multiplier */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30119:30163  getMultiplier(lastRewardBlock, block.number) */\n      tag_222\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30133:30148  lastRewardBlock */\n      sload(0x01)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30150:30162  block.number */\n      number\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30119:30132  getMultiplier */\n      tag_72\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30119:30163  getMultiplier(lastRewardBlock, block.number) */\n      jump\t// in\n    tag_222:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30098:30163  uint256 multiplier = getMultiplier(lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30178:30192  uint256 reward */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30195:30225  multiplier.mul(rewardPerBlock) */\n      tag_223\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30210:30224  rewardPerBlock */\n      sload(0x03)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30195:30205  multiplier */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30195:30209  multiplier.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30195:30225  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_223:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30178:30225  uint256 reward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30247:30273  _rewardBalance.sub(reward) */\n      tag_224\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30266:30272  reward */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30247:30261  _rewardBalance */\n      sload(0x07)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30247:30265  _rewardBalance.sub */\n      tag_147\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30247:30273  _rewardBalance.sub(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_224:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30240:30273  return _rewardBalance.sub(reward) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_219)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30021:30348  if (block.number > lastRewardBlock && totalStakedAmount != 0) {\r... */\n    tag_221:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30322:30336  _rewardBalance */\n      sload(0x07)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30315:30336  return _rewardBalance */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29950:30355  function getRewardBalance() external view returns (uint256) {\r... */\n    tag_219:\n      swap1\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5562:5665  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_58:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      tag_227\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5152  _msgSender */\n      tag_171\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      tag_228\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5136  owner */\n      tag_66\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      jump\t// in\n    tag_228:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5123:5191  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_175\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5627:5657  _transferOwnership(address(0)) */\n      tag_232\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5654:5655  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5627:5645  _transferOwnership */\n      tag_233\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5627:5657  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_232:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5562:5665  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29594:29813  function setHarvestFee(uint256 _feePercent) external onlyOwner {\r... */\n    tag_61:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      tag_235\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5152  _msgSender */\n      tag_171\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      jump\t// in\n    tag_235:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      tag_236\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5136  owner */\n      tag_66\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      jump\t// in\n    tag_236:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5123:5191  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_175\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29691:29693  40 */\n      0x28\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29676:29687  _feePercent */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29676:29693  _feePercent <= 40 */\n      gt\n      iszero\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29668:29728  require(_feePercent <= 40, \"setHarvestFee: feePercent > 40\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29752:29763  _feePercent */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29739:29749  harvestFee */\n      0x05\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29739:29763  harvestFee = _feePercent */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29779:29805  SetHarvestFee(_feePercent) */\n      0xf419800a2d8930c61d5d9cd782aa72c512cf6be2f79da6db0b8855870b7269ed\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29793:29804  _feePercent */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29779:29805  SetHarvestFee(_feePercent) */\n      mload(0x40)\n      tag_243\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29594:29813  function setHarvestFee(uint256 _feePercent) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28399:28428  uint256 public rewardPerBlock */\n    tag_63:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":4911:4998  function owner() public view virtual returns (address) {\r... */\n    tag_66:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":4957:4964  address */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":4984:4990  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":4977:4990  return _owner */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":4911:4998  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29821:29942  function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {\r... */\n    tag_72:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29893:29900  uint256 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29920:29934  _to.sub(_from) */\n      tag_246\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29928:29933  _from */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29920:29923  _to */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29920:29927  _to.sub */\n      tag_147\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29920:29934  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_246:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29913:29934  return _to.sub(_from) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29821:29942  function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29445:29586  function setFeeWallet(address _feeWallet) external onlyOwner {\r... */\n    tag_76:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      tag_248\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5152  _msgSender */\n      tag_171\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      jump\t// in\n    tag_248:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      tag_249\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5136  owner */\n      tag_66\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      jump\t// in\n    tag_249:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5123:5191  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap1\n      tag_175\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29529:29539  _feeWallet */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29517:29526  feeWallet */\n      0x04\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29517:29539  feeWallet = _feeWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29568:29577  feeWallet */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29555:29578  SetFeeWallet(feeWallet) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3d21e5a2b633291bd1ff5f9c654e402d063783c95759d2ea521b31fb30e4da41\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":29445:29586  function setFeeWallet(address _feeWallet) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28325:28355  uint256 public lastRewardBlock */\n    tag_78:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28466:28491  uint256 public harvestFee */\n    tag_81:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28245:28278  IERC721 public immutable nftToken */\n    tag_84:\n      immutable(\"0xd3d302950f380d1a27df9dd44167cfb162563e31196f778e9cbde584eeb2b78c\")\n      dup2\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34290:34514  function getPending(address _user) public view returns (uint256) {\r... */\n    tag_89:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34346:34353  uint256 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34366:34381  uint256 pending */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34384:34402  _getPending(_user) */\n      tag_254\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34396:34401  _user */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34384:34395  _getPending */\n      tag_183\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34384:34402  _getPending(_user) */\n      jump\t// in\n    tag_254:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34366:34402  uint256 pending = _getPending(_user) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34413:34432  uint256 _harvestFee */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34435:34467  pending.mul(harvestFee).div(100) */\n      tag_255\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34463:34466  100 */\n      0x64\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34435:34458  pending.mul(harvestFee) */\n      tag_256\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34447:34457  harvestFee */\n      sload(0x05)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34435:34442  pending */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34435:34446  pending.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34435:34458  pending.mul(harvestFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34435:34462  pending.mul(harvestFee).div */\n      tag_146\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34435:34467  pending.mul(harvestFee).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34413:34467  uint256 _harvestFee = pending.mul(harvestFee).div(100) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34495:34506  _harvestFee */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34485:34492  pending */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34485:34506  pending - _harvestFee */\n      tag_257\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_257:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34478:34506  return pending - _harvestFee */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34290:34514  function getPending(address _user) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32898:34282  function unstake(uint256[] calldata tokenIds) external {\r... */\n    tag_93:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32990:32991  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32972:32980  tokenIds */\n      dup3\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32972:32987  tokenIds.length */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32972:32991  tokenIds.length > 0 */\n      gt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32964:33020  require(tokenIds.length > 0, \"NFT Staking: Empty Array\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_103\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33035:33044  uint256 i */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33031:33435  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n    tag_261:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33054:33062  tokenIds */\n      dup3\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33054:33069  tokenIds.length */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33050:33051  i */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33050:33069  i < tokenIds.length */\n      lt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33031:33435  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n      iszero\n      tag_262\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33091:33106  uint256 tokenId */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33109:33117  tokenIds */\n      dup4\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33118:33119  i */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33109:33120  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_264\n      jumpi\n      tag_265\n      tag_109\n      jump\t// in\n    tag_265:\n    tag_264:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33091:33120  uint256 tokenId = tokenIds[i] */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33165:33175  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33143:33175  allStakes[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33143:33152  allStakes */\n      0x08\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33143:33161  allStakes[tokenId] */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33153:33160  tokenId */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33143:33161  allStakes[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33143:33175  allStakes[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33135:33237  require(allStakes[tokenId] == msg.sender, \"Nft Unstaking: token not staked or incorrect token owner.\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33256:33265  uint256 j */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33272:33273  1 */\n      0x01\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33268:33269  i */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33268:33273  i + 1 */\n      tag_272\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_272:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33256:33273  uint256 j = i + 1 */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33252:33424  for(uint256 j = i + 1; j < tokenIds.length; j ++){\r... */\n    tag_269:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33279:33287  tokenIds */\n      dup5\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33279:33294  tokenIds.length */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33275:33276  j */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33275:33294  j < tokenIds.length */\n      lt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33252:33424  for(uint256 j = i + 1; j < tokenIds.length; j ++){\r... */\n      iszero\n      tag_270\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33343:33351  tokenIds */\n      dup5\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33352:33353  j */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33343:33354  tokenIds[j] */\n      dup2\n      dup2\n      lt\n      tag_273\n      jumpi\n      tag_274\n      tag_109\n      jump\t// in\n    tag_274:\n    tag_273:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33328:33336  tokenIds */\n      dup6\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33337:33338  i */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33328:33339  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_275\n      jumpi\n      tag_276\n      tag_109\n      jump\t// in\n    tag_276:\n    tag_275:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33328:33354  tokenIds[i] != tokenIds[j] */\n      eq\n      iszero\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33320:33408  require(tokenIds[i] != tokenIds[j], \"NFT Staking: duplicate token ids in input params.\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_135\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33296:33300  j ++ */\n      dup1\n      dup1\n      tag_279\n      swap1\n      tag_137\n      jump\t// in\n    tag_279:\n      swap2\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33252:33424  for(uint256 j = i + 1; j < tokenIds.length; j ++){\r... */\n      jump(tag_269)\n    tag_270:\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33076:33435  {\r... */\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33071:33075  i ++ */\n      dup1\n      dup1\n      tag_280\n      swap1\n      tag_137\n      jump\t// in\n    tag_280:\n      swap2\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33031:33435  for(uint256 i = 0; i < tokenIds.length; i ++){\r... */\n      jump(tag_261)\n    tag_262:\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33447:33461  updateStatus() */\n      tag_281\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33447:33459  updateStatus */\n      tag_140\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33447:33461  updateStatus() */\n      jump\t// in\n    tag_281:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33472:33493  UserInfo storage user */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33496:33504  userInfo */\n      0x09\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33496:33516  userInfo[msg.sender] */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33505:33515  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33496:33516  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33472:33516  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33527:33542  uint256 pending */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33545:33608  user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_282\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33592:33596  user */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33592:33607  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33545:33587  user.amount.mul(accGHSPPerShare).div(1e12) */\n      tag_283\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33582:33586  1e12 */\n      0xe8d4a51000\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33545:33577  user.amount.mul(accGHSPPerShare) */\n      tag_284\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33561:33576  accGHSPPerShare */\n      sload(0x02)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33545:33549  user */\n      dup8\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33545:33556  user.amount */\n      0x00\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33545:33560  user.amount.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33545:33577  user.amount.mul(accGHSPPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33545:33581  user.amount.mul(accGHSPPerShare).div */\n      tag_146\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33545:33587  user.amount.mul(accGHSPPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_283:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33545:33591  user.amount.mul(accGHSPPerShare).div(1e12).sub */\n      tag_147\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33545:33608  user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33527:33608  uint256 pending = user.amount.mul(accGHSPPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33660:33667  pending */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33623:33632  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33623:33642  ghspToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33651:33655  this */\n      address\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33623:33657  ghspToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_285:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_286:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_288:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_289\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_289:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33623:33667  ghspToken.balanceOf(address(this)) < pending */\n      lt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33619:33740  if (ghspToken.balanceOf(address(this)) < pending) {\r... */\n      iszero\n      tag_290\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33694:33703  ghspToken */\n      immutable(\"0x294a915770f1abdd270970c5c5e0116f353ee0443c415452cffb70311418f069\")\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33694:33713  ghspToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33722:33726  this */\n      address\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33694:33728  ghspToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_291:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_292:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_294:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_295\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_295:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33684:33728  pending = ghspToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33619:33740  if (ghspToken.balanceOf(address(this)) < pending) {\r... */\n    tag_290:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33771:33802  user.pendingAmount.add(pending) */\n      tag_296\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33794:33801  pending */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33771:33775  user */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33771:33789  user.pendingAmount */\n      0x02\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33771:33793  user.pendingAmount.add */\n      tag_149\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33771:33802  user.pendingAmount.add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_296:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33750:33754  user */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33750:33768  user.pendingAmount */\n      0x02\n      add\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33750:33802  user.pendingAmount = user.pendingAmount.add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33813:33832  uint256 tokenAmount */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33835:33843  tokenIds */\n      dup5\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33835:33850  tokenIds.length */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33813:33850  uint256 tokenAmount = tokenIds.length */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33881:33915  totalStakedAmount.sub(tokenAmount) */\n      tag_297\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33903:33914  tokenAmount */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33881:33898  totalStakedAmount */\n      sload(0x06)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33881:33902  totalStakedAmount.sub */\n      tag_147\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33881:33915  totalStakedAmount.sub(tokenAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_297:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33861:33878  totalStakedAmount */\n      0x06\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33861:33915  totalStakedAmount = totalStakedAmount.sub(tokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33940:33968  user.amount.sub(tokenAmount) */\n      tag_298\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33956:33967  tokenAmount */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33940:33944  user */\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33940:33951  user.amount */\n      0x00\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33940:33955  user.amount.sub */\n      tag_147\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33940:33968  user.amount.sub(tokenAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_298:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33926:33930  user */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33926:33937  user.amount */\n      0x00\n      add\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33926:33968  user.amount = user.amount.sub(tokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33997:34039  user.amount.mul(accGHSPPerShare).div(1e12) */\n      tag_299\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34034:34038  1e12 */\n      0xe8d4a51000\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33997:34029  user.amount.mul(accGHSPPerShare) */\n      tag_300\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34013:34028  accGHSPPerShare */\n      sload(0x02)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33997:34001  user */\n      dup7\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33997:34008  user.amount */\n      0x00\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33997:34012  user.amount.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33997:34029  user.amount.mul(accGHSPPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_300:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33997:34033  user.amount.mul(accGHSPPerShare).div */\n      tag_146\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33997:34039  user.amount.mul(accGHSPPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_299:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33979:33983  user */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33979:33994  user.rewardDebt */\n      0x01\n      add\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":33979:34039  user.rewardDebt = user.amount.mul(accGHSPPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34054:34063  uint256 i */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34050:34229  for(uint256 i = 0; i < tokenAmount; i ++){\r... */\n    tag_301:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34073:34084  tokenAmount */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34069:34070  i */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34069:34084  i < tokenAmount */\n      lt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34050:34229  for(uint256 i = 0; i < tokenAmount; i ++){\r... */\n      iszero\n      tag_302\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34139:34140  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34106:34115  allStakes */\n      0x08\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34106:34128  allStakes[tokenIds[i]] */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34116:34124  tokenIds */\n      dup9\n      dup9\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34125:34126  i */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34116:34127  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_304\n      jumpi\n      tag_305\n      tag_109\n      jump\t// in\n    tag_305:\n    tag_304:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34106:34128  allStakes[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34106:34141  allStakes[tokenIds[i]] = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34156:34164  nftToken */\n      immutable(\"0xd3d302950f380d1a27df9dd44167cfb162563e31196f778e9cbde584eeb2b78c\")\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34156:34177  nftToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34186:34190  this */\n      address\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34193:34203  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34205:34213  tokenIds */\n      dup10\n      dup10\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34214:34215  i */\n      dup7\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34205:34216  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_306\n      jumpi\n      tag_307\n      tag_109\n      jump\t// in\n    tag_307:\n    tag_306:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34156:34217  nftToken.transferFrom(address(this), msg.sender, tokenIds[i]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_308:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_309\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_309:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_311:\n      pop\n      pop\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34086:34090  i ++ */\n      dup1\n      dup1\n      tag_312\n      swap1\n      tag_137\n      jump\t// in\n    tag_312:\n      swap2\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34050:34229  for(uint256 i = 0; i < tokenAmount; i ++){\r... */\n      jump(tag_301)\n    tag_302:\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34244:34274  UnStaked(msg.sender, tokenIds) */\n      0x80cc10bf7e52583ae0a17d8dd6ab5005573b17a08091a091af1a81205a675c91\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34253:34263  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34265:34273  tokenIds */\n      dup7\n      dup7\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34244:34274  UnStaked(msg.sender, tokenIds) */\n      mload(0x40)\n      tag_313\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32953:34282  {\r... */\n      pop\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":32898:34282  function unstake(uint256[] calldata tokenIds) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":28435:28459  address public feeWallet */\n    tag_95:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5820:6021  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_99:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      tag_315\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5152  _msgSender */\n      tag_171\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5142:5154  _msgSender() */\n      jump\t// in\n    tag_315:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      tag_316\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5136  owner */\n      tag_66\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5138  owner() */\n      jump\t// in\n    tag_316:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5131:5154  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5123:5191  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap1\n      tag_175\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_317:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5929:5930  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5909:5931  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5909:5917  newOwner */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5909:5931  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5901:5974  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_320:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5985:6013  _transferOwnership(newOwner) */\n      tag_323\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6004:6012  newOwner */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5985:6003  _transferOwnership */\n      tag_233\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5985:6013  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_323:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":5820:6021  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30616:31494  function updateStatus() private {\r... */\n    tag_140:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30679:30694  lastRewardBlock */\n      sload(0x01)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30663:30675  block.number */\n      number\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30663:30694  block.number <= lastRewardBlock */\n      gt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30659:30729  if (block.number <= lastRewardBlock) {\r... */\n      tag_325\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30711:30718  return; */\n      jump(tag_324)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30659:30729  if (block.number <= lastRewardBlock) {\r... */\n    tag_325:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30764:30765  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30743:30760  totalStakedAmount */\n      sload(0x06)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30743:30765  totalStakedAmount == 0 */\n      eq\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30739:30845  if (totalStakedAmount == 0) {\r... */\n      iszero\n      tag_326\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30800:30812  block.number */\n      number\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30782:30797  lastRewardBlock */\n      0x01\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30782:30812  lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30827:30834  return; */\n      jump(tag_324)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30739:30845  if (totalStakedAmount == 0) {\r... */\n    tag_326:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30855:30873  uint256 multiplier */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30876:30920  getMultiplier(lastRewardBlock, block.number) */\n      tag_327\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30890:30905  lastRewardBlock */\n      sload(0x01)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30907:30919  block.number */\n      number\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30876:30889  getMultiplier */\n      tag_72\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30876:30920  getMultiplier(lastRewardBlock, block.number) */\n      jump\t// in\n    tag_327:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30855:30920  uint256 multiplier = getMultiplier(lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30931:30945  uint256 reward */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30948:30978  multiplier.mul(rewardPerBlock) */\n      tag_328\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30963:30977  rewardPerBlock */\n      sload(0x03)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30948:30958  multiplier */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30948:30962  multiplier.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30948:30978  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_328:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30931:30978  uint256 reward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31011:31012  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30993:31007  _rewardBalance */\n      sload(0x07)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30993:31012  _rewardBalance == 0 */\n      eq\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30989:31092  if (_rewardBalance == 0) {\r... */\n      iszero\n      tag_329\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31047:31059  block.number */\n      number\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31029:31044  lastRewardBlock */\n      0x01\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31029:31059  lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31074:31081  return; */\n      pop\n      pop\n      jump(tag_324)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30989:31092  if (_rewardBalance == 0) {\r... */\n    tag_329:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31123:31129  reward */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31106:31120  _rewardBalance */\n      sload(0x07)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31106:31129  _rewardBalance < reward */\n      lt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31102:31446  if (_rewardBalance < reward) {\r... */\n      iszero\n      tag_330\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31164:31232  accGHSPPerShare.add(_rewardBalance.mul(1e12).div(totalStakedAmount)) */\n      tag_331\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31184:31231  _rewardBalance.mul(1e12).div(totalStakedAmount) */\n      tag_332\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31213:31230  totalStakedAmount */\n      sload(0x06)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31184:31208  _rewardBalance.mul(1e12) */\n      tag_333\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31203:31207  1e12 */\n      0xe8d4a51000\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31184:31198  _rewardBalance */\n      sload(0x07)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31184:31202  _rewardBalance.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31184:31208  _rewardBalance.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_333:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31184:31212  _rewardBalance.mul(1e12).div */\n      tag_146\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31184:31231  _rewardBalance.mul(1e12).div(totalStakedAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_332:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31164:31179  accGHSPPerShare */\n      sload(0x02)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31164:31183  accGHSPPerShare.add */\n      tag_149\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31164:31232  accGHSPPerShare.add(_rewardBalance.mul(1e12).div(totalStakedAmount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_331:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31146:31161  accGHSPPerShare */\n      0x02\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31146:31232  accGHSPPerShare = accGHSPPerShare.add(_rewardBalance.mul(1e12).div(totalStakedAmount)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31264:31265  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31247:31261  _rewardBalance */\n      0x07\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31247:31265  _rewardBalance = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31102:31446  if (_rewardBalance < reward) {\r... */\n      jump(tag_334)\n    tag_330:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31315:31341  _rewardBalance.sub(reward) */\n      tag_335\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31334:31340  reward */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31315:31329  _rewardBalance */\n      sload(0x07)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31315:31333  _rewardBalance.sub */\n      tag_147\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31315:31341  _rewardBalance.sub(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_335:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31298:31312  _rewardBalance */\n      0x07\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31298:31341  _rewardBalance = _rewardBalance.sub(reward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31374:31434  accGHSPPerShare.add(reward.mul(1e12).div(totalStakedAmount)) */\n      tag_336\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31394:31433  reward.mul(1e12).div(totalStakedAmount) */\n      tag_337\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31415:31432  totalStakedAmount */\n      sload(0x06)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31394:31410  reward.mul(1e12) */\n      tag_338\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31405:31409  1e12 */\n      0xe8d4a51000\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31394:31400  reward */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31394:31404  reward.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31394:31410  reward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_338:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31394:31414  reward.mul(1e12).div */\n      tag_146\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31394:31433  reward.mul(1e12).div(totalStakedAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_337:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31374:31389  accGHSPPerShare */\n      sload(0x02)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31374:31393  accGHSPPerShare.add */\n      tag_149\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31374:31434  accGHSPPerShare.add(reward.mul(1e12).div(totalStakedAmount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_336:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31356:31371  accGHSPPerShare */\n      0x02\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31356:31434  accGHSPPerShare = accGHSPPerShare.add(reward.mul(1e12).div(totalStakedAmount)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31102:31446  if (_rewardBalance < reward) {\r... */\n    tag_334:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31474:31486  block.number */\n      number\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31456:31471  lastRewardBlock */\n      0x01\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":31456:31486  lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30648:31494  {\r... */\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":30616:31494  function updateStatus() private {\r... */\n    tag_324:\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9698:9796  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_145:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9756:9763  uint256 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9787:9788  b */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9783:9784  a */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9783:9788  a * b */\n      tag_340\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9776:9788  return a * b */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9698:9796  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":10097:10195  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_146:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":10155:10162  uint256 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":10186:10187  b */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":10182:10183  a */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":10182:10187  a / b */\n      tag_343\n      swap2\n      swap1\n      tag_344\n      jump\t// in\n    tag_343:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":10175:10187  return a / b */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":10097:10195  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9341:9439  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_147:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9399:9406  uint256 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9430:9431  b */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9426:9427  a */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9426:9431  a - b */\n      tag_346\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_346:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9419:9431  return a - b */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9341:9439  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":8960:9058  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_149:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9018:9025  uint256 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9049:9050  b */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9045:9046  a */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9045:9050  a + b */\n      tag_348\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_348:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":9038:9050  return a + b */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":8960:9058  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":3751:3849  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_171:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":3804:3811  address */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":3831:3841  msg.sender */\n      caller\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":3824:3841  return msg.sender */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":3751:3849  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13429:13634  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n    tag_178:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13530:13626  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_351\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13550:13555  token */\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13580:13607  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13609:13613  from */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13615:13617  to */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13619:13624  value */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13557:13625  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_352\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13530:13549  _callOptionalReturn */\n      tag_353\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13530:13626  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_351:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13429:13634  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34526:35079  function _getPending(address _user) private view returns (uint256) {\r... */\n    tag_183:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34584:34591  uint256 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34604:34625  UserInfo storage user */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34628:34636  userInfo */\n      0x09\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34628:34643  userInfo[_user] */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34637:34642  _user */\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34628:34643  userInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34604:34643  UserInfo storage user = userInfo[_user] */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34654:34665  uint256 acc */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34668:34683  accGHSPPerShare */\n      sload(0x02)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34654:34683  uint256 acc = accGHSPPerShare */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34713:34728  lastRewardBlock */\n      sload(0x01)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34698:34710  block.number */\n      number\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34698:34728  block.number > lastRewardBlock */\n      gt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34698:34754  block.number > lastRewardBlock && totalStakedAmount != 0 */\n      dup1\n      iszero\n      tag_355\n      jumpi\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34753:34754  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34732:34749  totalStakedAmount */\n      sload(0x06)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34732:34754  totalStakedAmount != 0 */\n      eq\n      iszero\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34698:34754  block.number > lastRewardBlock && totalStakedAmount != 0 */\n    tag_355:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34694:34979  if (block.number > lastRewardBlock && totalStakedAmount != 0) {\r... */\n      iszero\n      tag_356\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34771:34789  uint256 multiplier */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34792:34836  getMultiplier(lastRewardBlock, block.number) */\n      tag_357\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34806:34821  lastRewardBlock */\n      sload(0x01)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34823:34835  block.number */\n      number\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34792:34805  getMultiplier */\n      tag_72\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34792:34836  getMultiplier(lastRewardBlock, block.number) */\n      jump\t// in\n    tag_357:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34771:34836  uint256 multiplier = getMultiplier(lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34851:34865  uint256 reward */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34868:34898  multiplier.mul(rewardPerBlock) */\n      tag_358\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34883:34897  rewardPerBlock */\n      sload(0x03)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34868:34878  multiplier */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34868:34882  multiplier.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34868:34898  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_358:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34851:34898  uint256 reward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34919:34967  acc.add(reward.mul(1e12).div(totalStakedAmount)) */\n      tag_359\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34927:34966  reward.mul(1e12).div(totalStakedAmount) */\n      tag_360\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34948:34965  totalStakedAmount */\n      sload(0x06)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34927:34943  reward.mul(1e12) */\n      tag_361\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34938:34942  1e12 */\n      0xe8d4a51000\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34927:34933  reward */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34927:34937  reward.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34927:34943  reward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_361:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34927:34947  reward.mul(1e12).div */\n      tag_146\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34927:34966  reward.mul(1e12).div(totalStakedAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_360:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34919:34922  acc */\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34919:34926  acc.add */\n      tag_149\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34919:34967  acc.add(reward.mul(1e12).div(totalStakedAmount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_359:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34913:34967  acc = acc.add(reward.mul(1e12).div(totalStakedAmount)) */\n      swap3\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34756:34979  {\r... */\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34694:34979  if (block.number > lastRewardBlock && totalStakedAmount != 0) {\r... */\n    tag_356:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35071  user.amount.mul(acc).div(1e12).sub(user.rewardDebt).add(user.pendingAmount) */\n      tag_362\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35052:35056  user */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35052:35070  user.pendingAmount */\n      0x02\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35047  user.amount.mul(acc).div(1e12).sub(user.rewardDebt) */\n      tag_363\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35031:35035  user */\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35031:35046  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35026  user.amount.mul(acc).div(1e12) */\n      tag_364\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35021:35025  1e12 */\n      0xe8d4a51000\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35016  user.amount.mul(acc) */\n      tag_365\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":35012:35015  acc */\n      dup8\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35000  user */\n      dup10\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35007  user.amount */\n      0x00\n      add\n      sload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35011  user.amount.mul */\n      tag_145\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35016  user.amount.mul(acc) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_365:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35020  user.amount.mul(acc).div */\n      tag_146\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35026  user.amount.mul(acc).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_364:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35030  user.amount.mul(acc).div(1e12).sub */\n      tag_147\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35047  user.amount.mul(acc).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_363:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35051  user.amount.mul(acc).div(1e12).sub(user.rewardDebt).add */\n      tag_149\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34996:35071  user.amount.mul(acc).div(1e12).sub(user.rewardDebt).add(user.pendingAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_362:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34989:35071  return user.amount.mul(acc).div(1e12).sub(user.rewardDebt).add(user.pendingAmount) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":34526:35079  function _getPending(address _user) private view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13244:13421  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n    tag_201:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13327:13413  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_367\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13347:13352  token */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13377:13400  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13402:13404  to */\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13406:13411  value */\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13354:13412  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_368\n      swap3\n      swap2\n      swap1\n      tag_369\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13327:13346  _callOptionalReturn */\n      tag_353\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13327:13413  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_367:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13244:13421  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6181:6372  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_233:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6255:6271  address oldOwner */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6274:6280  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6255:6280  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6300:6308  newOwner */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6291:6297  _owner */\n      0x00\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6291:6308  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6355:6363  newOwner */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6324:6364  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6345:6353  oldOwner */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6324:6364  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6244:6372  {\r... */\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6181:6372  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":15549:16310  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n    tag_353:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":15973:15996  bytes memory returndata */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":15999:16068  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_372\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16027:16031  data */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":15999:16068  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16007:16012  token */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":15999:16026  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_373\n      swap1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":15999:16068  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_372:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":15973:16068  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16103:16104  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16083:16093  returndata */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16083:16100  returndata.length */\n      mload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16083:16104  returndata.length > 0 */\n      gt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16079:16303  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_374\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16225:16235  returndata */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16214:16244  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_375\n      swap2\n      swap1\n      tag_376\n      jump\t// in\n    tag_375:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16206:16291  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_377\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_378\n      swap1\n      tag_379\n      jump\t// in\n    tag_378:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_377:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16079:16303  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_374:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":15619:16310  {\r... */\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":15549:16310  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":20069:20265  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_373:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":20172:20184  bytes memory */\n      0x60\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":20204:20257  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_381\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":20227:20233  target */\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":20235:20239  data */\n      dup5\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":20241:20242  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":20244:20256  errorMessage */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":20204:20226  _functionCallWithValue */\n      tag_382\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":20204:20257  _functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_381:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":20197:20257  return _functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":20069:20265  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21446:22425  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r... */\n    tag_382:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21576:21588  bytes memory */\n      0x60\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21609:21627  isContract(target) */\n      tag_384\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21620:21626  target */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21609:21619  isContract */\n      tag_385\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21609:21627  isContract(target) */\n      jump\t// in\n    tag_384:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21601:21661  require(isContract(target), \"Address: call to non-contract\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap1\n      tag_388\n      jump\t// in\n    tag_387:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_386:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21735:21747  bool success */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21749:21772  bytes memory returndata */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21776:21782  target */\n      dup7\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21776:21787  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21796:21804  weiValue */\n      dup6\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21807:21811  data */\n      dup8\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21776:21812  target.call{ value: weiValue }(data) */\n      mload(0x40)\n      tag_389\n      swap2\n      swap1\n      tag_390\n      jump\t// in\n    tag_389:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_393\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_392)\n    tag_393:\n      0x60\n      swap2\n      pop\n    tag_392:\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21734:21812  (bool success, bytes memory returndata) = target.call{ value: weiValue }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21827:21834  success */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21823:22418  if (success) {\r... */\n      iszero\n      tag_394\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21858:21868  returndata */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21851:21868  return returndata */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_383)\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21823:22418  if (success) {\r... */\n    tag_394:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21992:21993  0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21972:21982  returndata */\n      dup2\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21972:21989  returndata.length */\n      mload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21972:21993  returndata.length > 0 */\n      gt\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21968:22407  if (returndata.length > 0) {\r... */\n      iszero\n      tag_396\n      jumpi\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":22235:22245  returndata */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":22229:22246  mload(returndata) */\n      mload\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":22296:22311  returndata_size */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":22283:22293  returndata */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":22279:22281  32 */\n      0x20\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":22275:22294  add(32, returndata) */\n      add\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":22268:22312  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21968:22407  if (returndata.length > 0) {\r... */\n    tag_396:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":22378:22390  errorMessage */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":22371:22391  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_398\n      swap2\n      swap1\n      tag_399\n      jump\t// in\n    tag_398:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":21446:22425  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r... */\n    tag_383:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16954:17573  function isContract(address account) internal view returns (bool) {\r... */\n    tag_385:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17014:17018  bool */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17276:17292  bytes32 codehash */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17303:17322  bytes32 accountHash */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17325:17391  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17303:17391  bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0x00\n      shl\n      swap1\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17494:17501  account */\n      dup4\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17482:17502  extcodehash(account) */\n      extcodehash\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17470:17502  codehash := extcodehash(account) */\n      swap2\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17534:17545  accountHash */\n      dup1\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17522:17530  codehash */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17522:17545  codehash != accountHash */\n      eq\n      iszero\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17522:17564  codehash != accountHash && codehash != 0x0 */\n      dup1\n      iszero\n      tag_401\n      jumpi\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17561:17564  0x0 */\n      0x00\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17549:17564  codehash != 0x0 */\n      dup1\n      shl\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17549:17557  codehash */\n      dup3\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17549:17564  codehash != 0x0 */\n      eq\n      iszero\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17522:17564  codehash != accountHash && codehash != 0x0 */\n    tag_401:\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":17514:17565  return (codehash != accountHash && codehash != 0x0) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":16954:17573  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_403:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_405\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_406\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:295   */\n    tag_407:\n        /* \"#utility.yul\":209:214   */\n      0x00\n        /* \"#utility.yul\":240:246   */\n      dup2\n        /* \"#utility.yul\":234:247   */\n      mload\n        /* \"#utility.yul\":225:247   */\n      swap1\n      pop\n        /* \"#utility.yul\":256:289   */\n      tag_409\n        /* \"#utility.yul\":283:288   */\n      dup2\n        /* \"#utility.yul\":256:289   */\n      tag_406\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":152:295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":318:886   */\n    tag_410:\n        /* \"#utility.yul\":391:399   */\n      0x00\n        /* \"#utility.yul\":401:407   */\n      dup1\n        /* \"#utility.yul\":451:454   */\n      dup4\n        /* \"#utility.yul\":444:448   */\n      0x1f\n        /* \"#utility.yul\":436:442   */\n      dup5\n        /* \"#utility.yul\":432:449   */\n      add\n        /* \"#utility.yul\":428:455   */\n      slt\n        /* \"#utility.yul\":418:540   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":459:538   */\n      tag_413\n      tag_414\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":418:540   */\n    tag_412:\n        /* \"#utility.yul\":572:578   */\n      dup3\n        /* \"#utility.yul\":559:579   */\n      calldataload\n        /* \"#utility.yul\":549:579   */\n      swap1\n      pop\n        /* \"#utility.yul\":602:620   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":594:600   */\n      dup2\n        /* \"#utility.yul\":591:621   */\n      gt\n        /* \"#utility.yul\":588:705   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":624:703   */\n      tag_416\n      tag_417\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":588:705   */\n    tag_415:\n        /* \"#utility.yul\":738:742   */\n      0x20\n        /* \"#utility.yul\":730:736   */\n      dup4\n        /* \"#utility.yul\":726:743   */\n      add\n        /* \"#utility.yul\":714:743   */\n      swap2\n      pop\n        /* \"#utility.yul\":792:795   */\n      dup4\n        /* \"#utility.yul\":784:788   */\n      0x20\n        /* \"#utility.yul\":776:782   */\n      dup3\n        /* \"#utility.yul\":772:789   */\n      mul\n        /* \"#utility.yul\":762:770   */\n      dup4\n        /* \"#utility.yul\":758:790   */\n      add\n        /* \"#utility.yul\":755:796   */\n      gt\n        /* \"#utility.yul\":752:880   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":799:878   */\n      tag_419\n      tag_420\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":752:880   */\n    tag_418:\n        /* \"#utility.yul\":318:886   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":892:1029   */\n    tag_421:\n        /* \"#utility.yul\":946:951   */\n      0x00\n        /* \"#utility.yul\":977:983   */\n      dup2\n        /* \"#utility.yul\":971:984   */\n      mload\n        /* \"#utility.yul\":962:984   */\n      swap1\n      pop\n        /* \"#utility.yul\":993:1023   */\n      tag_423\n        /* \"#utility.yul\":1017:1022   */\n      dup2\n        /* \"#utility.yul\":993:1023   */\n      tag_424\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":892:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1174   */\n    tag_425:\n        /* \"#utility.yul\":1081:1086   */\n      0x00\n        /* \"#utility.yul\":1119:1125   */\n      dup2\n        /* \"#utility.yul\":1106:1126   */\n      calldataload\n        /* \"#utility.yul\":1097:1126   */\n      swap1\n      pop\n        /* \"#utility.yul\":1135:1168   */\n      tag_427\n        /* \"#utility.yul\":1162:1167   */\n      dup2\n        /* \"#utility.yul\":1135:1168   */\n      tag_428\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":1035:1174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1180:1323   */\n    tag_429:\n        /* \"#utility.yul\":1237:1242   */\n      0x00\n        /* \"#utility.yul\":1268:1274   */\n      dup2\n        /* \"#utility.yul\":1262:1275   */\n      mload\n        /* \"#utility.yul\":1253:1275   */\n      swap1\n      pop\n        /* \"#utility.yul\":1284:1317   */\n      tag_431\n        /* \"#utility.yul\":1311:1316   */\n      dup2\n        /* \"#utility.yul\":1284:1317   */\n      tag_428\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":1180:1323   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1329:1658   */\n    tag_33:\n        /* \"#utility.yul\":1388:1394   */\n      0x00\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1425:1434   */\n      dup3\n        /* \"#utility.yul\":1416:1423   */\n      dup5\n        /* \"#utility.yul\":1412:1435   */\n      sub\n        /* \"#utility.yul\":1408:1440   */\n      slt\n        /* \"#utility.yul\":1405:1524   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":1443:1522   */\n      tag_434\n      tag_435\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":1405:1524   */\n    tag_433:\n        /* \"#utility.yul\":1563:1564   */\n      0x00\n        /* \"#utility.yul\":1588:1641   */\n      tag_436\n        /* \"#utility.yul\":1633:1640   */\n      dup5\n        /* \"#utility.yul\":1624:1630   */\n      dup3\n        /* \"#utility.yul\":1613:1622   */\n      dup6\n        /* \"#utility.yul\":1609:1631   */\n      add\n        /* \"#utility.yul\":1588:1641   */\n      tag_403\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":1578:1641   */\n      swap2\n      pop\n        /* \"#utility.yul\":1534:1651   */\n      pop\n        /* \"#utility.yul\":1329:1658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1664:2015   */\n    tag_115:\n        /* \"#utility.yul\":1734:1740   */\n      0x00\n        /* \"#utility.yul\":1783:1785   */\n      0x20\n        /* \"#utility.yul\":1771:1780   */\n      dup3\n        /* \"#utility.yul\":1762:1769   */\n      dup5\n        /* \"#utility.yul\":1758:1781   */\n      sub\n        /* \"#utility.yul\":1754:1786   */\n      slt\n        /* \"#utility.yul\":1751:1870   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":1789:1868   */\n      tag_439\n      tag_435\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":1751:1870   */\n    tag_438:\n        /* \"#utility.yul\":1909:1910   */\n      0x00\n        /* \"#utility.yul\":1934:1998   */\n      tag_440\n        /* \"#utility.yul\":1990:1997   */\n      dup5\n        /* \"#utility.yul\":1981:1987   */\n      dup3\n        /* \"#utility.yul\":1970:1979   */\n      dup6\n        /* \"#utility.yul\":1966:1988   */\n      add\n        /* \"#utility.yul\":1934:1998   */\n      tag_407\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":1924:1998   */\n      swap2\n      pop\n        /* \"#utility.yul\":1880:2008   */\n      pop\n        /* \"#utility.yul\":1664:2015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2021:2580   */\n    tag_29:\n        /* \"#utility.yul\":2107:2113   */\n      0x00\n        /* \"#utility.yul\":2115:2121   */\n      dup1\n        /* \"#utility.yul\":2164:2166   */\n      0x20\n        /* \"#utility.yul\":2152:2161   */\n      dup4\n        /* \"#utility.yul\":2143:2150   */\n      dup6\n        /* \"#utility.yul\":2139:2162   */\n      sub\n        /* \"#utility.yul\":2135:2167   */\n      slt\n        /* \"#utility.yul\":2132:2251   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":2170:2249   */\n      tag_443\n      tag_435\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":2132:2251   */\n    tag_442:\n        /* \"#utility.yul\":2318:2319   */\n      0x00\n        /* \"#utility.yul\":2307:2316   */\n      dup4\n        /* \"#utility.yul\":2303:2320   */\n      add\n        /* \"#utility.yul\":2290:2321   */\n      calldataload\n        /* \"#utility.yul\":2348:2366   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2340:2346   */\n      dup2\n        /* \"#utility.yul\":2337:2367   */\n      gt\n        /* \"#utility.yul\":2334:2451   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":2370:2449   */\n      tag_445\n      tag_446\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":2334:2451   */\n    tag_444:\n        /* \"#utility.yul\":2483:2563   */\n      tag_447\n        /* \"#utility.yul\":2555:2562   */\n      dup6\n        /* \"#utility.yul\":2546:2552   */\n      dup3\n        /* \"#utility.yul\":2535:2544   */\n      dup7\n        /* \"#utility.yul\":2531:2553   */\n      add\n        /* \"#utility.yul\":2483:2563   */\n      tag_410\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2465:2563   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2261:2573   */\n      pop\n        /* \"#utility.yul\":2021:2580   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2586:2931   */\n    tag_376:\n        /* \"#utility.yul\":2653:2659   */\n      0x00\n        /* \"#utility.yul\":2702:2704   */\n      0x20\n        /* \"#utility.yul\":2690:2699   */\n      dup3\n        /* \"#utility.yul\":2681:2688   */\n      dup5\n        /* \"#utility.yul\":2677:2700   */\n      sub\n        /* \"#utility.yul\":2673:2705   */\n      slt\n        /* \"#utility.yul\":2670:2789   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":2708:2787   */\n      tag_450\n      tag_435\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":2670:2789   */\n    tag_449:\n        /* \"#utility.yul\":2828:2829   */\n      0x00\n        /* \"#utility.yul\":2853:2914   */\n      tag_451\n        /* \"#utility.yul\":2906:2913   */\n      dup5\n        /* \"#utility.yul\":2897:2903   */\n      dup3\n        /* \"#utility.yul\":2886:2895   */\n      dup6\n        /* \"#utility.yul\":2882:2904   */\n      add\n        /* \"#utility.yul\":2853:2914   */\n      tag_421\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":2843:2914   */\n      swap2\n      pop\n        /* \"#utility.yul\":2799:2924   */\n      pop\n        /* \"#utility.yul\":2586:2931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2937:3266   */\n    tag_43:\n        /* \"#utility.yul\":2996:3002   */\n      0x00\n        /* \"#utility.yul\":3045:3047   */\n      0x20\n        /* \"#utility.yul\":3033:3042   */\n      dup3\n        /* \"#utility.yul\":3024:3031   */\n      dup5\n        /* \"#utility.yul\":3020:3043   */\n      sub\n        /* \"#utility.yul\":3016:3048   */\n      slt\n        /* \"#utility.yul\":3013:3132   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":3051:3130   */\n      tag_454\n      tag_435\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":3013:3132   */\n    tag_453:\n        /* \"#utility.yul\":3171:3172   */\n      0x00\n        /* \"#utility.yul\":3196:3249   */\n      tag_455\n        /* \"#utility.yul\":3241:3248   */\n      dup5\n        /* \"#utility.yul\":3232:3238   */\n      dup3\n        /* \"#utility.yul\":3221:3230   */\n      dup6\n        /* \"#utility.yul\":3217:3239   */\n      add\n        /* \"#utility.yul\":3196:3249   */\n      tag_425\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":3186:3249   */\n      swap2\n      pop\n        /* \"#utility.yul\":3142:3259   */\n      pop\n        /* \"#utility.yul\":2937:3266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3272:3623   */\n    tag_193:\n        /* \"#utility.yul\":3342:3348   */\n      0x00\n        /* \"#utility.yul\":3391:3393   */\n      0x20\n        /* \"#utility.yul\":3379:3388   */\n      dup3\n        /* \"#utility.yul\":3370:3377   */\n      dup5\n        /* \"#utility.yul\":3366:3389   */\n      sub\n        /* \"#utility.yul\":3362:3394   */\n      slt\n        /* \"#utility.yul\":3359:3478   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":3397:3476   */\n      tag_458\n      tag_435\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3359:3478   */\n    tag_457:\n        /* \"#utility.yul\":3517:3518   */\n      0x00\n        /* \"#utility.yul\":3542:3606   */\n      tag_459\n        /* \"#utility.yul\":3598:3605   */\n      dup5\n        /* \"#utility.yul\":3589:3595   */\n      dup3\n        /* \"#utility.yul\":3578:3587   */\n      dup6\n        /* \"#utility.yul\":3574:3596   */\n      add\n        /* \"#utility.yul\":3542:3606   */\n      tag_429\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3532:3606   */\n      swap2\n      pop\n        /* \"#utility.yul\":3488:3616   */\n      pop\n        /* \"#utility.yul\":3272:3623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3629:4103   */\n    tag_71:\n        /* \"#utility.yul\":3697:3703   */\n      0x00\n        /* \"#utility.yul\":3705:3711   */\n      dup1\n        /* \"#utility.yul\":3754:3756   */\n      0x40\n        /* \"#utility.yul\":3742:3751   */\n      dup4\n        /* \"#utility.yul\":3733:3740   */\n      dup6\n        /* \"#utility.yul\":3729:3752   */\n      sub\n        /* \"#utility.yul\":3725:3757   */\n      slt\n        /* \"#utility.yul\":3722:3841   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":3760:3839   */\n      tag_462\n      tag_435\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3722:3841   */\n    tag_461:\n        /* \"#utility.yul\":3880:3881   */\n      0x00\n        /* \"#utility.yul\":3905:3958   */\n      tag_463\n        /* \"#utility.yul\":3950:3957   */\n      dup6\n        /* \"#utility.yul\":3941:3947   */\n      dup3\n        /* \"#utility.yul\":3930:3939   */\n      dup7\n        /* \"#utility.yul\":3926:3948   */\n      add\n        /* \"#utility.yul\":3905:3958   */\n      tag_425\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":3895:3958   */\n      swap3\n      pop\n        /* \"#utility.yul\":3851:3968   */\n      pop\n        /* \"#utility.yul\":4007:4009   */\n      0x20\n        /* \"#utility.yul\":4033:4086   */\n      tag_464\n        /* \"#utility.yul\":4078:4085   */\n      dup6\n        /* \"#utility.yul\":4069:4075   */\n      dup3\n        /* \"#utility.yul\":4058:4067   */\n      dup7\n        /* \"#utility.yul\":4054:4076   */\n      add\n        /* \"#utility.yul\":4033:4086   */\n      tag_425\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":4023:4086   */\n      swap2\n      pop\n        /* \"#utility.yul\":3978:4096   */\n      pop\n        /* \"#utility.yul\":3629:4103   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4109:4227   */\n    tag_465:\n        /* \"#utility.yul\":4196:4220   */\n      tag_467\n        /* \"#utility.yul\":4214:4219   */\n      dup2\n        /* \"#utility.yul\":4196:4220   */\n      tag_468\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":4191:4194   */\n      dup3\n        /* \"#utility.yul\":4184:4221   */\n      mstore\n        /* \"#utility.yul\":4109:4227   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4263:4800   */\n    tag_469:\n        /* \"#utility.yul\":4391:4394   */\n      0x00\n        /* \"#utility.yul\":4412:4498   */\n      tag_471\n        /* \"#utility.yul\":4491:4497   */\n      dup4\n        /* \"#utility.yul\":4486:4489   */\n      dup6\n        /* \"#utility.yul\":4412:4498   */\n      tag_472\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4405:4498   */\n      swap4\n      pop\n        /* \"#utility.yul\":4522:4588   */\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4514:4520   */\n      dup4\n        /* \"#utility.yul\":4511:4589   */\n      gt\n        /* \"#utility.yul\":4508:4673   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":4592:4671   */\n      tag_474\n      tag_475\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":4508:4673   */\n    tag_473:\n        /* \"#utility.yul\":4704:4708   */\n      0x20\n        /* \"#utility.yul\":4696:4702   */\n      dup4\n        /* \"#utility.yul\":4692:4709   */\n      mul\n        /* \"#utility.yul\":4682:4709   */\n      swap3\n      pop\n        /* \"#utility.yul\":4719:4762   */\n      tag_476\n        /* \"#utility.yul\":4755:4761   */\n      dup4\n        /* \"#utility.yul\":4750:4753   */\n      dup6\n        /* \"#utility.yul\":4743:4748   */\n      dup5\n        /* \"#utility.yul\":4719:4762   */\n      tag_477\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":4787:4793   */\n      dup3\n        /* \"#utility.yul\":4782:4785   */\n      dup5\n        /* \"#utility.yul\":4778:4794   */\n      add\n        /* \"#utility.yul\":4771:4794   */\n      swap1\n      pop\n        /* \"#utility.yul\":4263:4800   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4806:5179   */\n    tag_478:\n        /* \"#utility.yul\":4910:4913   */\n      0x00\n        /* \"#utility.yul\":4938:4976   */\n      tag_480\n        /* \"#utility.yul\":4970:4975   */\n      dup3\n        /* \"#utility.yul\":4938:4976   */\n      tag_481\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":4992:5080   */\n      tag_482\n        /* \"#utility.yul\":5073:5079   */\n      dup2\n        /* \"#utility.yul\":5068:5071   */\n      dup6\n        /* \"#utility.yul\":4992:5080   */\n      tag_483\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":4985:5080   */\n      swap4\n      pop\n        /* \"#utility.yul\":5089:5141   */\n      tag_484\n        /* \"#utility.yul\":5134:5140   */\n      dup2\n        /* \"#utility.yul\":5129:5132   */\n      dup6\n        /* \"#utility.yul\":5122:5126   */\n      0x20\n        /* \"#utility.yul\":5115:5120   */\n      dup7\n        /* \"#utility.yul\":5111:5127   */\n      add\n        /* \"#utility.yul\":5089:5141   */\n      tag_485\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":5166:5172   */\n      dup1\n        /* \"#utility.yul\":5161:5164   */\n      dup5\n        /* \"#utility.yul\":5157:5173   */\n      add\n        /* \"#utility.yul\":5150:5173   */\n      swap2\n      pop\n        /* \"#utility.yul\":4914:5179   */\n      pop\n        /* \"#utility.yul\":4806:5179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5185:5344   */\n    tag_486:\n        /* \"#utility.yul\":5286:5337   */\n      tag_488\n        /* \"#utility.yul\":5331:5336   */\n      dup2\n        /* \"#utility.yul\":5286:5337   */\n      tag_489\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":5281:5284   */\n      dup3\n        /* \"#utility.yul\":5274:5338   */\n      mstore\n        /* \"#utility.yul\":5185:5344   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5350:5513   */\n    tag_490:\n        /* \"#utility.yul\":5453:5506   */\n      tag_492\n        /* \"#utility.yul\":5500:5505   */\n      dup2\n        /* \"#utility.yul\":5453:5506   */\n      tag_493\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":5448:5451   */\n      dup3\n        /* \"#utility.yul\":5441:5507   */\n      mstore\n        /* \"#utility.yul\":5350:5513   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5519:5883   */\n    tag_494:\n        /* \"#utility.yul\":5607:5610   */\n      0x00\n        /* \"#utility.yul\":5635:5674   */\n      tag_496\n        /* \"#utility.yul\":5668:5673   */\n      dup3\n        /* \"#utility.yul\":5635:5674   */\n      tag_497\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":5690:5761   */\n      tag_498\n        /* \"#utility.yul\":5754:5760   */\n      dup2\n        /* \"#utility.yul\":5749:5752   */\n      dup6\n        /* \"#utility.yul\":5690:5761   */\n      tag_499\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":5683:5761   */\n      swap4\n      pop\n        /* \"#utility.yul\":5770:5822   */\n      tag_500\n        /* \"#utility.yul\":5815:5821   */\n      dup2\n        /* \"#utility.yul\":5810:5813   */\n      dup6\n        /* \"#utility.yul\":5803:5807   */\n      0x20\n        /* \"#utility.yul\":5796:5801   */\n      dup7\n        /* \"#utility.yul\":5792:5808   */\n      add\n        /* \"#utility.yul\":5770:5822   */\n      tag_485\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":5847:5876   */\n      tag_501\n        /* \"#utility.yul\":5869:5875   */\n      dup2\n        /* \"#utility.yul\":5847:5876   */\n      tag_502\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":5842:5845   */\n      dup5\n        /* \"#utility.yul\":5838:5877   */\n      add\n        /* \"#utility.yul\":5831:5877   */\n      swap2\n      pop\n        /* \"#utility.yul\":5611:5883   */\n      pop\n        /* \"#utility.yul\":5519:5883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5889:6255   */\n    tag_503:\n        /* \"#utility.yul\":6031:6034   */\n      0x00\n        /* \"#utility.yul\":6052:6119   */\n      tag_505\n        /* \"#utility.yul\":6116:6118   */\n      0x18\n        /* \"#utility.yul\":6111:6114   */\n      dup4\n        /* \"#utility.yul\":6052:6119   */\n      tag_499\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":6045:6119   */\n      swap2\n      pop\n        /* \"#utility.yul\":6128:6221   */\n      tag_506\n        /* \"#utility.yul\":6217:6220   */\n      dup3\n        /* \"#utility.yul\":6128:6221   */\n      tag_507\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":6246:6248   */\n      0x20\n        /* \"#utility.yul\":6241:6244   */\n      dup3\n        /* \"#utility.yul\":6237:6249   */\n      add\n        /* \"#utility.yul\":6230:6249   */\n      swap1\n      pop\n        /* \"#utility.yul\":5889:6255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6261:6627   */\n    tag_508:\n        /* \"#utility.yul\":6403:6406   */\n      0x00\n        /* \"#utility.yul\":6424:6491   */\n      tag_510\n        /* \"#utility.yul\":6488:6490   */\n      0x2a\n        /* \"#utility.yul\":6483:6486   */\n      dup4\n        /* \"#utility.yul\":6424:6491   */\n      tag_499\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":6417:6491   */\n      swap2\n      pop\n        /* \"#utility.yul\":6500:6593   */\n      tag_511\n        /* \"#utility.yul\":6589:6592   */\n      dup3\n        /* \"#utility.yul\":6500:6593   */\n      tag_512\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":6618:6620   */\n      0x40\n        /* \"#utility.yul\":6613:6616   */\n      dup3\n        /* \"#utility.yul\":6609:6621   */\n      add\n        /* \"#utility.yul\":6602:6621   */\n      swap1\n      pop\n        /* \"#utility.yul\":6261:6627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6633:6999   */\n    tag_513:\n        /* \"#utility.yul\":6775:6778   */\n      0x00\n        /* \"#utility.yul\":6796:6863   */\n      tag_515\n        /* \"#utility.yul\":6860:6862   */\n      0x26\n        /* \"#utility.yul\":6855:6858   */\n      dup4\n        /* \"#utility.yul\":6796:6863   */\n      tag_499\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":6789:6863   */\n      swap2\n      pop\n        /* \"#utility.yul\":6872:6965   */\n      tag_516\n        /* \"#utility.yul\":6961:6964   */\n      dup3\n        /* \"#utility.yul\":6872:6965   */\n      tag_517\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":6990:6992   */\n      0x40\n        /* \"#utility.yul\":6985:6988   */\n      dup3\n        /* \"#utility.yul\":6981:6993   */\n      add\n        /* \"#utility.yul\":6974:6993   */\n      swap1\n      pop\n        /* \"#utility.yul\":6633:6999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7005:7371   */\n    tag_518:\n        /* \"#utility.yul\":7147:7150   */\n      0x00\n        /* \"#utility.yul\":7168:7235   */\n      tag_520\n        /* \"#utility.yul\":7232:7234   */\n      0x31\n        /* \"#utility.yul\":7227:7230   */\n      dup4\n        /* \"#utility.yul\":7168:7235   */\n      tag_499\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":7161:7235   */\n      swap2\n      pop\n        /* \"#utility.yul\":7244:7337   */\n      tag_521\n        /* \"#utility.yul\":7333:7336   */\n      dup3\n        /* \"#utility.yul\":7244:7337   */\n      tag_522\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":7362:7364   */\n      0x40\n        /* \"#utility.yul\":7357:7360   */\n      dup3\n        /* \"#utility.yul\":7353:7365   */\n      add\n        /* \"#utility.yul\":7346:7365   */\n      swap1\n      pop\n        /* \"#utility.yul\":7005:7371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7377:7743   */\n    tag_523:\n        /* \"#utility.yul\":7519:7522   */\n      0x00\n        /* \"#utility.yul\":7540:7607   */\n      tag_525\n        /* \"#utility.yul\":7604:7606   */\n      0x20\n        /* \"#utility.yul\":7599:7602   */\n      dup4\n        /* \"#utility.yul\":7540:7607   */\n      tag_499\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":7533:7607   */\n      swap2\n      pop\n        /* \"#utility.yul\":7616:7709   */\n      tag_526\n        /* \"#utility.yul\":7705:7708   */\n      dup3\n        /* \"#utility.yul\":7616:7709   */\n      tag_527\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":7734:7736   */\n      0x20\n        /* \"#utility.yul\":7729:7732   */\n      dup3\n        /* \"#utility.yul\":7725:7737   */\n      add\n        /* \"#utility.yul\":7718:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7377:7743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7749:8115   */\n    tag_528:\n        /* \"#utility.yul\":7891:7894   */\n      0x00\n        /* \"#utility.yul\":7912:7979   */\n      tag_530\n        /* \"#utility.yul\":7976:7978   */\n      0x22\n        /* \"#utility.yul\":7971:7974   */\n      dup4\n        /* \"#utility.yul\":7912:7979   */\n      tag_499\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":7905:7979   */\n      swap2\n      pop\n        /* \"#utility.yul\":7988:8081   */\n      tag_531\n        /* \"#utility.yul\":8077:8080   */\n      dup3\n        /* \"#utility.yul\":7988:8081   */\n      tag_532\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":8106:8108   */\n      0x40\n        /* \"#utility.yul\":8101:8104   */\n      dup3\n        /* \"#utility.yul\":8097:8109   */\n      add\n        /* \"#utility.yul\":8090:8109   */\n      swap1\n      pop\n        /* \"#utility.yul\":7749:8115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8121:8487   */\n    tag_533:\n        /* \"#utility.yul\":8263:8266   */\n      0x00\n        /* \"#utility.yul\":8284:8351   */\n      tag_535\n        /* \"#utility.yul\":8348:8350   */\n      0x20\n        /* \"#utility.yul\":8343:8346   */\n      dup4\n        /* \"#utility.yul\":8284:8351   */\n      tag_499\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":8277:8351   */\n      swap2\n      pop\n        /* \"#utility.yul\":8360:8453   */\n      tag_536\n        /* \"#utility.yul\":8449:8452   */\n      dup3\n        /* \"#utility.yul\":8360:8453   */\n      tag_537\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":8478:8480   */\n      0x20\n        /* \"#utility.yul\":8473:8476   */\n      dup3\n        /* \"#utility.yul\":8469:8481   */\n      add\n        /* \"#utility.yul\":8462:8481   */\n      swap1\n      pop\n        /* \"#utility.yul\":8121:8487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8493:8859   */\n    tag_538:\n        /* \"#utility.yul\":8635:8638   */\n      0x00\n        /* \"#utility.yul\":8656:8723   */\n      tag_540\n        /* \"#utility.yul\":8720:8722   */\n      0x1e\n        /* \"#utility.yul\":8715:8718   */\n      dup4\n        /* \"#utility.yul\":8656:8723   */\n      tag_499\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":8649:8723   */\n      swap2\n      pop\n        /* \"#utility.yul\":8732:8825   */\n      tag_541\n        /* \"#utility.yul\":8821:8824   */\n      dup3\n        /* \"#utility.yul\":8732:8825   */\n      tag_542\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":8850:8852   */\n      0x20\n        /* \"#utility.yul\":8845:8848   */\n      dup3\n        /* \"#utility.yul\":8841:8853   */\n      add\n        /* \"#utility.yul\":8834:8853   */\n      swap1\n      pop\n        /* \"#utility.yul\":8493:8859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8865:9231   */\n    tag_543:\n        /* \"#utility.yul\":9007:9010   */\n      0x00\n        /* \"#utility.yul\":9028:9095   */\n      tag_545\n        /* \"#utility.yul\":9092:9094   */\n      0x1d\n        /* \"#utility.yul\":9087:9090   */\n      dup4\n        /* \"#utility.yul\":9028:9095   */\n      tag_499\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":9021:9095   */\n      swap2\n      pop\n        /* \"#utility.yul\":9104:9197   */\n      tag_546\n        /* \"#utility.yul\":9193:9196   */\n      dup3\n        /* \"#utility.yul\":9104:9197   */\n      tag_547\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":9222:9224   */\n      0x20\n        /* \"#utility.yul\":9217:9220   */\n      dup3\n        /* \"#utility.yul\":9213:9225   */\n      add\n        /* \"#utility.yul\":9206:9225   */\n      swap1\n      pop\n        /* \"#utility.yul\":8865:9231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9237:9603   */\n    tag_548:\n        /* \"#utility.yul\":9379:9382   */\n      0x00\n        /* \"#utility.yul\":9400:9467   */\n      tag_550\n        /* \"#utility.yul\":9464:9466   */\n      0x39\n        /* \"#utility.yul\":9459:9462   */\n      dup4\n        /* \"#utility.yul\":9400:9467   */\n      tag_499\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":9393:9467   */\n      swap2\n      pop\n        /* \"#utility.yul\":9476:9569   */\n      tag_551\n        /* \"#utility.yul\":9565:9568   */\n      dup3\n        /* \"#utility.yul\":9476:9569   */\n      tag_552\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":9594:9596   */\n      0x40\n        /* \"#utility.yul\":9589:9592   */\n      dup3\n        /* \"#utility.yul\":9585:9597   */\n      add\n        /* \"#utility.yul\":9578:9597   */\n      swap1\n      pop\n        /* \"#utility.yul\":9237:9603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9609:9727   */\n    tag_553:\n        /* \"#utility.yul\":9696:9720   */\n      tag_555\n        /* \"#utility.yul\":9714:9719   */\n      dup2\n        /* \"#utility.yul\":9696:9720   */\n      tag_556\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":9691:9694   */\n      dup3\n        /* \"#utility.yul\":9684:9721   */\n      mstore\n        /* \"#utility.yul\":9609:9727   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9733:10004   */\n    tag_390:\n        /* \"#utility.yul\":9863:9866   */\n      0x00\n        /* \"#utility.yul\":9885:9978   */\n      tag_558\n        /* \"#utility.yul\":9974:9977   */\n      dup3\n        /* \"#utility.yul\":9965:9971   */\n      dup5\n        /* \"#utility.yul\":9885:9978   */\n      tag_478\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":9878:9978   */\n      swap2\n      pop\n        /* \"#utility.yul\":9995:9998   */\n      dup2\n        /* \"#utility.yul\":9988:9998   */\n      swap1\n      pop\n        /* \"#utility.yul\":9733:10004   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10010:10232   */\n    tag_68:\n        /* \"#utility.yul\":10103:10107   */\n      0x00\n        /* \"#utility.yul\":10141:10143   */\n      0x20\n        /* \"#utility.yul\":10130:10139   */\n      dup3\n        /* \"#utility.yul\":10126:10144   */\n      add\n        /* \"#utility.yul\":10118:10144   */\n      swap1\n      pop\n        /* \"#utility.yul\":10154:10225   */\n      tag_560\n        /* \"#utility.yul\":10222:10223   */\n      0x00\n        /* \"#utility.yul\":10211:10220   */\n      dup4\n        /* \"#utility.yul\":10207:10224   */\n      add\n        /* \"#utility.yul\":10198:10204   */\n      dup5\n        /* \"#utility.yul\":10154:10225   */\n      tag_465\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":10010:10232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10238:10680   */\n    tag_162:\n        /* \"#utility.yul\":10387:10391   */\n      0x00\n        /* \"#utility.yul\":10425:10427   */\n      0x60\n        /* \"#utility.yul\":10414:10423   */\n      dup3\n        /* \"#utility.yul\":10410:10428   */\n      add\n        /* \"#utility.yul\":10402:10428   */\n      swap1\n      pop\n        /* \"#utility.yul\":10438:10509   */\n      tag_562\n        /* \"#utility.yul\":10506:10507   */\n      0x00\n        /* \"#utility.yul\":10495:10504   */\n      dup4\n        /* \"#utility.yul\":10491:10508   */\n      add\n        /* \"#utility.yul\":10482:10488   */\n      dup7\n        /* \"#utility.yul\":10438:10509   */\n      tag_465\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":10519:10591   */\n      tag_563\n        /* \"#utility.yul\":10587:10589   */\n      0x20\n        /* \"#utility.yul\":10576:10585   */\n      dup4\n        /* \"#utility.yul\":10572:10590   */\n      add\n        /* \"#utility.yul\":10563:10569   */\n      dup6\n        /* \"#utility.yul\":10519:10591   */\n      tag_465\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":10601:10673   */\n      tag_564\n        /* \"#utility.yul\":10669:10671   */\n      0x40\n        /* \"#utility.yul\":10658:10667   */\n      dup4\n        /* \"#utility.yul\":10654:10672   */\n      add\n        /* \"#utility.yul\":10645:10651   */\n      dup5\n        /* \"#utility.yul\":10601:10673   */\n      tag_553\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":10238:10680   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10686:11189   */\n    tag_168:\n        /* \"#utility.yul\":10867:10871   */\n      0x00\n        /* \"#utility.yul\":10905:10907   */\n      0x40\n        /* \"#utility.yul\":10894:10903   */\n      dup3\n        /* \"#utility.yul\":10890:10908   */\n      add\n        /* \"#utility.yul\":10882:10908   */\n      swap1\n      pop\n        /* \"#utility.yul\":10918:10989   */\n      tag_566\n        /* \"#utility.yul\":10986:10987   */\n      0x00\n        /* \"#utility.yul\":10975:10984   */\n      dup4\n        /* \"#utility.yul\":10971:10988   */\n      add\n        /* \"#utility.yul\":10962:10968   */\n      dup7\n        /* \"#utility.yul\":10918:10989   */\n      tag_465\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":11036:11045   */\n      dup2\n        /* \"#utility.yul\":11030:11034   */\n      dup2\n        /* \"#utility.yul\":11026:11046   */\n      sub\n        /* \"#utility.yul\":11021:11023   */\n      0x20\n        /* \"#utility.yul\":11010:11019   */\n      dup4\n        /* \"#utility.yul\":11006:11024   */\n      add\n        /* \"#utility.yul\":10999:11047   */\n      mstore\n        /* \"#utility.yul\":11064:11182   */\n      tag_567\n        /* \"#utility.yul\":11177:11181   */\n      dup2\n        /* \"#utility.yul\":11168:11174   */\n      dup5\n        /* \"#utility.yul\":11160:11166   */\n      dup7\n        /* \"#utility.yul\":11064:11182   */\n      tag_469\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":11056:11182   */\n      swap1\n      pop\n        /* \"#utility.yul\":10686:11189   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11195:11527   */\n    tag_369:\n        /* \"#utility.yul\":11316:11320   */\n      0x00\n        /* \"#utility.yul\":11354:11356   */\n      0x40\n        /* \"#utility.yul\":11343:11352   */\n      dup3\n        /* \"#utility.yul\":11339:11357   */\n      add\n        /* \"#utility.yul\":11331:11357   */\n      swap1\n      pop\n        /* \"#utility.yul\":11367:11438   */\n      tag_569\n        /* \"#utility.yul\":11435:11436   */\n      0x00\n        /* \"#utility.yul\":11424:11433   */\n      dup4\n        /* \"#utility.yul\":11420:11437   */\n      add\n        /* \"#utility.yul\":11411:11417   */\n      dup6\n        /* \"#utility.yul\":11367:11438   */\n      tag_465\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":11448:11520   */\n      tag_570\n        /* \"#utility.yul\":11516:11518   */\n      0x20\n        /* \"#utility.yul\":11505:11514   */\n      dup4\n        /* \"#utility.yul\":11501:11519   */\n      add\n        /* \"#utility.yul\":11492:11498   */\n      dup5\n        /* \"#utility.yul\":11448:11520   */\n      tag_553\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":11195:11527   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11975   */\n    tag_218:\n        /* \"#utility.yul\":11682:11686   */\n      0x00\n        /* \"#utility.yul\":11720:11722   */\n      0x60\n        /* \"#utility.yul\":11709:11718   */\n      dup3\n        /* \"#utility.yul\":11705:11723   */\n      add\n        /* \"#utility.yul\":11697:11723   */\n      swap1\n      pop\n        /* \"#utility.yul\":11733:11804   */\n      tag_572\n        /* \"#utility.yul\":11801:11802   */\n      0x00\n        /* \"#utility.yul\":11790:11799   */\n      dup4\n        /* \"#utility.yul\":11786:11803   */\n      add\n        /* \"#utility.yul\":11777:11783   */\n      dup7\n        /* \"#utility.yul\":11733:11804   */\n      tag_465\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":11814:11886   */\n      tag_573\n        /* \"#utility.yul\":11882:11884   */\n      0x20\n        /* \"#utility.yul\":11871:11880   */\n      dup4\n        /* \"#utility.yul\":11867:11885   */\n      add\n        /* \"#utility.yul\":11858:11864   */\n      dup6\n        /* \"#utility.yul\":11814:11886   */\n      tag_553\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":11896:11968   */\n      tag_574\n        /* \"#utility.yul\":11964:11966   */\n      0x40\n        /* \"#utility.yul\":11953:11962   */\n      dup4\n        /* \"#utility.yul\":11949:11967   */\n      add\n        /* \"#utility.yul\":11940:11946   */\n      dup5\n        /* \"#utility.yul\":11896:11968   */\n      tag_553\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":11533:11975   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11981:12231   */\n    tag_40:\n        /* \"#utility.yul\":12088:12092   */\n      0x00\n        /* \"#utility.yul\":12126:12128   */\n      0x20\n        /* \"#utility.yul\":12115:12124   */\n      dup3\n        /* \"#utility.yul\":12111:12129   */\n      add\n        /* \"#utility.yul\":12103:12129   */\n      swap1\n      pop\n        /* \"#utility.yul\":12139:12224   */\n      tag_576\n        /* \"#utility.yul\":12221:12222   */\n      0x00\n        /* \"#utility.yul\":12210:12219   */\n      dup4\n        /* \"#utility.yul\":12206:12223   */\n      add\n        /* \"#utility.yul\":12197:12203   */\n      dup5\n        /* \"#utility.yul\":12139:12224   */\n      tag_486\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":11981:12231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12237:12491   */\n    tag_86:\n        /* \"#utility.yul\":12346:12350   */\n      0x00\n        /* \"#utility.yul\":12384:12386   */\n      0x20\n        /* \"#utility.yul\":12373:12382   */\n      dup3\n        /* \"#utility.yul\":12369:12387   */\n      add\n        /* \"#utility.yul\":12361:12387   */\n      swap1\n      pop\n        /* \"#utility.yul\":12397:12484   */\n      tag_578\n        /* \"#utility.yul\":12481:12482   */\n      0x00\n        /* \"#utility.yul\":12470:12479   */\n      dup4\n        /* \"#utility.yul\":12466:12483   */\n      add\n        /* \"#utility.yul\":12457:12463   */\n      dup5\n        /* \"#utility.yul\":12397:12484   */\n      tag_490\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":12237:12491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12497:12810   */\n    tag_399:\n        /* \"#utility.yul\":12610:12614   */\n      0x00\n        /* \"#utility.yul\":12648:12650   */\n      0x20\n        /* \"#utility.yul\":12637:12646   */\n      dup3\n        /* \"#utility.yul\":12633:12651   */\n      add\n        /* \"#utility.yul\":12625:12651   */\n      swap1\n      pop\n        /* \"#utility.yul\":12697:12706   */\n      dup2\n        /* \"#utility.yul\":12691:12695   */\n      dup2\n        /* \"#utility.yul\":12687:12707   */\n      sub\n        /* \"#utility.yul\":12683:12684   */\n      0x00\n        /* \"#utility.yul\":12672:12681   */\n      dup4\n        /* \"#utility.yul\":12668:12685   */\n      add\n        /* \"#utility.yul\":12661:12708   */\n      mstore\n        /* \"#utility.yul\":12725:12803   */\n      tag_580\n        /* \"#utility.yul\":12798:12802   */\n      dup2\n        /* \"#utility.yul\":12789:12795   */\n      dup5\n        /* \"#utility.yul\":12725:12803   */\n      tag_494\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":12717:12803   */\n      swap1\n      pop\n        /* \"#utility.yul\":12497:12810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12816:13235   */\n    tag_103:\n        /* \"#utility.yul\":12982:12986   */\n      0x00\n        /* \"#utility.yul\":13020:13022   */\n      0x20\n        /* \"#utility.yul\":13009:13018   */\n      dup3\n        /* \"#utility.yul\":13005:13023   */\n      add\n        /* \"#utility.yul\":12997:13023   */\n      swap1\n      pop\n        /* \"#utility.yul\":13069:13078   */\n      dup2\n        /* \"#utility.yul\":13063:13067   */\n      dup2\n        /* \"#utility.yul\":13059:13079   */\n      sub\n        /* \"#utility.yul\":13055:13056   */\n      0x00\n        /* \"#utility.yul\":13044:13053   */\n      dup4\n        /* \"#utility.yul\":13040:13057   */\n      add\n        /* \"#utility.yul\":13033:13080   */\n      mstore\n        /* \"#utility.yul\":13097:13228   */\n      tag_582\n        /* \"#utility.yul\":13223:13227   */\n      dup2\n        /* \"#utility.yul\":13097:13228   */\n      tag_503\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":13089:13228   */\n      swap1\n      pop\n        /* \"#utility.yul\":12816:13235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13241:13660   */\n    tag_379:\n        /* \"#utility.yul\":13407:13411   */\n      0x00\n        /* \"#utility.yul\":13445:13447   */\n      0x20\n        /* \"#utility.yul\":13434:13443   */\n      dup3\n        /* \"#utility.yul\":13430:13448   */\n      add\n        /* \"#utility.yul\":13422:13448   */\n      swap1\n      pop\n        /* \"#utility.yul\":13494:13503   */\n      dup2\n        /* \"#utility.yul\":13488:13492   */\n      dup2\n        /* \"#utility.yul\":13484:13504   */\n      sub\n        /* \"#utility.yul\":13480:13481   */\n      0x00\n        /* \"#utility.yul\":13469:13478   */\n      dup4\n        /* \"#utility.yul\":13465:13482   */\n      add\n        /* \"#utility.yul\":13458:13505   */\n      mstore\n        /* \"#utility.yul\":13522:13653   */\n      tag_584\n        /* \"#utility.yul\":13648:13652   */\n      dup2\n        /* \"#utility.yul\":13522:13653   */\n      tag_508\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":13514:13653   */\n      swap1\n      pop\n        /* \"#utility.yul\":13241:13660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13666:14085   */\n    tag_322:\n        /* \"#utility.yul\":13832:13836   */\n      0x00\n        /* \"#utility.yul\":13870:13872   */\n      0x20\n        /* \"#utility.yul\":13859:13868   */\n      dup3\n        /* \"#utility.yul\":13855:13873   */\n      add\n        /* \"#utility.yul\":13847:13873   */\n      swap1\n      pop\n        /* \"#utility.yul\":13919:13928   */\n      dup2\n        /* \"#utility.yul\":13913:13917   */\n      dup2\n        /* \"#utility.yul\":13909:13929   */\n      sub\n        /* \"#utility.yul\":13905:13906   */\n      0x00\n        /* \"#utility.yul\":13894:13903   */\n      dup4\n        /* \"#utility.yul\":13890:13907   */\n      add\n        /* \"#utility.yul\":13883:13930   */\n      mstore\n        /* \"#utility.yul\":13947:14078   */\n      tag_586\n        /* \"#utility.yul\":14073:14077   */\n      dup2\n        /* \"#utility.yul\":13947:14078   */\n      tag_513\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":13939:14078   */\n      swap1\n      pop\n        /* \"#utility.yul\":13666:14085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14091:14510   */\n    tag_135:\n        /* \"#utility.yul\":14257:14261   */\n      0x00\n        /* \"#utility.yul\":14295:14297   */\n      0x20\n        /* \"#utility.yul\":14284:14293   */\n      dup3\n        /* \"#utility.yul\":14280:14298   */\n      add\n        /* \"#utility.yul\":14272:14298   */\n      swap1\n      pop\n        /* \"#utility.yul\":14344:14353   */\n      dup2\n        /* \"#utility.yul\":14338:14342   */\n      dup2\n        /* \"#utility.yul\":14334:14354   */\n      sub\n        /* \"#utility.yul\":14330:14331   */\n      0x00\n        /* \"#utility.yul\":14319:14328   */\n      dup4\n        /* \"#utility.yul\":14315:14332   */\n      add\n        /* \"#utility.yul\":14308:14355   */\n      mstore\n        /* \"#utility.yul\":14372:14503   */\n      tag_588\n        /* \"#utility.yul\":14498:14502   */\n      dup2\n        /* \"#utility.yul\":14372:14503   */\n      tag_518\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":14364:14503   */\n      swap1\n      pop\n        /* \"#utility.yul\":14091:14510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14516:14935   */\n    tag_118:\n        /* \"#utility.yul\":14682:14686   */\n      0x00\n        /* \"#utility.yul\":14720:14722   */\n      0x20\n        /* \"#utility.yul\":14709:14718   */\n      dup3\n        /* \"#utility.yul\":14705:14723   */\n      add\n        /* \"#utility.yul\":14697:14723   */\n      swap1\n      pop\n        /* \"#utility.yul\":14769:14778   */\n      dup2\n        /* \"#utility.yul\":14763:14767   */\n      dup2\n        /* \"#utility.yul\":14759:14779   */\n      sub\n        /* \"#utility.yul\":14755:14756   */\n      0x00\n        /* \"#utility.yul\":14744:14753   */\n      dup4\n        /* \"#utility.yul\":14740:14757   */\n      add\n        /* \"#utility.yul\":14733:14780   */\n      mstore\n        /* \"#utility.yul\":14797:14928   */\n      tag_590\n        /* \"#utility.yul\":14923:14927   */\n      dup2\n        /* \"#utility.yul\":14797:14928   */\n      tag_523\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":14789:14928   */\n      swap1\n      pop\n        /* \"#utility.yul\":14516:14935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14941:15360   */\n    tag_123:\n        /* \"#utility.yul\":15107:15111   */\n      0x00\n        /* \"#utility.yul\":15145:15147   */\n      0x20\n        /* \"#utility.yul\":15134:15143   */\n      dup3\n        /* \"#utility.yul\":15130:15148   */\n      add\n        /* \"#utility.yul\":15122:15148   */\n      swap1\n      pop\n        /* \"#utility.yul\":15194:15203   */\n      dup2\n        /* \"#utility.yul\":15188:15192   */\n      dup2\n        /* \"#utility.yul\":15184:15204   */\n      sub\n        /* \"#utility.yul\":15180:15181   */\n      0x00\n        /* \"#utility.yul\":15169:15178   */\n      dup4\n        /* \"#utility.yul\":15165:15182   */\n      add\n        /* \"#utility.yul\":15158:15205   */\n      mstore\n        /* \"#utility.yul\":15222:15353   */\n      tag_592\n        /* \"#utility.yul\":15348:15352   */\n      dup2\n        /* \"#utility.yul\":15222:15353   */\n      tag_528\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":15214:15353   */\n      swap1\n      pop\n        /* \"#utility.yul\":14941:15360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15366:15785   */\n    tag_175:\n        /* \"#utility.yul\":15532:15536   */\n      0x00\n        /* \"#utility.yul\":15570:15572   */\n      0x20\n        /* \"#utility.yul\":15559:15568   */\n      dup3\n        /* \"#utility.yul\":15555:15573   */\n      add\n        /* \"#utility.yul\":15547:15573   */\n      swap1\n      pop\n        /* \"#utility.yul\":15619:15628   */\n      dup2\n        /* \"#utility.yul\":15613:15617   */\n      dup2\n        /* \"#utility.yul\":15609:15629   */\n      sub\n        /* \"#utility.yul\":15605:15606   */\n      0x00\n        /* \"#utility.yul\":15594:15603   */\n      dup4\n        /* \"#utility.yul\":15590:15607   */\n      add\n        /* \"#utility.yul\":15583:15630   */\n      mstore\n        /* \"#utility.yul\":15647:15778   */\n      tag_594\n        /* \"#utility.yul\":15773:15777   */\n      dup2\n        /* \"#utility.yul\":15647:15778   */\n      tag_533\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":15639:15778   */\n      swap1\n      pop\n        /* \"#utility.yul\":15366:15785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15791:16210   */\n    tag_242:\n        /* \"#utility.yul\":15957:15961   */\n      0x00\n        /* \"#utility.yul\":15995:15997   */\n      0x20\n        /* \"#utility.yul\":15984:15993   */\n      dup3\n        /* \"#utility.yul\":15980:15998   */\n      add\n        /* \"#utility.yul\":15972:15998   */\n      swap1\n      pop\n        /* \"#utility.yul\":16044:16053   */\n      dup2\n        /* \"#utility.yul\":16038:16042   */\n      dup2\n        /* \"#utility.yul\":16034:16054   */\n      sub\n        /* \"#utility.yul\":16030:16031   */\n      0x00\n        /* \"#utility.yul\":16019:16028   */\n      dup4\n        /* \"#utility.yul\":16015:16032   */\n      add\n        /* \"#utility.yul\":16008:16055   */\n      mstore\n        /* \"#utility.yul\":16072:16203   */\n      tag_596\n        /* \"#utility.yul\":16198:16202   */\n      dup2\n        /* \"#utility.yul\":16072:16203   */\n      tag_538\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":16064:16203   */\n      swap1\n      pop\n        /* \"#utility.yul\":15791:16210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16216:16635   */\n    tag_388:\n        /* \"#utility.yul\":16382:16386   */\n      0x00\n        /* \"#utility.yul\":16420:16422   */\n      0x20\n        /* \"#utility.yul\":16409:16418   */\n      dup3\n        /* \"#utility.yul\":16405:16423   */\n      add\n        /* \"#utility.yul\":16397:16423   */\n      swap1\n      pop\n        /* \"#utility.yul\":16469:16478   */\n      dup2\n        /* \"#utility.yul\":16463:16467   */\n      dup2\n        /* \"#utility.yul\":16459:16479   */\n      sub\n        /* \"#utility.yul\":16455:16456   */\n      0x00\n        /* \"#utility.yul\":16444:16453   */\n      dup4\n        /* \"#utility.yul\":16440:16457   */\n      add\n        /* \"#utility.yul\":16433:16480   */\n      mstore\n        /* \"#utility.yul\":16497:16628   */\n      tag_598\n        /* \"#utility.yul\":16623:16627   */\n      dup2\n        /* \"#utility.yul\":16497:16628   */\n      tag_543\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":16489:16628   */\n      swap1\n      pop\n        /* \"#utility.yul\":16216:16635   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16641:17060   */\n    tag_268:\n        /* \"#utility.yul\":16807:16811   */\n      0x00\n        /* \"#utility.yul\":16845:16847   */\n      0x20\n        /* \"#utility.yul\":16834:16843   */\n      dup3\n        /* \"#utility.yul\":16830:16848   */\n      add\n        /* \"#utility.yul\":16822:16848   */\n      swap1\n      pop\n        /* \"#utility.yul\":16894:16903   */\n      dup2\n        /* \"#utility.yul\":16888:16892   */\n      dup2\n        /* \"#utility.yul\":16884:16904   */\n      sub\n        /* \"#utility.yul\":16880:16881   */\n      0x00\n        /* \"#utility.yul\":16869:16878   */\n      dup4\n        /* \"#utility.yul\":16865:16882   */\n      add\n        /* \"#utility.yul\":16858:16905   */\n      mstore\n        /* \"#utility.yul\":16922:17053   */\n      tag_600\n        /* \"#utility.yul\":17048:17052   */\n      dup2\n        /* \"#utility.yul\":16922:17053   */\n      tag_548\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":16914:17053   */\n      swap1\n      pop\n        /* \"#utility.yul\":16641:17060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17066:17288   */\n    tag_48:\n        /* \"#utility.yul\":17159:17163   */\n      0x00\n        /* \"#utility.yul\":17197:17199   */\n      0x20\n        /* \"#utility.yul\":17186:17195   */\n      dup3\n        /* \"#utility.yul\":17182:17200   */\n      add\n        /* \"#utility.yul\":17174:17200   */\n      swap1\n      pop\n        /* \"#utility.yul\":17210:17281   */\n      tag_602\n        /* \"#utility.yul\":17278:17279   */\n      0x00\n        /* \"#utility.yul\":17267:17276   */\n      dup4\n        /* \"#utility.yul\":17263:17280   */\n      add\n        /* \"#utility.yul\":17254:17260   */\n      dup5\n        /* \"#utility.yul\":17210:17281   */\n      tag_553\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":17066:17288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17294:17847   */\n    tag_36:\n        /* \"#utility.yul\":17471:17475   */\n      0x00\n        /* \"#utility.yul\":17509:17512   */\n      0x80\n        /* \"#utility.yul\":17498:17507   */\n      dup3\n        /* \"#utility.yul\":17494:17513   */\n      add\n        /* \"#utility.yul\":17486:17513   */\n      swap1\n      pop\n        /* \"#utility.yul\":17523:17594   */\n      tag_604\n        /* \"#utility.yul\":17591:17592   */\n      0x00\n        /* \"#utility.yul\":17580:17589   */\n      dup4\n        /* \"#utility.yul\":17576:17593   */\n      add\n        /* \"#utility.yul\":17567:17573   */\n      dup8\n        /* \"#utility.yul\":17523:17594   */\n      tag_553\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":17604:17676   */\n      tag_605\n        /* \"#utility.yul\":17672:17674   */\n      0x20\n        /* \"#utility.yul\":17661:17670   */\n      dup4\n        /* \"#utility.yul\":17657:17675   */\n      add\n        /* \"#utility.yul\":17648:17654   */\n      dup7\n        /* \"#utility.yul\":17604:17676   */\n      tag_553\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":17686:17758   */\n      tag_606\n        /* \"#utility.yul\":17754:17756   */\n      0x40\n        /* \"#utility.yul\":17743:17752   */\n      dup4\n        /* \"#utility.yul\":17739:17757   */\n      add\n        /* \"#utility.yul\":17730:17736   */\n      dup6\n        /* \"#utility.yul\":17686:17758   */\n      tag_553\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":17768:17840   */\n      tag_607\n        /* \"#utility.yul\":17836:17838   */\n      0x60\n        /* \"#utility.yul\":17825:17834   */\n      dup4\n        /* \"#utility.yul\":17821:17839   */\n      add\n        /* \"#utility.yul\":17812:17818   */\n      dup5\n        /* \"#utility.yul\":17768:17840   */\n      tag_553\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":17294:17847   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17934:18032   */\n    tag_481:\n        /* \"#utility.yul\":17985:17991   */\n      0x00\n        /* \"#utility.yul\":18019:18024   */\n      dup2\n        /* \"#utility.yul\":18013:18025   */\n      mload\n        /* \"#utility.yul\":18003:18025   */\n      swap1\n      pop\n        /* \"#utility.yul\":17934:18032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18038:18137   */\n    tag_497:\n        /* \"#utility.yul\":18090:18096   */\n      0x00\n        /* \"#utility.yul\":18124:18129   */\n      dup2\n        /* \"#utility.yul\":18118:18130   */\n      mload\n        /* \"#utility.yul\":18108:18130   */\n      swap1\n      pop\n        /* \"#utility.yul\":18038:18137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18143:18327   */\n    tag_472:\n        /* \"#utility.yul\":18242:18253   */\n      0x00\n        /* \"#utility.yul\":18276:18282   */\n      dup3\n        /* \"#utility.yul\":18271:18274   */\n      dup3\n        /* \"#utility.yul\":18264:18283   */\n      mstore\n        /* \"#utility.yul\":18316:18320   */\n      0x20\n        /* \"#utility.yul\":18311:18314   */\n      dup3\n        /* \"#utility.yul\":18307:18321   */\n      add\n        /* \"#utility.yul\":18292:18321   */\n      swap1\n      pop\n        /* \"#utility.yul\":18143:18327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18333:18480   */\n    tag_483:\n        /* \"#utility.yul\":18434:18445   */\n      0x00\n        /* \"#utility.yul\":18471:18474   */\n      dup2\n        /* \"#utility.yul\":18456:18474   */\n      swap1\n      pop\n        /* \"#utility.yul\":18333:18480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18486:18655   */\n    tag_499:\n        /* \"#utility.yul\":18570:18581   */\n      0x00\n        /* \"#utility.yul\":18604:18610   */\n      dup3\n        /* \"#utility.yul\":18599:18602   */\n      dup3\n        /* \"#utility.yul\":18592:18611   */\n      mstore\n        /* \"#utility.yul\":18644:18648   */\n      0x20\n        /* \"#utility.yul\":18639:18642   */\n      dup3\n        /* \"#utility.yul\":18635:18649   */\n      add\n        /* \"#utility.yul\":18620:18649   */\n      swap1\n      pop\n        /* \"#utility.yul\":18486:18655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18661:18966   */\n    tag_128:\n        /* \"#utility.yul\":18701:18704   */\n      0x00\n        /* \"#utility.yul\":18720:18740   */\n      tag_616\n        /* \"#utility.yul\":18738:18739   */\n      dup3\n        /* \"#utility.yul\":18720:18740   */\n      tag_556\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":18715:18740   */\n      swap2\n      pop\n        /* \"#utility.yul\":18754:18774   */\n      tag_617\n        /* \"#utility.yul\":18772:18773   */\n      dup4\n        /* \"#utility.yul\":18754:18774   */\n      tag_556\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":18749:18774   */\n      swap3\n      pop\n        /* \"#utility.yul\":18908:18909   */\n      dup3\n        /* \"#utility.yul\":18840:18906   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18836:18910   */\n      sub\n        /* \"#utility.yul\":18833:18834   */\n      dup3\n        /* \"#utility.yul\":18830:18911   */\n      gt\n        /* \"#utility.yul\":18827:18934   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":18914:18932   */\n      tag_619\n      tag_620\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":18827:18934   */\n    tag_618:\n        /* \"#utility.yul\":18958:18959   */\n      dup3\n        /* \"#utility.yul\":18955:18956   */\n      dup3\n        /* \"#utility.yul\":18951:18960   */\n      add\n        /* \"#utility.yul\":18944:18960   */\n      swap1\n      pop\n        /* \"#utility.yul\":18661:18966   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18972:19157   */\n    tag_344:\n        /* \"#utility.yul\":19012:19013   */\n      0x00\n        /* \"#utility.yul\":19029:19049   */\n      tag_622\n        /* \"#utility.yul\":19047:19048   */\n      dup3\n        /* \"#utility.yul\":19029:19049   */\n      tag_556\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":19024:19049   */\n      swap2\n      pop\n        /* \"#utility.yul\":19063:19083   */\n      tag_623\n        /* \"#utility.yul\":19081:19082   */\n      dup4\n        /* \"#utility.yul\":19063:19083   */\n      tag_556\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":19058:19083   */\n      swap3\n      pop\n        /* \"#utility.yul\":19102:19103   */\n      dup3\n        /* \"#utility.yul\":19092:19127   */\n      tag_624\n      jumpi\n        /* \"#utility.yul\":19107:19125   */\n      tag_625\n      tag_626\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":19092:19127   */\n    tag_624:\n        /* \"#utility.yul\":19149:19150   */\n      dup3\n        /* \"#utility.yul\":19146:19147   */\n      dup3\n        /* \"#utility.yul\":19142:19151   */\n      div\n        /* \"#utility.yul\":19137:19151   */\n      swap1\n      pop\n        /* \"#utility.yul\":18972:19157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19163:19511   */\n    tag_341:\n        /* \"#utility.yul\":19203:19210   */\n      0x00\n        /* \"#utility.yul\":19226:19246   */\n      tag_628\n        /* \"#utility.yul\":19244:19245   */\n      dup3\n        /* \"#utility.yul\":19226:19246   */\n      tag_556\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":19221:19246   */\n      swap2\n      pop\n        /* \"#utility.yul\":19260:19280   */\n      tag_629\n        /* \"#utility.yul\":19278:19279   */\n      dup4\n        /* \"#utility.yul\":19260:19280   */\n      tag_556\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":19255:19280   */\n      swap3\n      pop\n        /* \"#utility.yul\":19448:19449   */\n      dup2\n        /* \"#utility.yul\":19380:19446   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19376:19450   */\n      div\n        /* \"#utility.yul\":19373:19374   */\n      dup4\n        /* \"#utility.yul\":19370:19451   */\n      gt\n        /* \"#utility.yul\":19365:19366   */\n      dup3\n        /* \"#utility.yul\":19358:19367   */\n      iszero\n        /* \"#utility.yul\":19351:19368   */\n      iszero\n        /* \"#utility.yul\":19347:19452   */\n      and\n        /* \"#utility.yul\":19344:19475   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":19455:19473   */\n      tag_631\n      tag_620\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":19344:19475   */\n    tag_630:\n        /* \"#utility.yul\":19503:19504   */\n      dup3\n        /* \"#utility.yul\":19500:19501   */\n      dup3\n        /* \"#utility.yul\":19496:19505   */\n      mul\n        /* \"#utility.yul\":19485:19505   */\n      swap1\n      pop\n        /* \"#utility.yul\":19163:19511   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19517:19708   */\n    tag_187:\n        /* \"#utility.yul\":19557:19561   */\n      0x00\n        /* \"#utility.yul\":19577:19597   */\n      tag_633\n        /* \"#utility.yul\":19595:19596   */\n      dup3\n        /* \"#utility.yul\":19577:19597   */\n      tag_556\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":19572:19597   */\n      swap2\n      pop\n        /* \"#utility.yul\":19611:19631   */\n      tag_634\n        /* \"#utility.yul\":19629:19630   */\n      dup4\n        /* \"#utility.yul\":19611:19631   */\n      tag_556\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":19606:19631   */\n      swap3\n      pop\n        /* \"#utility.yul\":19650:19651   */\n      dup3\n        /* \"#utility.yul\":19647:19648   */\n      dup3\n        /* \"#utility.yul\":19644:19652   */\n      lt\n        /* \"#utility.yul\":19641:19675   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":19655:19673   */\n      tag_636\n      tag_620\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":19641:19675   */\n    tag_635:\n        /* \"#utility.yul\":19700:19701   */\n      dup3\n        /* \"#utility.yul\":19697:19698   */\n      dup3\n        /* \"#utility.yul\":19693:19702   */\n      sub\n        /* \"#utility.yul\":19685:19702   */\n      swap1\n      pop\n        /* \"#utility.yul\":19517:19708   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19714:19810   */\n    tag_468:\n        /* \"#utility.yul\":19751:19758   */\n      0x00\n        /* \"#utility.yul\":19780:19804   */\n      tag_638\n        /* \"#utility.yul\":19798:19803   */\n      dup3\n        /* \"#utility.yul\":19780:19804   */\n      tag_639\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":19769:19804   */\n      swap1\n      pop\n        /* \"#utility.yul\":19714:19810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19816:19906   */\n    tag_640:\n        /* \"#utility.yul\":19850:19857   */\n      0x00\n        /* \"#utility.yul\":19893:19898   */\n      dup2\n        /* \"#utility.yul\":19886:19899   */\n      iszero\n        /* \"#utility.yul\":19879:19900   */\n      iszero\n        /* \"#utility.yul\":19868:19900   */\n      swap1\n      pop\n        /* \"#utility.yul\":19816:19906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19912:20038   */\n    tag_639:\n        /* \"#utility.yul\":19949:19956   */\n      0x00\n        /* \"#utility.yul\":19989:20031   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19982:19987   */\n      dup3\n        /* \"#utility.yul\":19978:20032   */\n      and\n        /* \"#utility.yul\":19967:20032   */\n      swap1\n      pop\n        /* \"#utility.yul\":19912:20038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20044:20121   */\n    tag_556:\n        /* \"#utility.yul\":20081:20088   */\n      0x00\n        /* \"#utility.yul\":20110:20115   */\n      dup2\n        /* \"#utility.yul\":20099:20115   */\n      swap1\n      pop\n        /* \"#utility.yul\":20044:20121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20127:20267   */\n    tag_489:\n        /* \"#utility.yul\":20191:20200   */\n      0x00\n        /* \"#utility.yul\":20224:20261   */\n      tag_645\n        /* \"#utility.yul\":20255:20260   */\n      dup3\n        /* \"#utility.yul\":20224:20261   */\n      tag_646\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":20211:20261   */\n      swap1\n      pop\n        /* \"#utility.yul\":20127:20267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20273:20415   */\n    tag_493:\n        /* \"#utility.yul\":20339:20348   */\n      0x00\n        /* \"#utility.yul\":20372:20409   */\n      tag_648\n        /* \"#utility.yul\":20403:20408   */\n      dup3\n        /* \"#utility.yul\":20372:20409   */\n      tag_646\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":20359:20409   */\n      swap1\n      pop\n        /* \"#utility.yul\":20273:20415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20421:20547   */\n    tag_646:\n        /* \"#utility.yul\":20471:20480   */\n      0x00\n        /* \"#utility.yul\":20504:20541   */\n      tag_650\n        /* \"#utility.yul\":20535:20540   */\n      dup3\n        /* \"#utility.yul\":20504:20541   */\n      tag_651\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":20491:20541   */\n      swap1\n      pop\n        /* \"#utility.yul\":20421:20547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20553:20666   */\n    tag_651:\n        /* \"#utility.yul\":20603:20612   */\n      0x00\n        /* \"#utility.yul\":20636:20660   */\n      tag_653\n        /* \"#utility.yul\":20654:20659   */\n      dup3\n        /* \"#utility.yul\":20636:20660   */\n      tag_639\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":20623:20660   */\n      swap1\n      pop\n        /* \"#utility.yul\":20553:20666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20672:20826   */\n    tag_477:\n        /* \"#utility.yul\":20756:20762   */\n      dup3\n        /* \"#utility.yul\":20751:20754   */\n      dup2\n        /* \"#utility.yul\":20746:20749   */\n      dup4\n        /* \"#utility.yul\":20733:20763   */\n      calldatacopy\n        /* \"#utility.yul\":20818:20819   */\n      0x00\n        /* \"#utility.yul\":20809:20815   */\n      dup4\n        /* \"#utility.yul\":20804:20807   */\n      dup4\n        /* \"#utility.yul\":20800:20816   */\n      add\n        /* \"#utility.yul\":20793:20820   */\n      mstore\n        /* \"#utility.yul\":20672:20826   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20832:21139   */\n    tag_485:\n        /* \"#utility.yul\":20900:20901   */\n      0x00\n        /* \"#utility.yul\":20910:21023   */\n    tag_656:\n        /* \"#utility.yul\":20924:20930   */\n      dup4\n        /* \"#utility.yul\":20921:20922   */\n      dup2\n        /* \"#utility.yul\":20918:20931   */\n      lt\n        /* \"#utility.yul\":20910:21023   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":21009:21010   */\n      dup1\n        /* \"#utility.yul\":21004:21007   */\n      dup3\n        /* \"#utility.yul\":21000:21011   */\n      add\n        /* \"#utility.yul\":20994:21012   */\n      mload\n        /* \"#utility.yul\":20990:20991   */\n      dup2\n        /* \"#utility.yul\":20985:20988   */\n      dup5\n        /* \"#utility.yul\":20981:20992   */\n      add\n        /* \"#utility.yul\":20974:21013   */\n      mstore\n        /* \"#utility.yul\":20946:20948   */\n      0x20\n        /* \"#utility.yul\":20943:20944   */\n      dup2\n        /* \"#utility.yul\":20939:20949   */\n      add\n        /* \"#utility.yul\":20934:20949   */\n      swap1\n      pop\n        /* \"#utility.yul\":20910:21023   */\n      jump(tag_656)\n    tag_658:\n        /* \"#utility.yul\":21041:21047   */\n      dup4\n        /* \"#utility.yul\":21038:21039   */\n      dup2\n        /* \"#utility.yul\":21035:21048   */\n      gt\n        /* \"#utility.yul\":21032:21133   */\n      iszero\n      tag_659\n      jumpi\n        /* \"#utility.yul\":21121:21122   */\n      0x00\n        /* \"#utility.yul\":21112:21118   */\n      dup5\n        /* \"#utility.yul\":21107:21110   */\n      dup5\n        /* \"#utility.yul\":21103:21119   */\n      add\n        /* \"#utility.yul\":21096:21123   */\n      mstore\n        /* \"#utility.yul\":21032:21133   */\n    tag_659:\n        /* \"#utility.yul\":20881:21139   */\n      pop\n        /* \"#utility.yul\":20832:21139   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21145:21378   */\n    tag_137:\n        /* \"#utility.yul\":21184:21187   */\n      0x00\n        /* \"#utility.yul\":21207:21231   */\n      tag_661\n        /* \"#utility.yul\":21225:21230   */\n      dup3\n        /* \"#utility.yul\":21207:21231   */\n      tag_556\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":21198:21231   */\n      swap2\n      pop\n        /* \"#utility.yul\":21253:21319   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21246:21251   */\n      dup3\n        /* \"#utility.yul\":21243:21320   */\n      eq\n        /* \"#utility.yul\":21240:21343   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":21323:21341   */\n      tag_663\n      tag_620\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":21240:21343   */\n    tag_662:\n        /* \"#utility.yul\":21370:21371   */\n      0x01\n        /* \"#utility.yul\":21363:21368   */\n      dup3\n        /* \"#utility.yul\":21359:21372   */\n      add\n        /* \"#utility.yul\":21352:21372   */\n      swap1\n      pop\n        /* \"#utility.yul\":21145:21378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21384:21564   */\n    tag_620:\n        /* \"#utility.yul\":21432:21509   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21429:21430   */\n      0x00\n        /* \"#utility.yul\":21422:21510   */\n      mstore\n        /* \"#utility.yul\":21529:21533   */\n      0x11\n        /* \"#utility.yul\":21526:21527   */\n      0x04\n        /* \"#utility.yul\":21519:21534   */\n      mstore\n        /* \"#utility.yul\":21553:21557   */\n      0x24\n        /* \"#utility.yul\":21550:21551   */\n      0x00\n        /* \"#utility.yul\":21543:21558   */\n      revert\n        /* \"#utility.yul\":21570:21750   */\n    tag_626:\n        /* \"#utility.yul\":21618:21695   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21615:21616   */\n      0x00\n        /* \"#utility.yul\":21608:21696   */\n      mstore\n        /* \"#utility.yul\":21715:21719   */\n      0x12\n        /* \"#utility.yul\":21712:21713   */\n      0x04\n        /* \"#utility.yul\":21705:21720   */\n      mstore\n        /* \"#utility.yul\":21739:21743   */\n      0x24\n        /* \"#utility.yul\":21736:21737   */\n      0x00\n        /* \"#utility.yul\":21729:21744   */\n      revert\n        /* \"#utility.yul\":21756:21936   */\n    tag_109:\n        /* \"#utility.yul\":21804:21881   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21801:21802   */\n      0x00\n        /* \"#utility.yul\":21794:21882   */\n      mstore\n        /* \"#utility.yul\":21901:21905   */\n      0x32\n        /* \"#utility.yul\":21898:21899   */\n      0x04\n        /* \"#utility.yul\":21891:21906   */\n      mstore\n        /* \"#utility.yul\":21925:21929   */\n      0x24\n        /* \"#utility.yul\":21922:21923   */\n      0x00\n        /* \"#utility.yul\":21915:21930   */\n      revert\n        /* \"#utility.yul\":21942:22059   */\n    tag_417:\n        /* \"#utility.yul\":22051:22052   */\n      0x00\n        /* \"#utility.yul\":22048:22049   */\n      dup1\n        /* \"#utility.yul\":22041:22053   */\n      revert\n        /* \"#utility.yul\":22065:22182   */\n    tag_414:\n        /* \"#utility.yul\":22174:22175   */\n      0x00\n        /* \"#utility.yul\":22171:22172   */\n      dup1\n        /* \"#utility.yul\":22164:22176   */\n      revert\n        /* \"#utility.yul\":22188:22305   */\n    tag_420:\n        /* \"#utility.yul\":22297:22298   */\n      0x00\n        /* \"#utility.yul\":22294:22295   */\n      dup1\n        /* \"#utility.yul\":22287:22299   */\n      revert\n        /* \"#utility.yul\":22311:22428   */\n    tag_446:\n        /* \"#utility.yul\":22420:22421   */\n      0x00\n        /* \"#utility.yul\":22417:22418   */\n      dup1\n        /* \"#utility.yul\":22410:22422   */\n      revert\n        /* \"#utility.yul\":22434:22551   */\n    tag_475:\n        /* \"#utility.yul\":22543:22544   */\n      0x00\n        /* \"#utility.yul\":22540:22541   */\n      dup1\n        /* \"#utility.yul\":22533:22545   */\n      revert\n        /* \"#utility.yul\":22557:22674   */\n    tag_435:\n        /* \"#utility.yul\":22666:22667   */\n      0x00\n        /* \"#utility.yul\":22663:22664   */\n      dup1\n        /* \"#utility.yul\":22656:22668   */\n      revert\n        /* \"#utility.yul\":22680:22782   */\n    tag_502:\n        /* \"#utility.yul\":22721:22727   */\n      0x00\n        /* \"#utility.yul\":22772:22774   */\n      0x1f\n        /* \"#utility.yul\":22768:22775   */\n      not\n        /* \"#utility.yul\":22763:22765   */\n      0x1f\n        /* \"#utility.yul\":22756:22761   */\n      dup4\n        /* \"#utility.yul\":22752:22766   */\n      add\n        /* \"#utility.yul\":22748:22776   */\n      and\n        /* \"#utility.yul\":22738:22776   */\n      swap1\n      pop\n        /* \"#utility.yul\":22680:22782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22788:22962   */\n    tag_507:\n        /* \"#utility.yul\":22928:22954   */\n      0x4e4654205374616b696e673a20456d7074792041727261790000000000000000\n        /* \"#utility.yul\":22924:22925   */\n      0x00\n        /* \"#utility.yul\":22916:22922   */\n      dup3\n        /* \"#utility.yul\":22912:22926   */\n      add\n        /* \"#utility.yul\":22905:22955   */\n      mstore\n        /* \"#utility.yul\":22788:22962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22968:23197   */\n    tag_512:\n        /* \"#utility.yul\":23108:23142   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":23104:23105   */\n      0x00\n        /* \"#utility.yul\":23096:23102   */\n      dup3\n        /* \"#utility.yul\":23092:23106   */\n      add\n        /* \"#utility.yul\":23085:23143   */\n      mstore\n        /* \"#utility.yul\":23177:23189   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23172:23174   */\n      0x20\n        /* \"#utility.yul\":23164:23170   */\n      dup3\n        /* \"#utility.yul\":23160:23175   */\n      add\n        /* \"#utility.yul\":23153:23190   */\n      mstore\n        /* \"#utility.yul\":22968:23197   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23203:23428   */\n    tag_517:\n        /* \"#utility.yul\":23343:23377   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":23339:23340   */\n      0x00\n        /* \"#utility.yul\":23331:23337   */\n      dup3\n        /* \"#utility.yul\":23327:23341   */\n      add\n        /* \"#utility.yul\":23320:23378   */\n      mstore\n        /* \"#utility.yul\":23412:23420   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23407:23409   */\n      0x20\n        /* \"#utility.yul\":23399:23405   */\n      dup3\n        /* \"#utility.yul\":23395:23410   */\n      add\n        /* \"#utility.yul\":23388:23421   */\n      mstore\n        /* \"#utility.yul\":23203:23428   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23434:23670   */\n    tag_522:\n        /* \"#utility.yul\":23574:23608   */\n      0x4e4654205374616b696e673a206475706c696361746520746f6b656e20696473\n        /* \"#utility.yul\":23570:23571   */\n      0x00\n        /* \"#utility.yul\":23562:23568   */\n      dup3\n        /* \"#utility.yul\":23558:23572   */\n      add\n        /* \"#utility.yul\":23551:23609   */\n      mstore\n        /* \"#utility.yul\":23643:23662   */\n      0x20696e20696e70757420706172616d732e000000000000000000000000000000\n        /* \"#utility.yul\":23638:23640   */\n      0x20\n        /* \"#utility.yul\":23630:23636   */\n      dup3\n        /* \"#utility.yul\":23626:23641   */\n      add\n        /* \"#utility.yul\":23619:23663   */\n      mstore\n        /* \"#utility.yul\":23434:23670   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23676:23858   */\n    tag_527:\n        /* \"#utility.yul\":23816:23850   */\n      0x4e4654205374616b696e673a206e6f74206f776e6572206f6620746f6b656e2e\n        /* \"#utility.yul\":23812:23813   */\n      0x00\n        /* \"#utility.yul\":23804:23810   */\n      dup3\n        /* \"#utility.yul\":23800:23814   */\n      add\n        /* \"#utility.yul\":23793:23851   */\n      mstore\n        /* \"#utility.yul\":23676:23858   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23864:24085   */\n    tag_532:\n        /* \"#utility.yul\":24004:24038   */\n      0x4e4654205374616b696e673a20746f6b656e20616c7265616479207374616b65\n        /* \"#utility.yul\":24000:24001   */\n      0x00\n        /* \"#utility.yul\":23992:23998   */\n      dup3\n        /* \"#utility.yul\":23988:24002   */\n      add\n        /* \"#utility.yul\":23981:24039   */\n      mstore\n        /* \"#utility.yul\":24073:24077   */\n      0x642e000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24068:24070   */\n      0x20\n        /* \"#utility.yul\":24060:24066   */\n      dup3\n        /* \"#utility.yul\":24056:24071   */\n      add\n        /* \"#utility.yul\":24049:24078   */\n      mstore\n        /* \"#utility.yul\":23864:24085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24091:24273   */\n    tag_537:\n        /* \"#utility.yul\":24231:24265   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":24227:24228   */\n      0x00\n        /* \"#utility.yul\":24219:24225   */\n      dup3\n        /* \"#utility.yul\":24215:24229   */\n      add\n        /* \"#utility.yul\":24208:24266   */\n      mstore\n        /* \"#utility.yul\":24091:24273   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24279:24459   */\n    tag_542:\n        /* \"#utility.yul\":24419:24451   */\n      0x736574486172766573744665653a2066656550657263656e74203e2034300000\n        /* \"#utility.yul\":24415:24416   */\n      0x00\n        /* \"#utility.yul\":24407:24413   */\n      dup3\n        /* \"#utility.yul\":24403:24417   */\n      add\n        /* \"#utility.yul\":24396:24452   */\n      mstore\n        /* \"#utility.yul\":24279:24459   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24465:24644   */\n    tag_547:\n        /* \"#utility.yul\":24605:24636   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":24601:24602   */\n      0x00\n        /* \"#utility.yul\":24593:24599   */\n      dup3\n        /* \"#utility.yul\":24589:24603   */\n      add\n        /* \"#utility.yul\":24582:24637   */\n      mstore\n        /* \"#utility.yul\":24465:24644   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24650:24894   */\n    tag_552:\n        /* \"#utility.yul\":24790:24824   */\n      0x4e667420556e7374616b696e673a20746f6b656e206e6f74207374616b656420\n        /* \"#utility.yul\":24786:24787   */\n      0x00\n        /* \"#utility.yul\":24778:24784   */\n      dup3\n        /* \"#utility.yul\":24774:24788   */\n      add\n        /* \"#utility.yul\":24767:24825   */\n      mstore\n        /* \"#utility.yul\":24859:24886   */\n      0x6f7220696e636f727265637420746f6b656e206f776e65722e00000000000000\n        /* \"#utility.yul\":24854:24856   */\n      0x20\n        /* \"#utility.yul\":24846:24852   */\n      dup3\n        /* \"#utility.yul\":24842:24857   */\n      add\n        /* \"#utility.yul\":24835:24887   */\n      mstore\n        /* \"#utility.yul\":24650:24894   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24900:25022   */\n    tag_406:\n        /* \"#utility.yul\":24973:24997   */\n      tag_685\n        /* \"#utility.yul\":24991:24996   */\n      dup2\n        /* \"#utility.yul\":24973:24997   */\n      tag_468\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":24966:24971   */\n      dup2\n        /* \"#utility.yul\":24963:24998   */\n      eq\n        /* \"#utility.yul\":24953:25016   */\n      tag_686\n      jumpi\n        /* \"#utility.yul\":25012:25013   */\n      0x00\n        /* \"#utility.yul\":25009:25010   */\n      dup1\n        /* \"#utility.yul\":25002:25014   */\n      revert\n        /* \"#utility.yul\":24953:25016   */\n    tag_686:\n        /* \"#utility.yul\":24900:25022   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25028:25144   */\n    tag_424:\n        /* \"#utility.yul\":25098:25119   */\n      tag_688\n        /* \"#utility.yul\":25113:25118   */\n      dup2\n        /* \"#utility.yul\":25098:25119   */\n      tag_640\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":25091:25096   */\n      dup2\n        /* \"#utility.yul\":25088:25120   */\n      eq\n        /* \"#utility.yul\":25078:25138   */\n      tag_689\n      jumpi\n        /* \"#utility.yul\":25134:25135   */\n      0x00\n        /* \"#utility.yul\":25131:25132   */\n      dup1\n        /* \"#utility.yul\":25124:25136   */\n      revert\n        /* \"#utility.yul\":25078:25138   */\n    tag_689:\n        /* \"#utility.yul\":25028:25144   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25150:25272   */\n    tag_428:\n        /* \"#utility.yul\":25223:25247   */\n      tag_691\n        /* \"#utility.yul\":25241:25246   */\n      dup2\n        /* \"#utility.yul\":25223:25247   */\n      tag_556\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":25216:25221   */\n      dup2\n        /* \"#utility.yul\":25213:25248   */\n      eq\n        /* \"#utility.yul\":25203:25266   */\n      tag_692\n      jumpi\n        /* \"#utility.yul\":25262:25263   */\n      0x00\n        /* \"#utility.yul\":25259:25260   */\n      dup1\n        /* \"#utility.yul\":25252:25264   */\n      revert\n        /* \"#utility.yul\":25203:25266   */\n    tag_692:\n        /* \"#utility.yul\":25150:25272   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220321bfe4a732571b6d5227e5d62f94896647dd37654d1daa4845e0e4a111d466064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1198": {
									"entryPoint": null,
									"id": 1198,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_143": {
									"entryPoint": null,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 279,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_223": {
									"entryPoint": 287,
									"id": 223,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IBEP20_$100_fromMemory": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$1076_fromMemory": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721_$1076t_contract$_IBEP20_$100t_uint256t_address_fromMemory": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IBEP20_$100": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$1076": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IBEP20_$100": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$1076": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2996:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "243:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "258:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "252:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "243:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "315:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IBEP20_$100",
																	"nodeType": "YulIdentifier",
																	"src": "274:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "274:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "274:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IBEP20_$100_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "219:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "227:5:1",
														"type": ""
													}
												],
												"src": "156:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "412:96:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "422:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "437:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "422:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "496:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$1076",
																	"nodeType": "YulIdentifier",
																	"src": "453:42:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "453:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "453:49:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$1076_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "390:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "398:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "406:5:1",
														"type": ""
													}
												],
												"src": "333:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "577:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "587:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "602:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "596:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "587:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "645:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "618:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "618:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "618:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "555:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "563:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "571:5:1",
														"type": ""
													}
												],
												"src": "514:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "821:722:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "868:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "870:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "870:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "870:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "842:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "838:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "863:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "834:33:1"
															},
															"nodeType": "YulIf",
															"src": "831:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "961:144:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "976:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "990:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "980:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1005:90:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1067:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1078:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1063:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1063:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1087:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$1076_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1015:47:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:80:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1005:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1115:143:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1130:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1134:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1160:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1220:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1231:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1216:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1216:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1240:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IBEP20_$100_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1170:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1170:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1160:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1268:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1283:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1297:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1287:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1313:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1359:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1370:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1355:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1355:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1379:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1323:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1323:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1313:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1407:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1422:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1436:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1426:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1452:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1462:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1462:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1452:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$1076t_contract$_IBEP20_$100t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "767:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "778:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "790:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "798:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "806:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "814:6:1",
														"type": ""
													}
												],
												"src": "663:880:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1589:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1599:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1615:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1609:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1582:6:1",
														"type": ""
													}
												],
												"src": "1549:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1675:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1685:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1714:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1696:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1685:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1657:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1667:7:1",
														"type": ""
													}
												],
												"src": "1630:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1830:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1812:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1801:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IBEP20_$100",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1773:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1783:7:1",
														"type": ""
													}
												],
												"src": "1732:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1909:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1919:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1948:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1930:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1919:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$1076",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1891:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1901:7:1",
														"type": ""
													}
												],
												"src": "1848:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2011:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2021:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2036:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2021:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1993:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2003:7:1",
														"type": ""
													}
												],
												"src": "1966:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2143:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2153:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2164:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2153:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2125:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2135:7:1",
														"type": ""
													}
												],
												"src": "2098:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2290:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2280:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2280:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2280:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2181:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2393:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2410:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2403:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2403:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2304:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2470:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2527:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2536:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2539:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2529:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2529:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2529:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2493:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2518:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2500:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2500:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2490:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2490:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2483:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2483:43:1"
															},
															"nodeType": "YulIf",
															"src": "2480:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2463:5:1",
														"type": ""
													}
												],
												"src": "2427:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2683:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2692:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2695:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2685:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2685:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2685:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2635:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2674:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IBEP20_$100",
																					"nodeType": "YulIdentifier",
																					"src": "2642:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2642:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2632:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2632:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2625:57:1"
															},
															"nodeType": "YulIf",
															"src": "2622:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IBEP20_$100",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2605:5:1",
														"type": ""
													}
												],
												"src": "2555:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2770:95:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2843:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2852:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2855:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2845:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2845:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2845:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2793:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2834:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$1076",
																					"nodeType": "YulIdentifier",
																					"src": "2800:33:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2800:40:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2790:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2790:51:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:59:1"
															},
															"nodeType": "YulIf",
															"src": "2780:79:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$1076",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2763:5:1",
														"type": ""
													}
												],
												"src": "2711:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2914:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2971:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2980:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2983:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2973:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2973:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2973:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2937:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2962:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2944:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2944:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2934:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2934:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:43:1"
															},
															"nodeType": "YulIf",
															"src": "2924:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2907:5:1",
														"type": ""
													}
												],
												"src": "2871:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_IBEP20_$100_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IBEP20_$100(value)\n    }\n\n    function abi_decode_t_contract$_IERC721_$1076_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC721_$1076(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$1076t_contract$_IBEP20_$100t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$1076_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IBEP20_$100_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IBEP20_$100(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$1076(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IBEP20_$100(value) {\n        if iszero(eq(value, cleanup_t_contract$_IBEP20_$100(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC721_$1076(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$1076(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040523480156200001157600080fd5b50604051620032c2380380620032c283398181016040528101906200003791906200023f565b620000576200004b6200011760201b60201c565b6200011f60201b60201c565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508160038190555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000384565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001f4816200031c565b92915050565b6000815190506200020b8162000336565b92915050565b600081519050620002228162000350565b92915050565b60008151905062000239816200036a565b92915050565b600080600080608085870312156200025c576200025b62000317565b5b60006200026c8782880162000211565b94505060206200027f87828801620001fa565b9350506040620002928782880162000228565b9250506060620002a587828801620001e3565b91505092959194509250565b6000620002be82620002ed565b9050919050565b6000620002d282620002b1565b9050919050565b6000620002e682620002b1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6200032781620002b1565b81146200033357600080fd5b50565b6200034181620002c5565b81146200034d57600080fd5b50565b6200035b81620002d9565b81146200036757600080fd5b50565b62000375816200030d565b81146200038157600080fd5b50565b60805160601c60a05160601c612ebe620004046000396000818161099d01528181610a4301528181610b8901528181610c3801528181610ce901528181610d3001528181610ddf01528181610eb2015281816115d1015261168001526000818161042401528181610870015281816112fa015261183c0152612ebe6000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638ae39cac116100b8578063b59629171161007c578063b5962917146102f5578063d06fcba814610313578063d086c25414610331578063e449f34114610361578063f25f4b561461037d578063f2fde38b1461039b57610137565b80638ae39cac1461024f5780638da5cb5b1461026d5780638dbb1e3a1461028b57806390d49b9d146102bb578063a9f8d181146102d757610137565b80634641257d116100ff5780634641257d146101e3578063567e98f9146101ed5780635e42b4551461020b578063715018a614610229578063792b55b61461023357610137565b80630fbf0a931461013c5780631959a0021461015857806319fca9f61461018b5780631e2720ff146101a957806343db3c5f146101c5575b600080fd5b61015660048036038101906101519190612255565b6103b7565b005b610172600480360381019061016d91906121fb565b61096b565b6040516101829493929190612877565b60405180910390f35b61019361099b565b6040516101a091906126c4565b60405180910390f35b6101c360048036038101906101be91906122cf565b6109bf565b005b6101cd610af4565b6040516101da919061285c565b60405180910390f35b6101eb610afa565b005b6101f5610f81565b604051610202919061285c565b60405180910390f35b610213610f87565b604051610220919061285c565b60405180910390f35b610231610ff2565b005b61024d600480360381019061024891906122cf565b61107a565b005b61025761117b565b604051610264919061285c565b60405180910390f35b610275611181565b60405161028291906125e0565b60405180910390f35b6102a560048036038101906102a09190612329565b6111aa565b6040516102b2919061285c565b60405180910390f35b6102d560048036038101906102d091906121fb565b6111c7565b005b6102df6112ec565b6040516102ec919061285c565b60405180910390f35b6102fd6112f2565b60405161030a919061285c565b60405180910390f35b61031b6112f8565b60405161032891906126df565b60405180910390f35b61034b600480360381019061034691906121fb565b61131c565b604051610358919061285c565b60405180910390f35b61037b60048036038101906103769190612255565b61136b565b005b610385611938565b60405161039291906125e0565b60405180910390f35b6103b560048036038101906103b091906121fb565b61195e565b005b600082829050116103fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f49061271c565b60405180910390fd5b60005b828290508110156106ae573373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e85858581811061047157610470612b8d565b5b905060200201356040518263ffffffff1660e01b8152600401610494919061285c565b60206040518083038186803b1580156104ac57600080fd5b505afa1580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e49190612228565b73ffffffffffffffffffffffffffffffffffffffff161461053a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105319061279c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166008600085858581811061056957610568612b8d565b5b90506020020135815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec906127bc565b60405180910390fd5b600060018261060491906128ff565b90505b8383905081101561069a5783838281811061062557610624612b8d565b5b9050602002013584848481811061063f5761063e612b8d565b5b905060200201351415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e9061277c565b60405180910390fd5b808061069290612ae6565b915050610607565b5080806106a690612ae6565b915050610400565b506106b7611a56565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154111561077257600061074f826001015461074164e8d4a510006107336002548760000154611b8a90919063ffffffff16565b611ba090919063ffffffff16565b611bb690919063ffffffff16565b9050610768818360020154611bcc90919063ffffffff16565b8260020181905550505b600083839050905061078f81600654611bcc90919063ffffffff16565b6006819055506107ac818360000154611bcc90919063ffffffff16565b82600001819055506107e464e8d4a510006107d66002548560000154611b8a90919063ffffffff16565b611ba090919063ffffffff16565b826001018190555042826003018190555060005b8484905081101561092957336008600087878581811061081b5761081a612b8d565b5b90506020020135815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308888868181106108bf576108be612b8d565b5b905060200201356040518463ffffffff1660e01b81526004016108e4939291906125fb565b600060405180830381600087803b1580156108fe57600080fd5b505af1158015610912573d6000803e3d6000fd5b50505050808061092190612ae6565b9150506107f8565b507f134b166c6094cc1ccbf1e3353ce5c3cd9fd29869051bdb999895854d77cc5ef633858560405161095d93929190612632565b60405180910390a150505050565b60096020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109c7611be2565b73ffffffffffffffffffffffffffffffffffffffff166109e5611181565b73ffffffffffffffffffffffffffffffffffffffff1614610a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a32906127dc565b60405180910390fd5b610a883330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611bea909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f4f7fd5c9e17300a4800fd572ea53fc291e2ee7470d73346d16b357faee4e721082604051610ace919061285c565b60405180910390a2610aeb81600754611bcc90919063ffffffff16565b60078190555050565b60025481565b6000610b0533611c73565b90506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000610b746064610b6660055486611b8a90919063ffffffff16565b611ba090919063ffffffff16565b905060008184610b8491906129e0565b9050807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610be091906125e0565b60206040518083038186803b158015610bf857600080fd5b505afa158015610c0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3091906122fc565b1015610ce2577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c8f91906125e0565b60206040518083038186803b158015610ca757600080fd5b505afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf91906122fc565b90505b610d2d33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611da69092919063ffffffff16565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d8791906125e0565b60206040518083038186803b158015610d9f57600080fd5b505afa158015610db3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd791906122fc565b1015610e89577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e3691906125e0565b60206040518083038186803b158015610e4e57600080fd5b505afa158015610e62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8691906122fc565b91505b610ef6600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611da69092919063ffffffff16565b610efe611a56565b60008360020181905550610f3864e8d4a51000610f2a6002548660000154611b8a90919063ffffffff16565b611ba090919063ffffffff16565b83600101819055507f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954338284604051610f739392919061268d565b60405180910390a150505050565b60065481565b600060015443118015610f9d5750600060065414155b15610fe9576000610fb0600154436111aa565b90506000610fc960035483611b8a90919063ffffffff16565b9050610fe081600754611bb690919063ffffffff16565b92505050610fef565b60075490505b90565b610ffa611be2565b73ffffffffffffffffffffffffffffffffffffffff16611018611181565b73ffffffffffffffffffffffffffffffffffffffff161461106e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611065906127dc565b60405180910390fd5b6110786000611e2c565b565b611082611be2565b73ffffffffffffffffffffffffffffffffffffffff166110a0611181565b73ffffffffffffffffffffffffffffffffffffffff16146110f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ed906127dc565b60405180910390fd5b602881111561113a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611131906127fc565b60405180910390fd5b806005819055507ff419800a2d8930c61d5d9cd782aa72c512cf6be2f79da6db0b8855870b7269ed81604051611170919061285c565b60405180910390a150565b60035481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006111bf8383611bb690919063ffffffff16565b905092915050565b6111cf611be2565b73ffffffffffffffffffffffffffffffffffffffff166111ed611181565b73ffffffffffffffffffffffffffffffffffffffff1614611243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123a906127dc565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3d21e5a2b633291bd1ff5f9c654e402d063783c95759d2ea521b31fb30e4da4160405160405180910390a250565b60015481565b60055481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061132883611c73565b90506000611354606461134660055485611b8a90919063ffffffff16565b611ba090919063ffffffff16565b9050808261136291906129e0565b92505050919050565b600082829050116113b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a89061271c565b60405180910390fd5b60005b828290508110156115385760008383838181106113d4576113d3612b8d565b5b9050602002013590503373ffffffffffffffffffffffffffffffffffffffff166008600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461147e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114759061283c565b60405180910390fd5b600060018361148d91906128ff565b90505b84849050811015611523578484828181106114ae576114ad612b8d565b5b905060200201358585858181106114c8576114c7612b8d565b5b905060200201351415611510576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115079061277c565b60405180910390fd5b808061151b90612ae6565b915050611490565b5050808061153090612ae6565b9150506113b4565b50611541611a56565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006115cc82600101546115be64e8d4a510006115b06002548760000154611b8a90919063ffffffff16565b611ba090919063ffffffff16565b611bb690919063ffffffff16565b9050807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161162891906125e0565b60206040518083038186803b15801561164057600080fd5b505afa158015611654573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167891906122fc565b101561172a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116d791906125e0565b60206040518083038186803b1580156116ef57600080fd5b505afa158015611703573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172791906122fc565b90505b611741818360020154611bcc90919063ffffffff16565b8260020181905550600084849050905061176681600654611bb690919063ffffffff16565b600681905550611783818460000154611bb690919063ffffffff16565b83600001819055506117bb64e8d4a510006117ad6002548660000154611b8a90919063ffffffff16565b611ba090919063ffffffff16565b836001018190555060005b818110156118f5576000600860008888858181106117e7576117e6612b8d565b5b90506020020135815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd303389898681811061188b5761188a612b8d565b5b905060200201356040518463ffffffff1660e01b81526004016118b0939291906125fb565b600060405180830381600087803b1580156118ca57600080fd5b505af11580156118de573d6000803e3d6000fd5b5050505080806118ed90612ae6565b9150506117c6565b507f80cc10bf7e52583ae0a17d8dd6ab5005573b17a08091a091af1a81205a675c9133868660405161192993929190612632565b60405180910390a15050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611966611be2565b73ffffffffffffffffffffffffffffffffffffffff16611984611181565b73ffffffffffffffffffffffffffffffffffffffff16146119da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d1906127dc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a419061275c565b60405180910390fd5b611a5381611e2c565b50565b6001544311611a6457611b88565b60006006541415611a7b5743600181905550611b88565b6000611a89600154436111aa565b90506000611aa260035483611b8a90919063ffffffff16565b905060006007541415611abd57436001819055505050611b88565b806007541015611b1c57611b09611af8600654611aea64e8d4a51000600754611b8a90919063ffffffff16565b611ba090919063ffffffff16565b600254611bcc90919063ffffffff16565b6002819055506000600781905550611b7e565b611b3181600754611bb690919063ffffffff16565b600781905550611b77611b66600654611b5864e8d4a5100085611b8a90919063ffffffff16565b611ba090919063ffffffff16565b600254611bcc90919063ffffffff16565b6002819055505b4360018190555050505b565b60008183611b989190612986565b905092915050565b60008183611bae9190612955565b905092915050565b60008183611bc491906129e0565b905092915050565b60008183611bda91906128ff565b905092915050565b600033905090565b611c6d846323b872dd60e01b858585604051602401611c0b939291906125fb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ef0565b50505050565b600080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600254905060015443118015611cd25750600060065414155b15611d43576000611ce5600154436111aa565b90506000611cfe60035483611b8a90919063ffffffff16565b9050611d3e611d2f600654611d2164e8d4a5100085611b8a90919063ffffffff16565b611ba090919063ffffffff16565b84611bcc90919063ffffffff16565b925050505b611d9d8260020154611d8f8460010154611d8164e8d4a51000611d73878960000154611b8a90919063ffffffff16565b611ba090919063ffffffff16565b611bb690919063ffffffff16565b611bcc90919063ffffffff16565b92505050919050565b611e278363a9059cbb60e01b8484604051602401611dc5929190612664565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ef0565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611f52826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611fb79092919063ffffffff16565b9050600081511115611fb25780806020019051810190611f7291906122a2565b611fb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa89061273c565b60405180910390fd5b5b505050565b6060611fc68484600085611fcf565b90509392505050565b6060611fda856120f1565b612019576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120109061281c565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161204291906125c9565b60006040518083038185875af1925050503d806000811461207f576040519150601f19603f3d011682016040523d82523d6000602084013e612084565b606091505b509150915081156120995780925050506120e9565b6000815111156120ac5780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e091906126fa565b60405180910390fd5b949350505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561213357506000801b8214155b92505050919050565b60008135905061214b81612e43565b92915050565b60008151905061216081612e43565b92915050565b60008083601f84011261217c5761217b612bc1565b5b8235905067ffffffffffffffff81111561219957612198612bbc565b5b6020830191508360208202830111156121b5576121b4612bc6565b5b9250929050565b6000815190506121cb81612e5a565b92915050565b6000813590506121e081612e71565b92915050565b6000815190506121f581612e71565b92915050565b60006020828403121561221157612210612bd5565b5b600061221f8482850161213c565b91505092915050565b60006020828403121561223e5761223d612bd5565b5b600061224c84828501612151565b91505092915050565b6000806020838503121561226c5761226b612bd5565b5b600083013567ffffffffffffffff81111561228a57612289612bcb565b5b61229685828601612166565b92509250509250929050565b6000602082840312156122b8576122b7612bd5565b5b60006122c6848285016121bc565b91505092915050565b6000602082840312156122e5576122e4612bd5565b5b60006122f3848285016121d1565b91505092915050565b60006020828403121561231257612311612bd5565b5b6000612320848285016121e6565b91505092915050565b600080604083850312156123405761233f612bd5565b5b600061234e858286016121d1565b925050602061235f858286016121d1565b9150509250929050565b61237281612a14565b82525050565b600061238483856128d2565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156123b7576123b6612bd0565b5b6020830292506123c8838584612aa4565b82840190509392505050565b60006123df826128bc565b6123e981856128e3565b93506123f9818560208601612ab3565b80840191505092915050565b61240e81612a5c565b82525050565b61241d81612a6e565b82525050565b600061242e826128c7565b61243881856128ee565b9350612448818560208601612ab3565b61245181612bda565b840191505092915050565b60006124696018836128ee565b915061247482612beb565b602082019050919050565b600061248c602a836128ee565b915061249782612c14565b604082019050919050565b60006124af6026836128ee565b91506124ba82612c63565b604082019050919050565b60006124d26031836128ee565b91506124dd82612cb2565b604082019050919050565b60006124f56020836128ee565b915061250082612d01565b602082019050919050565b60006125186022836128ee565b915061252382612d2a565b604082019050919050565b600061253b6020836128ee565b915061254682612d79565b602082019050919050565b600061255e601e836128ee565b915061256982612da2565b602082019050919050565b6000612581601d836128ee565b915061258c82612dcb565b602082019050919050565b60006125a46039836128ee565b91506125af82612df4565b604082019050919050565b6125c381612a52565b82525050565b60006125d582846123d4565b915081905092915050565b60006020820190506125f56000830184612369565b92915050565b60006060820190506126106000830186612369565b61261d6020830185612369565b61262a60408301846125ba565b949350505050565b60006040820190506126476000830186612369565b818103602083015261265a818486612378565b9050949350505050565b60006040820190506126796000830185612369565b61268660208301846125ba565b9392505050565b60006060820190506126a26000830186612369565b6126af60208301856125ba565b6126bc60408301846125ba565b949350505050565b60006020820190506126d96000830184612405565b92915050565b60006020820190506126f46000830184612414565b92915050565b600060208201905081810360008301526127148184612423565b905092915050565b600060208201905081810360008301526127358161245c565b9050919050565b600060208201905081810360008301526127558161247f565b9050919050565b60006020820190508181036000830152612775816124a2565b9050919050565b60006020820190508181036000830152612795816124c5565b9050919050565b600060208201905081810360008301526127b5816124e8565b9050919050565b600060208201905081810360008301526127d58161250b565b9050919050565b600060208201905081810360008301526127f58161252e565b9050919050565b6000602082019050818103600083015261281581612551565b9050919050565b6000602082019050818103600083015261283581612574565b9050919050565b6000602082019050818103600083015261285581612597565b9050919050565b600060208201905061287160008301846125ba565b92915050565b600060808201905061288c60008301876125ba565b61289960208301866125ba565b6128a660408301856125ba565b6128b360608301846125ba565b95945050505050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061290a82612a52565b915061291583612a52565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561294a57612949612b2f565b5b828201905092915050565b600061296082612a52565b915061296b83612a52565b92508261297b5761297a612b5e565b5b828204905092915050565b600061299182612a52565b915061299c83612a52565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156129d5576129d4612b2f565b5b828202905092915050565b60006129eb82612a52565b91506129f683612a52565b925082821015612a0957612a08612b2f565b5b828203905092915050565b6000612a1f82612a32565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612a6782612a80565b9050919050565b6000612a7982612a80565b9050919050565b6000612a8b82612a92565b9050919050565b6000612a9d82612a32565b9050919050565b82818337600083830152505050565b60005b83811015612ad1578082015181840152602081019050612ab6565b83811115612ae0576000848401525b50505050565b6000612af182612a52565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612b2457612b23612b2f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e4654205374616b696e673a20456d7074792041727261790000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e4654205374616b696e673a206475706c696361746520746f6b656e2069647360008201527f20696e20696e70757420706172616d732e000000000000000000000000000000602082015250565b7f4e4654205374616b696e673a206e6f74206f776e6572206f6620746f6b656e2e600082015250565b7f4e4654205374616b696e673a20746f6b656e20616c7265616479207374616b6560008201527f642e000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f736574486172766573744665653a2066656550657263656e74203e2034300000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f4e667420556e7374616b696e673a20746f6b656e206e6f74207374616b65642060008201527f6f7220696e636f727265637420746f6b656e206f776e65722e00000000000000602082015250565b612e4c81612a14565b8114612e5757600080fd5b50565b612e6381612a26565b8114612e6e57600080fd5b50565b612e7a81612a52565b8114612e8557600080fd5b5056fea2646970667358221220321bfe4a732571b6d5227e5d62f94896647dd37654d1daa4845e0e4a111d466064736f6c63430008070033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x32C2 CODESIZE SUB DUP1 PUSH3 0x32C2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x23F JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x117 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x11F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x384 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F4 DUP2 PUSH3 0x31C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x20B DUP2 PUSH3 0x336 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x222 DUP2 PUSH3 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x239 DUP2 PUSH3 0x36A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x25C JUMPI PUSH3 0x25B PUSH3 0x317 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x26C DUP8 DUP3 DUP9 ADD PUSH3 0x211 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x27F DUP8 DUP3 DUP9 ADD PUSH3 0x1FA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x292 DUP8 DUP3 DUP9 ADD PUSH3 0x228 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x2A5 DUP8 DUP3 DUP9 ADD PUSH3 0x1E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2BE DUP3 PUSH3 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D2 DUP3 PUSH3 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E6 DUP3 PUSH3 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x327 DUP2 PUSH3 0x2B1 JUMP JUMPDEST DUP2 EQ PUSH3 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x341 DUP2 PUSH3 0x2C5 JUMP JUMPDEST DUP2 EQ PUSH3 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x35B DUP2 PUSH3 0x2D9 JUMP JUMPDEST DUP2 EQ PUSH3 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x375 DUP2 PUSH3 0x30D JUMP JUMPDEST DUP2 EQ PUSH3 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0x2EBE PUSH3 0x404 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x99D ADD MSTORE DUP2 DUP2 PUSH2 0xA43 ADD MSTORE DUP2 DUP2 PUSH2 0xB89 ADD MSTORE DUP2 DUP2 PUSH2 0xC38 ADD MSTORE DUP2 DUP2 PUSH2 0xCE9 ADD MSTORE DUP2 DUP2 PUSH2 0xD30 ADD MSTORE DUP2 DUP2 PUSH2 0xDDF ADD MSTORE DUP2 DUP2 PUSH2 0xEB2 ADD MSTORE DUP2 DUP2 PUSH2 0x15D1 ADD MSTORE PUSH2 0x1680 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x424 ADD MSTORE DUP2 DUP2 PUSH2 0x870 ADD MSTORE DUP2 DUP2 PUSH2 0x12FA ADD MSTORE PUSH2 0x183C ADD MSTORE PUSH2 0x2EBE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AE39CAC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB5962917 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB5962917 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xD06FCBA8 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xD086C254 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xE449F341 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xF25F4B56 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39B JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x90D49B9D EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x2D7 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x4641257D GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x567E98F9 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x5E42B455 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x792B55B6 EQ PUSH2 0x233 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0xFBF0A93 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x19FCA9F6 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x1E2720FF EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x43DB3C5F EQ PUSH2 0x1C5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x99B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0xAFA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F5 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH2 0xF87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0xFF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH2 0x107A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x2329 JUMP JUMPDEST PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x11C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DF PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x26DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x136B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x385 PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x195E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP GT PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4 SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x6AE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x471 JUMPI PUSH2 0x470 PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x2228 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x569 JUMPI PUSH2 0x568 PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EC SWAP1 PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x28FF JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x69A JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x625 JUMPI PUSH2 0x624 PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x63F JUMPI PUSH2 0x63E PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x692 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x607 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x6A6 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x400 JUMP JUMPDEST POP PUSH2 0x6B7 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 PUSH2 0x74F DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x741 PUSH5 0xE8D4A51000 PUSH2 0x733 PUSH1 0x2 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x768 DUP2 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SWAP1 POP PUSH2 0x78F DUP2 PUSH1 0x6 SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x7AC DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x7E4 PUSH5 0xE8D4A51000 PUSH2 0x7D6 PUSH1 0x2 SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x929 JUMPI CALLER PUSH1 0x8 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x81B JUMPI PUSH2 0x81A PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x8BF JUMPI PUSH2 0x8BE PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x912 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x921 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7F8 JUMP JUMPDEST POP PUSH32 0x134B166C6094CC1CCBF1E3353CE5C3CD9FD29869051BDB999895854D77CC5EF6 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x95D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x9C7 PUSH2 0x1BE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E5 PUSH2 0x1181 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA32 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA88 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BEA SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F7FD5C9E17300A4800FD572EA53FC291E2EE7470D73346D16B357FAEE4E7210 DUP3 PUSH1 0x40 MLOAD PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xAEB DUP2 PUSH1 0x7 SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB05 CALLER PUSH2 0x1C73 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xB74 PUSH1 0x64 PUSH2 0xB66 PUSH1 0x5 SLOAD DUP7 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH2 0xB84 SWAP2 SWAP1 PUSH2 0x29E0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE0 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC30 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST LT ISZERO PUSH2 0xCE2 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xD2D CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DA6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD87 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST LT ISZERO PUSH2 0xE89 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE36 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE86 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xEF6 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DA6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEFE PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF38 PUSH5 0xE8D4A51000 PUSH2 0xF2A PUSH1 0x2 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954 CALLER DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF73 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x268D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xF9D JUMPI POP PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 PUSH2 0xFB0 PUSH1 0x1 SLOAD NUMBER PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFC9 PUSH1 0x3 SLOAD DUP4 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xFE0 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xFFA PUSH2 0x1BE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1018 PUSH2 0x1181 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1065 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1078 PUSH1 0x0 PUSH2 0x1E2C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1082 PUSH2 0x1BE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10A0 PUSH2 0x1181 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x28 DUP2 GT ISZERO PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1131 SWAP1 PUSH2 0x27FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0xF419800A2D8930C61D5D9CD782AA72C512CF6BE2F79DA6DB0B8855870B7269ED DUP2 PUSH1 0x40 MLOAD PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BF DUP4 DUP4 PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11CF PUSH2 0x1BE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11ED PUSH2 0x1181 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123A SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D21E5A2B633291BD1FF5F9C654E402D063783C95759D2EA521B31FB30E4DA41 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1328 DUP4 PUSH2 0x1C73 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1354 PUSH1 0x64 PUSH2 0x1346 PUSH1 0x5 SLOAD DUP6 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x1362 SWAP2 SWAP1 PUSH2 0x29E0 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP GT PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A8 SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1538 JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x13D4 JUMPI PUSH2 0x13D3 PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1475 SWAP1 PUSH2 0x283C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x148D SWAP2 SWAP1 PUSH2 0x28FF JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1523 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x14AE JUMPI PUSH2 0x14AD PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x14C8 JUMPI PUSH2 0x14C7 PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD EQ ISZERO PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1507 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x151B SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1490 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1530 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13B4 JUMP JUMPDEST POP PUSH2 0x1541 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x15CC DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x15BE PUSH5 0xE8D4A51000 PUSH2 0x15B0 PUSH1 0x2 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1654 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1678 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST LT ISZERO PUSH2 0x172A JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D7 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1703 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1727 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1741 DUP2 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH2 0x1766 DUP2 PUSH1 0x6 SLOAD PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x1783 DUP2 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x17BB PUSH5 0xE8D4A51000 PUSH2 0x17AD PUSH1 0x2 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18F5 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x17E7 JUMPI PUSH2 0x17E6 PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP10 DUP10 DUP7 DUP2 DUP2 LT PUSH2 0x188B JUMPI PUSH2 0x188A PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x18ED SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17C6 JUMP JUMPDEST POP PUSH32 0x80CC10BF7E52583AE0A17D8DD6AB5005573B17A08091A091AF1A81205A675C91 CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1929 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1966 PUSH2 0x1BE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1984 PUSH2 0x1181 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D1 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A41 SWAP1 PUSH2 0x275C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A53 DUP2 PUSH2 0x1E2C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD NUMBER GT PUSH2 0x1A64 JUMPI PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x1A7B JUMPI NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A89 PUSH1 0x1 SLOAD NUMBER PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AA2 PUSH1 0x3 SLOAD DUP4 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x1ABD JUMPI NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1B88 JUMP JUMPDEST DUP1 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0x1B1C JUMPI PUSH2 0x1B09 PUSH2 0x1AF8 PUSH1 0x6 SLOAD PUSH2 0x1AEA PUSH5 0xE8D4A51000 PUSH1 0x7 SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x1B31 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x1B77 PUSH2 0x1B66 PUSH1 0x6 SLOAD PUSH2 0x1B58 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B98 SWAP2 SWAP1 PUSH2 0x2986 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1BAE SWAP2 SWAP1 PUSH2 0x2955 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1BC4 SWAP2 SWAP1 PUSH2 0x29E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1BDA SWAP2 SWAP1 PUSH2 0x28FF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C6D DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EF0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x1 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x1CD2 JUMPI POP PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1D43 JUMPI PUSH1 0x0 PUSH2 0x1CE5 PUSH1 0x1 SLOAD NUMBER PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CFE PUSH1 0x3 SLOAD DUP4 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1D3E PUSH2 0x1D2F PUSH1 0x6 SLOAD PUSH2 0x1D21 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH2 0x1D9D DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x1D8F DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1D81 PUSH5 0xE8D4A51000 PUSH2 0x1D73 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E27 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1DC5 SWAP3 SWAP2 SWAP1 PUSH2 0x2664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EF0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F52 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FB7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1FB2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1F72 SWAP2 SWAP1 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x1FB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA8 SWAP1 PUSH2 0x273C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1FC6 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1FCF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1FDA DUP6 PUSH2 0x20F1 JUMP JUMPDEST PUSH2 0x2019 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2010 SWAP1 PUSH2 0x281C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2042 SWAP2 SWAP1 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x207F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x2099 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x20AC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E0 SWAP2 SWAP1 PUSH2 0x26FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x2133 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x214B DUP2 PUSH2 0x2E43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2160 DUP2 PUSH2 0x2E43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x217C JUMPI PUSH2 0x217B PUSH2 0x2BC1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2199 JUMPI PUSH2 0x2198 PUSH2 0x2BBC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x21B5 JUMPI PUSH2 0x21B4 PUSH2 0x2BC6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21CB DUP2 PUSH2 0x2E5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21E0 DUP2 PUSH2 0x2E71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21F5 DUP2 PUSH2 0x2E71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2211 JUMPI PUSH2 0x2210 PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x221F DUP5 DUP3 DUP6 ADD PUSH2 0x213C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x223E JUMPI PUSH2 0x223D PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x224C DUP5 DUP3 DUP6 ADD PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x226C JUMPI PUSH2 0x226B PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x228A JUMPI PUSH2 0x2289 PUSH2 0x2BCB JUMP JUMPDEST JUMPDEST PUSH2 0x2296 DUP6 DUP3 DUP7 ADD PUSH2 0x2166 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B8 JUMPI PUSH2 0x22B7 PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22C6 DUP5 DUP3 DUP6 ADD PUSH2 0x21BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22E5 JUMPI PUSH2 0x22E4 PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F3 DUP5 DUP3 DUP6 ADD PUSH2 0x21D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2312 JUMPI PUSH2 0x2311 PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2320 DUP5 DUP3 DUP6 ADD PUSH2 0x21E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2340 JUMPI PUSH2 0x233F PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x234E DUP6 DUP3 DUP7 ADD PUSH2 0x21D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x235F DUP6 DUP3 DUP7 ADD PUSH2 0x21D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2372 DUP2 PUSH2 0x2A14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2384 DUP4 DUP6 PUSH2 0x28D2 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x23B7 JUMPI PUSH2 0x23B6 PUSH2 0x2BD0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x23C8 DUP4 DUP6 DUP5 PUSH2 0x2AA4 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DF DUP3 PUSH2 0x28BC JUMP JUMPDEST PUSH2 0x23E9 DUP2 DUP6 PUSH2 0x28E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x23F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2AB3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x240E DUP2 PUSH2 0x2A5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x241D DUP2 PUSH2 0x2A6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242E DUP3 PUSH2 0x28C7 JUMP JUMPDEST PUSH2 0x2438 DUP2 DUP6 PUSH2 0x28EE JUMP JUMPDEST SWAP4 POP PUSH2 0x2448 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2AB3 JUMP JUMPDEST PUSH2 0x2451 DUP2 PUSH2 0x2BDA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2469 PUSH1 0x18 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2474 DUP3 PUSH2 0x2BEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248C PUSH1 0x2A DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2497 DUP3 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24AF PUSH1 0x26 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x24BA DUP3 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D2 PUSH1 0x31 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x24DD DUP3 PUSH2 0x2CB2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F5 PUSH1 0x20 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2500 DUP3 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2518 PUSH1 0x22 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2523 DUP3 PUSH2 0x2D2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x253B PUSH1 0x20 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2546 DUP3 PUSH2 0x2D79 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x255E PUSH1 0x1E DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2569 DUP3 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2581 PUSH1 0x1D DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x258C DUP3 PUSH2 0x2DCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A4 PUSH1 0x39 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x25AF DUP3 PUSH2 0x2DF4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C3 DUP2 PUSH2 0x2A52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D5 DUP3 DUP5 PUSH2 0x23D4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2610 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x261D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x262A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25BA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2647 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2369 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x265A DUP2 DUP5 DUP7 PUSH2 0x2378 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2679 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x2686 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x25BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26A2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x26AF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x26BC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25BA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26D9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2414 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2714 DUP2 DUP5 PUSH2 0x2423 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2735 DUP2 PUSH2 0x245C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2755 DUP2 PUSH2 0x247F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2775 DUP2 PUSH2 0x24A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2795 DUP2 PUSH2 0x24C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27B5 DUP2 PUSH2 0x24E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27D5 DUP2 PUSH2 0x250B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27F5 DUP2 PUSH2 0x252E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2815 DUP2 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2835 DUP2 PUSH2 0x2574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2855 DUP2 PUSH2 0x2597 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2871 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x288C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x2899 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x28A6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x28B3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x25BA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290A DUP3 PUSH2 0x2A52 JUMP JUMPDEST SWAP2 POP PUSH2 0x2915 DUP4 PUSH2 0x2A52 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x294A JUMPI PUSH2 0x2949 PUSH2 0x2B2F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2960 DUP3 PUSH2 0x2A52 JUMP JUMPDEST SWAP2 POP PUSH2 0x296B DUP4 PUSH2 0x2A52 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x297B JUMPI PUSH2 0x297A PUSH2 0x2B5E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2991 DUP3 PUSH2 0x2A52 JUMP JUMPDEST SWAP2 POP PUSH2 0x299C DUP4 PUSH2 0x2A52 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x29D5 JUMPI PUSH2 0x29D4 PUSH2 0x2B2F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29EB DUP3 PUSH2 0x2A52 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F6 DUP4 PUSH2 0x2A52 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2A09 JUMPI PUSH2 0x2A08 PUSH2 0x2B2F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1F DUP3 PUSH2 0x2A32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A67 DUP3 PUSH2 0x2A80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A79 DUP3 PUSH2 0x2A80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8B DUP3 PUSH2 0x2A92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9D DUP3 PUSH2 0x2A32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2AB6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2AE0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF1 DUP3 PUSH2 0x2A52 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2B24 JUMPI PUSH2 0x2B23 PUSH2 0x2B2F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A20456D7074792041727261790000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A206475706C696361746520746F6B656E20696473 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20696E20696E70757420706172616D732E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A206E6F74206F776E6572206F6620746F6B656E2E PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A20746F6B656E20616C7265616479207374616B65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x642E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x736574486172766573744665653A2066656550657263656E74203E2034300000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E667420556E7374616B696E673A20746F6B656E206E6F74207374616B656420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F7220696E636F727265637420746F6B656E206F776E65722E00000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2E4C DUP2 PUSH2 0x2A14 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E63 DUP2 PUSH2 0x2A26 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E7A DUP2 PUSH2 0x2A52 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN SHL INVALID 0x4A PUSH20 0x2571B6D5227E5D62F94896647DD37654D1DAA484 0x5E 0xE 0x4A GT SAR CHAINID PUSH1 0x64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "27968:7959:0:-:0;;;29153:286;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4790:32;4809:12;:10;;;:12;;:::i;:::-;4790:18;;;:32;;:::i;:::-;29313:9;29302:20;;;;;;;;;;;;29345:10;29333:22;;;;;;;;;;;;29383:15;29366:14;:32;;;;29421:10;29409:9;;:22;;;;;;;;;;;;;;;;;;29153:286;;;;27968:7959;;3751:98;3804:7;3831:10;3824:17;;3751:98;:::o;6181:191::-;6255:16;6274:6;;;;;;;;;;;6255:25;;6300:8;6291:6;;:17;;;;;;;;;;;;;;;;;;6355:8;6324:40;;6345:8;6324:40;;;;;;;;;;;;6244:128;6181:191;:::o;7:143:1:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:171::-;227:5;258:6;252:13;243:22;;274:47;315:5;274:47;:::i;:::-;156:171;;;;:::o;333:175::-;406:5;437:6;431:13;422:22;;453:49;496:5;453:49;:::i;:::-;333:175;;;;:::o;514:143::-;571:5;602:6;596:13;587:22;;618:33;645:5;618:33;:::i;:::-;514:143;;;;:::o;663:880::-;790:6;798;806;814;863:3;851:9;842:7;838:23;834:33;831:120;;;870:79;;:::i;:::-;831:120;990:1;1015:80;1087:7;1078:6;1067:9;1063:22;1015:80;:::i;:::-;1005:90;;961:144;1144:2;1170:78;1240:7;1231:6;1220:9;1216:22;1170:78;:::i;:::-;1160:88;;1115:143;1297:2;1323:64;1379:7;1370:6;1359:9;1355:22;1323:64;:::i;:::-;1313:74;;1268:129;1436:2;1462:64;1518:7;1509:6;1498:9;1494:22;1462:64;:::i;:::-;1452:74;;1407:129;663:880;;;;;;;:::o;1630:96::-;1667:7;1696:24;1714:5;1696:24;:::i;:::-;1685:35;;1630:96;;;:::o;1732:110::-;1783:7;1812:24;1830:5;1812:24;:::i;:::-;1801:35;;1732:110;;;:::o;1848:112::-;1901:7;1930:24;1948:5;1930:24;:::i;:::-;1919:35;;1848:112;;;:::o;1966:126::-;2003:7;2043:42;2036:5;2032:54;2021:65;;1966:126;;;:::o;2098:77::-;2135:7;2164:5;2153:16;;2098:77;;;:::o;2304:117::-;2413:1;2410;2403:12;2427:122;2500:24;2518:5;2500:24;:::i;:::-;2493:5;2490:35;2480:63;;2539:1;2536;2529:12;2480:63;2427:122;:::o;2555:150::-;2642:38;2674:5;2642:38;:::i;:::-;2635:5;2632:49;2622:77;;2695:1;2692;2685:12;2622:77;2555:150;:::o;2711:154::-;2800:40;2834:5;2800:40;:::i;:::-;2793:5;2790:51;2780:79;;2855:1;2852;2845:12;2780:79;2711:154;:::o;2871:122::-;2944:24;2962:5;2944:24;:::i;:::-;2937:5;2934:35;2924:63;;2983:1;2980;2973:12;2924:63;2871:122;:::o;27968:7959:0:-;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_748": {
									"entryPoint": 7920,
									"id": 748,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_functionCallWithValue_950": {
									"entryPoint": 8143,
									"id": 950,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_getPending_1934": {
									"entryPoint": 7283,
									"id": 1934,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_111": {
									"entryPoint": 7138,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_223": {
									"entryPoint": 7724,
									"id": 223,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@accGHSPPerShare_1105": {
									"entryPoint": 2804,
									"id": 1105,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_399": {
									"entryPoint": 7116,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@depositReward_1324": {
									"entryPoint": 2495,
									"id": 1324,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_444": {
									"entryPoint": 7072,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@feeWallet_1109": {
									"entryPoint": 6456,
									"id": 1109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCall_847": {
									"entryPoint": 8119,
									"id": 847,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1252": {
									"entryPoint": 4522,
									"id": 1252,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPending_1860": {
									"entryPoint": 4892,
									"id": 1860,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRewardBalance_1291": {
									"entryPoint": 3975,
									"id": 1291,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ghspToken_1101": {
									"entryPoint": 2459,
									"id": 1101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@harvestFee_1111": {
									"entryPoint": 4850,
									"id": 1111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@harvest_2055": {
									"entryPoint": 2810,
									"id": 2055,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_776": {
									"entryPoint": 8433,
									"id": 776,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastRewardBlock_1103": {
									"entryPoint": 4844,
									"id": 1103,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_429": {
									"entryPoint": 7050,
									"id": 429,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nftToken_1098": {
									"entryPoint": 4856,
									"id": 1098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_152": {
									"entryPoint": 4481,
									"id": 152,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_180": {
									"entryPoint": 4082,
									"id": 180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerBlock_1107": {
									"entryPoint": 4475,
									"id": 1107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_591": {
									"entryPoint": 7146,
									"id": 591,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_565": {
									"entryPoint": 7590,
									"id": 565,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setFeeWallet_1214": {
									"entryPoint": 4551,
									"id": 1214,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setHarvestFee_1237": {
									"entryPoint": 4218,
									"id": 1237,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1627": {
									"entryPoint": 951,
									"id": 1627,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_414": {
									"entryPoint": 7094,
									"id": 414,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalStakedAmount_1113": {
									"entryPoint": 3969,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_203": {
									"entryPoint": 6494,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_1832": {
									"entryPoint": 4971,
									"id": 1832,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateStatus_1420": {
									"entryPoint": 6742,
									"id": 1420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userInfo_1124": {
									"entryPoint": 2411,
									"id": 1124,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 8529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 8550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 8789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9080,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack": {
									"entryPoint": 9221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$1076_to_t_address_fromStack": {
									"entryPoint": 9236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9723,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_calldata_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9778,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9828,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9869,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$100__to_t_address__fromStack_reversed": {
									"entryPoint": 9924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$1076__to_t_address__fromStack_reversed": {
									"entryPoint": 9951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10359,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$100_to_t_address": {
									"entryPoint": 10844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$1076_to_t_address": {
									"entryPoint": 10862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 10916,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 10931,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 10982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11055,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11102,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 11196,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 11201,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 11206,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 11211,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec": {
									"entryPoint": 11216,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 11221,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 11226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5": {
									"entryPoint": 11243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 11284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 11363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55": {
									"entryPoint": 11442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06": {
									"entryPoint": 11521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286": {
									"entryPoint": 11562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 11641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e": {
									"entryPoint": 11682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 11723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b": {
									"entryPoint": 11764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 11843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 11866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 11889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:25275:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "225:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "240:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "234:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "283:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "256:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "256:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "193:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "201:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "209:5:1",
														"type": ""
													}
												],
												"src": "152:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "408:478:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "457:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "459:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "459:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "459:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "436:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "444:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "451:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "428:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "421:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "421:35:1"
															},
															"nodeType": "YulIf",
															"src": "418:122:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "549:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "572:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "559:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "559:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "549:6:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "622:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "624:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "624:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "624:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "594:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "591:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:30:1"
															},
															"nodeType": "YulIf",
															"src": "588:117:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "714:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "730:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "738:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:17:1"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "714:8:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "797:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "799:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "799:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "799:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "762:8:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "776:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "784:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "772:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "772:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "758:32:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "792:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "755:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:41:1"
															},
															"nodeType": "YulIf",
															"src": "752:128:1"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "375:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "383:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "391:8:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "401:6:1",
														"type": ""
													}
												],
												"src": "318:568:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "952:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "962:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "977:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "971:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "971:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "962:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1017:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "993:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "993:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "930:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "938:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "946:5:1",
														"type": ""
													}
												],
												"src": "892:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1087:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1097:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1119:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1106:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1097:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1162:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1135:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1135:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1135:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1065:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1073:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1081:5:1",
														"type": ""
													}
												],
												"src": "1035:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1253:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1268:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1262:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1253:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1311:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1284:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1284:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1284:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1221:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1229:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1237:5:1",
														"type": ""
													}
												],
												"src": "1180:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1395:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1441:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1443:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1443:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1443:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1416:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1412:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1412:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1408:32:1"
															},
															"nodeType": "YulIf",
															"src": "1405:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1534:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1549:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1553:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1578:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1613:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1624:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1609:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1609:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1633:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1588:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1588:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1578:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1365:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1376:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1388:6:1",
														"type": ""
													}
												],
												"src": "1329:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1741:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1787:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1789:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1789:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1789:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1762:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1771:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1758:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1783:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:32:1"
															},
															"nodeType": "YulIf",
															"src": "1751:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1880:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1895:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1909:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1899:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1924:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1970:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1981:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1966:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1966:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1990:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1934:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1924:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1711:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1722:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1734:6:1",
														"type": ""
													}
												],
												"src": "1664:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2122:458:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2168:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2170:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2170:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2170:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2143:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2139:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2135:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:1"
															},
															"nodeType": "YulIf",
															"src": "2132:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2261:312:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2276:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2307:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2318:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2303:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2303:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2290:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2290:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2280:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2368:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2370:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2370:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2370:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2337:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2334:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2465:98:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2535:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2546:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2531:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2531:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2555:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2483:47:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2483:80:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2465:6:1"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2473:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2084:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2095:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2107:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2115:6:1",
														"type": ""
													}
												],
												"src": "2021:559:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2660:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2706:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2708:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2708:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2708:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2681:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2690:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2677:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2673:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2673:32:1"
															},
															"nodeType": "YulIf",
															"src": "2670:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2799:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2814:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2818:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2843:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2886:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2897:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2882:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2882:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2906:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2853:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2853:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2843:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2630:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2641:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2653:6:1",
														"type": ""
													}
												],
												"src": "2586:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3003:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3049:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3051:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3051:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3051:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3024:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3033:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3020:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3020:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3045:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:32:1"
															},
															"nodeType": "YulIf",
															"src": "3013:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3142:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3157:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3171:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3161:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3186:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3221:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3232:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3217:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3217:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3241:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3196:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3186:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2973:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2984:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2996:6:1",
														"type": ""
													}
												],
												"src": "2937:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3349:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3395:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3397:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3397:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3397:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3370:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3379:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3366:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3391:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3362:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3362:32:1"
															},
															"nodeType": "YulIf",
															"src": "3359:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3488:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3503:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3517:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3507:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3532:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3578:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3589:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3574:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3574:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3598:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3542:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3542:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3532:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3319:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3330:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3342:6:1",
														"type": ""
													}
												],
												"src": "3272:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3712:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3758:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3760:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3760:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3760:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3733:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3742:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3729:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3729:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3754:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3725:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3725:32:1"
															},
															"nodeType": "YulIf",
															"src": "3722:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3851:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3866:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3880:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3870:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3895:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3930:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3941:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3926:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3926:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3950:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3905:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3905:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3895:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3978:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3993:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4007:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3997:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4023:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4058:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4069:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4054:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4054:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4078:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4033:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4033:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4023:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3674:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3685:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3697:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3705:6:1",
														"type": ""
													}
												],
												"src": "3629:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4174:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4191:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4214:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4196:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4184:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4162:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4169:3:1",
														"type": ""
													}
												],
												"src": "4109:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4395:405:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4405:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4491:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4412:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4412:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4405:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4590:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
																				"nodeType": "YulIdentifier",
																				"src": "4592:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4592:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4592:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4514:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4522:66:1",
																		"type": "",
																		"value": "0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4511:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:78:1"
															},
															"nodeType": "YulIf",
															"src": "4508:165:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4682:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4696:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4704:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4692:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4692:17:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "4743:5:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4750:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4755:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4719:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4719:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4719:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4771:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4782:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4787:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4778:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4778:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4771:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "4368:5:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4375:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4383:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4391:3:1",
														"type": ""
													}
												],
												"src": "4263:537:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4914:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4924:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4970:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4938:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4928:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4985:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5068:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5073:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4992:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4985:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5115:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5122:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5111:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5111:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5129:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5134:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5089:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5089:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5089:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5150:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5161:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5166:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5157:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5157:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5150:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4895:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4902:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4910:3:1",
														"type": ""
													}
												],
												"src": "4806:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5264:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5281:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5331:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$100_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5286:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5286:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5274:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5274:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5274:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5252:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5259:3:1",
														"type": ""
													}
												],
												"src": "5185:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5431:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5448:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5500:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$1076_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5453:46:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5453:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5441:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5441:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5441:66:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$1076_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5419:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5426:3:1",
														"type": ""
													}
												],
												"src": "5350:163:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5611:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5621:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5668:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5635:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5635:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5625:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5683:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5749:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5754:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5690:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5683:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5796:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5803:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5792:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5792:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5810:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5815:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5770:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5770:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5770:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5831:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5842:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5869:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5847:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5847:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5838:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5831:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5592:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5599:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5607:3:1",
														"type": ""
													}
												],
												"src": "5519:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6035:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6045:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6111:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6116:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6052:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6052:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6045:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6217:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5",
																	"nodeType": "YulIdentifier",
																	"src": "6128:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6128:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6128:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6230:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6241:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6246:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6230:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6023:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6031:3:1",
														"type": ""
													}
												],
												"src": "5889:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6407:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6417:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6483:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6488:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6424:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6424:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6417:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6589:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "6500:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6500:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6500:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6602:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6613:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6618:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6609:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6609:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6602:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6395:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6403:3:1",
														"type": ""
													}
												],
												"src": "6261:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6779:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6855:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6860:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6796:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6796:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6961:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "6872:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6872:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6974:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6985:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6990:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6981:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6974:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6767:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6775:3:1",
														"type": ""
													}
												],
												"src": "6633:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7151:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7161:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7227:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7232:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7168:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7168:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7161:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7333:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55",
																	"nodeType": "YulIdentifier",
																	"src": "7244:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7244:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7244:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7346:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7357:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7362:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7353:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7346:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7139:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7147:3:1",
														"type": ""
													}
												],
												"src": "7005:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7523:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7533:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7599:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7540:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7540:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7533:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7705:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06",
																	"nodeType": "YulIdentifier",
																	"src": "7616:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7616:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7718:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7729:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7734:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7725:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7725:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7718:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7511:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7519:3:1",
														"type": ""
													}
												],
												"src": "7377:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7895:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7905:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7971:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7976:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7912:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7912:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7905:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8077:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286",
																	"nodeType": "YulIdentifier",
																	"src": "7988:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7988:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7988:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8090:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8101:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8106:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8097:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8097:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8090:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7883:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7891:3:1",
														"type": ""
													}
												],
												"src": "7749:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8267:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8277:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8343:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8348:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8284:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8284:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8277:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8449:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "8360:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8360:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8360:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8462:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8473:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8478:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8469:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8469:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8462:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8255:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8263:3:1",
														"type": ""
													}
												],
												"src": "8121:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8639:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8649:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8715:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8720:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8656:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8656:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8649:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8821:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e",
																	"nodeType": "YulIdentifier",
																	"src": "8732:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8732:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8732:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8834:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8845:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8850:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8841:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8841:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8834:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8627:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8635:3:1",
														"type": ""
													}
												],
												"src": "8493:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9011:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9021:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9087:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9092:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9028:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9028:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9021:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9193:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "9104:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9104:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9104:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9206:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9217:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9222:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9213:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9213:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9206:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8999:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9007:3:1",
														"type": ""
													}
												],
												"src": "8865:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9383:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9393:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9459:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:1",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9400:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9400:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9393:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9565:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b",
																	"nodeType": "YulIdentifier",
																	"src": "9476:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9476:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9476:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9578:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9589:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9594:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9585:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9585:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9578:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9371:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9379:3:1",
														"type": ""
													}
												],
												"src": "9237:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9674:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9691:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9714:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9696:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9696:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9684:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9684:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9684:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9662:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9669:3:1",
														"type": ""
													}
												],
												"src": "9609:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9867:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9878:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9965:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9974:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9885:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9885:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9878:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9988:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9995:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9988:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9846:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9852:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9863:3:1",
														"type": ""
													}
												],
												"src": "9733:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10108:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10118:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10130:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10141:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10126:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10126:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10118:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10198:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10211:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10222:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10207:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10207:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10154:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10154:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10154:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10080:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10092:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10103:4:1",
														"type": ""
													}
												],
												"src": "10010:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10392:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10402:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10414:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10425:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10410:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10410:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10402:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10482:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10495:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10506:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10491:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10438:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10438:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10438:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10563:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10576:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10587:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10572:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10519:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10519:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10519:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10645:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10658:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10669:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10654:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10601:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10601:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10601:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10348:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10360:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10368:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10376:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10387:4:1",
														"type": ""
													}
												],
												"src": "10238:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10872:317:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10882:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10894:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10890:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10882:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10962:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10975:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10986:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10971:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10971:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10918:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10918:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10918:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11010:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11021:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11006:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11006:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11030:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11036:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11026:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11026:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10999:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10999:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10999:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11056:126:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11160:6:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11168:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11177:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11064:95:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11064:118:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11056:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_calldata_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10828:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10840:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10848:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10856:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10867:4:1",
														"type": ""
													}
												],
												"src": "10686:503:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11321:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11331:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11343:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11354:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11339:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11339:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11331:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11411:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11424:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11435:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11420:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11420:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11367:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11367:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11367:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11492:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11505:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11516:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11501:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11448:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11448:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11448:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11285:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11297:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11305:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11316:4:1",
														"type": ""
													}
												],
												"src": "11195:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11687:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11697:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11709:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11720:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11705:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11705:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11697:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11777:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11790:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11801:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11786:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11786:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11733:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11733:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11733:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11858:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11871:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11882:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11867:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11867:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11814:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11814:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11814:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11940:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11953:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11964:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11949:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11949:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11896:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11896:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11896:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11643:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11655:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11663:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11671:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11682:4:1",
														"type": ""
													}
												],
												"src": "11533:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12093:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12103:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12115:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12111:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12111:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12103:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12197:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12221:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12206:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12139:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12139:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12139:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$100__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12065:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12077:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12088:4:1",
														"type": ""
													}
												],
												"src": "11981:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12351:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12361:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12373:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12369:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12369:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12361:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12457:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12470:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12481:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12466:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$1076_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12397:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12397:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12397:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$1076__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12323:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12335:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12346:4:1",
														"type": ""
													}
												],
												"src": "12237:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12615:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12625:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12637:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12648:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12633:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12625:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12672:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12683:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12668:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12691:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12697:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12687:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12687:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12661:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12661:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12717:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12789:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12798:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12725:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12725:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12717:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12587:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12599:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12610:4:1",
														"type": ""
													}
												],
												"src": "12497:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12987:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12997:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13009:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13020:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13005:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13005:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12997:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13044:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13055:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13040:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13063:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13069:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13059:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13033:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13033:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13089:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13223:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13097:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13097:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13089:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12967:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12982:4:1",
														"type": ""
													}
												],
												"src": "12816:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13412:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13422:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13434:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13445:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13430:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13430:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13422:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13469:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13480:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13465:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13465:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13488:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13494:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13484:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13458:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13458:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13458:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13514:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13648:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13522:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13522:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13514:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13392:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13407:4:1",
														"type": ""
													}
												],
												"src": "13241:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13837:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13847:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13859:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13870:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13855:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13855:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13847:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13894:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13905:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13890:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13890:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13913:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13919:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13909:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13883:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13883:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13883:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13939:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14073:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13947:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13947:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13939:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13817:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13832:4:1",
														"type": ""
													}
												],
												"src": "13666:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14262:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14272:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14284:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14295:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14280:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14280:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14272:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14319:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14330:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14315:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14315:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14338:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14344:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14334:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14308:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14308:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14308:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14364:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14498:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14372:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14372:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14242:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14257:4:1",
														"type": ""
													}
												],
												"src": "14091:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14687:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14697:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14709:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14720:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14705:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14705:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14697:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14744:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14755:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14740:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14740:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14763:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14769:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14759:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14733:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14733:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14789:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14923:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14797:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14797:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14789:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14667:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14682:4:1",
														"type": ""
													}
												],
												"src": "14516:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15112:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15122:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15134:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15145:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15130:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15130:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15122:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15169:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15180:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15165:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15165:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15188:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15194:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15184:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15184:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15158:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15158:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15158:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15214:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15348:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15222:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15222:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15214:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15092:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15107:4:1",
														"type": ""
													}
												],
												"src": "14941:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15537:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15547:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15559:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15570:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15555:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15555:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15547:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15594:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15605:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15590:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15590:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15613:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15619:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15609:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15609:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15583:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15583:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15583:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15639:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15773:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15647:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15647:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15639:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15517:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15532:4:1",
														"type": ""
													}
												],
												"src": "15366:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15962:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15972:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15984:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15995:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15980:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15980:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15972:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16019:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16030:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16015:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16015:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16038:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16044:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16034:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16008:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16008:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16064:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16198:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16072:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16072:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16064:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15942:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15957:4:1",
														"type": ""
													}
												],
												"src": "15791:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16387:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16397:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16409:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16420:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16405:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16405:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16397:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16455:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16440:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16463:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16469:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16459:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16433:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16433:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16489:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16623:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16497:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16497:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16489:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16367:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16382:4:1",
														"type": ""
													}
												],
												"src": "16216:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16812:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16822:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16834:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16845:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16830:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16830:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16822:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16869:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16880:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16865:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16865:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16888:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16894:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16884:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16884:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16858:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16858:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16858:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16914:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17048:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16922:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16922:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16914:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16792:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16807:4:1",
														"type": ""
													}
												],
												"src": "16641:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17164:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17174:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17186:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17197:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17182:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17182:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17174:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17254:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17267:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17278:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17263:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17263:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17210:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17210:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17210:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17136:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17148:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17159:4:1",
														"type": ""
													}
												],
												"src": "17066:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17476:371:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17486:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17498:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17509:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17494:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17494:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17486:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17567:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17580:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17591:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17576:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17576:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17523:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17523:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17523:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17648:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17661:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17672:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17657:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17657:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17604:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17604:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17604:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17730:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17743:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17754:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17739:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17739:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17686:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17686:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17686:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "17812:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17836:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17821:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17768:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17768:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17768:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17424:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "17436:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17444:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17452:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17460:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17471:4:1",
														"type": ""
													}
												],
												"src": "17294:553:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17893:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17903:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17919:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17913:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17913:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "17903:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17886:6:1",
														"type": ""
													}
												],
												"src": "17853:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17992:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18003:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18019:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18013:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18013:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18003:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17975:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17985:6:1",
														"type": ""
													}
												],
												"src": "17934:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18097:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18108:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18124:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18118:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18118:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18108:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18080:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18090:6:1",
														"type": ""
													}
												],
												"src": "18038:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18254:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18271:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18276:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18264:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18264:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18292:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18311:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18316:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18307:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18307:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18292:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18226:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18242:11:1",
														"type": ""
													}
												],
												"src": "18143:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18446:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18456:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18471:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18456:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18418:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18423:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18434:11:1",
														"type": ""
													}
												],
												"src": "18333:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18582:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18599:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18604:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18592:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18592:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18592:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18620:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18639:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18644:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18635:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18635:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18620:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18554:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18559:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18570:11:1",
														"type": ""
													}
												],
												"src": "18486:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18705:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18715:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18738:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18720:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18720:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18715:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18749:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18772:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18754:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18754:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18749:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18912:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18914:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18914:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18914:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18833:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18840:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18908:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18836:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18836:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18830:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18830:81:1"
															},
															"nodeType": "YulIf",
															"src": "18827:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18944:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18955:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18958:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18951:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18951:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "18944:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18692:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18695:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "18701:3:1",
														"type": ""
													}
												],
												"src": "18661:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19014:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19024:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19047:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19029:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19029:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19024:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19058:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19081:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19063:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19063:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19058:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19105:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19107:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19107:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19107:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19102:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19095:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19095:9:1"
															},
															"nodeType": "YulIf",
															"src": "19092:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19137:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19146:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19149:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19142:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19137:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19003:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19006:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19012:1:1",
														"type": ""
													}
												],
												"src": "18972:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19211:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19221:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19244:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19226:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19226:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19221:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19255:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19278:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19260:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19260:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19255:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19453:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19455:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19455:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19455:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19365:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "19358:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19358:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "19351:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19351:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19373:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19380:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19448:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "19376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19376:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19370:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19370:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19347:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19347:105:1"
															},
															"nodeType": "YulIf",
															"src": "19344:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19485:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19500:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19503:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19496:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19496:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "19485:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19194:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19197:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "19203:7:1",
														"type": ""
													}
												],
												"src": "19163:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19562:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19572:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19595:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19577:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19577:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19572:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19606:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19629:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19611:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19611:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19606:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19653:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19655:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19655:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19655:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19647:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19650:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19644:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19644:8:1"
															},
															"nodeType": "YulIf",
															"src": "19641:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19685:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19697:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19700:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19693:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19693:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19685:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19548:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19551:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19557:4:1",
														"type": ""
													}
												],
												"src": "19517:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19759:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19769:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19798:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19780:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19780:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19769:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19741:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19751:7:1",
														"type": ""
													}
												],
												"src": "19714:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19858:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19868:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19893:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "19886:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19886:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19879:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19879:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19868:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19840:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19850:7:1",
														"type": ""
													}
												],
												"src": "19816:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19957:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19967:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19982:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19989:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19978:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19978:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19967:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19939:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19949:7:1",
														"type": ""
													}
												],
												"src": "19912:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20089:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20099:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "20110:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20099:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20071:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20081:7:1",
														"type": ""
													}
												],
												"src": "20044:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20201:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20211:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20255:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "20224:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20224:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20211:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$100_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20181:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20191:9:1",
														"type": ""
													}
												],
												"src": "20127:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20349:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20359:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20403:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "20372:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20372:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20359:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$1076_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20329:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20339:9:1",
														"type": ""
													}
												],
												"src": "20273:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20481:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20491:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20535:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20504:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20504:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20491:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20461:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20471:9:1",
														"type": ""
													}
												],
												"src": "20421:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20613:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20623:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20654:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20636:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20636:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20623:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20593:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20603:9:1",
														"type": ""
													}
												],
												"src": "20553:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20723:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "20746:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "20751:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20756:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "20733:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20733:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20733:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "20804:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "20809:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20800:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20818:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20793:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20793:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "20705:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "20710:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20715:6:1",
														"type": ""
													}
												],
												"src": "20672:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20881:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20891:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20900:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "20895:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20960:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "20985:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "20990:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20981:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20981:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "21004:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "21009:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "21000:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "21000:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "20994:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20994:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20974:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20974:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20974:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20921:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20924:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20918:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20918:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "20932:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20934:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "20943:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20946:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "20939:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20939:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "20934:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "20914:3:1",
																"statements": []
															},
															"src": "20910:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21057:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "21107:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "21112:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21103:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21103:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21121:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21096:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21096:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21096:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21038:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21041:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21035:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21035:13:1"
															},
															"nodeType": "YulIf",
															"src": "21032:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "20863:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "20868:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20873:6:1",
														"type": ""
													}
												],
												"src": "20832:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21188:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21198:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21225:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21207:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21207:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "21198:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21321:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21323:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21323:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21323:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21246:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21253:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21243:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21243:77:1"
															},
															"nodeType": "YulIf",
															"src": "21240:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21352:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21363:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21370:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21359:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21359:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "21352:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21174:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "21184:3:1",
														"type": ""
													}
												],
												"src": "21145:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21412:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21429:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21432:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21422:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21422:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21422:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21526:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21529:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21519:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21519:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21519:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21550:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21553:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21543:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21543:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "21384:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21598:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21615:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21618:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21608:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21608:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21712:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21715:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21705:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21705:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21736:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21739:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21729:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21729:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21570:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21784:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21801:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21804:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21794:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21794:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21794:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21898:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21901:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21891:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21891:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21891:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21922:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21925:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21915:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21915:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21915:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "21756:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22031:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22048:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22051:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22041:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22041:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22041:12:1"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "21942:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22154:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22171:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22174:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22164:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22164:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22164:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "22065:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22277:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22294:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22297:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22287:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22287:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22287:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "22188:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22400:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22417:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22420:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22410:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22410:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22410:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "22311:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22523:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22540:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22543:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22533:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22533:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22533:12:1"
														}
													]
												},
												"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
												"nodeType": "YulFunctionDefinition",
												"src": "22434:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22646:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22663:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22666:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22656:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22656:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22656:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "22557:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22728:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22738:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22756:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22763:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22752:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22752:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22772:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "22768:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22768:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22748:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22748:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "22738:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22711:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "22721:6:1",
														"type": ""
													}
												],
												"src": "22680:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22894:68:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22916:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22924:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22912:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22912:14:1"
																	},
																	{
																		"hexValue": "4e4654205374616b696e673a20456d707479204172726179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22928:26:1",
																		"type": "",
																		"value": "NFT Staking: Empty Array"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22905:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22905:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22905:50:1"
														}
													]
												},
												"name": "store_literal_in_memory_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22886:6:1",
														"type": ""
													}
												],
												"src": "22788:174:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23074:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23096:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23104:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23092:14:1"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23108:34:1",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23085:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23085:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23164:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23172:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23160:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23160:15:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23177:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23153:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23153:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23153:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23066:6:1",
														"type": ""
													}
												],
												"src": "22968:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23309:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23331:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23339:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23327:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23327:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23343:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23320:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23320:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23320:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23399:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23407:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23395:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23395:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23412:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23388:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23388:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23388:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23301:6:1",
														"type": ""
													}
												],
												"src": "23203:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23540:130:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23562:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23570:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23558:14:1"
																	},
																	{
																		"hexValue": "4e4654205374616b696e673a206475706c696361746520746f6b656e20696473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23574:34:1",
																		"type": "",
																		"value": "NFT Staking: duplicate token ids"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23551:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23551:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23630:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23638:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23626:15:1"
																	},
																	{
																		"hexValue": "20696e20696e70757420706172616d732e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23643:19:1",
																		"type": "",
																		"value": " in input params."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23619:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23619:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23619:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23532:6:1",
														"type": ""
													}
												],
												"src": "23434:236:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23782:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23804:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23812:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23800:14:1"
																	},
																	{
																		"hexValue": "4e4654205374616b696e673a206e6f74206f776e6572206f6620746f6b656e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23816:34:1",
																		"type": "",
																		"value": "NFT Staking: not owner of token."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23793:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23793:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23774:6:1",
														"type": ""
													}
												],
												"src": "23676:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23970:115:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23992:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24000:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23988:14:1"
																	},
																	{
																		"hexValue": "4e4654205374616b696e673a20746f6b656e20616c7265616479207374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24004:34:1",
																		"type": "",
																		"value": "NFT Staking: token already stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23981:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23981:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24060:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24068:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24056:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24056:15:1"
																	},
																	{
																		"hexValue": "642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24073:4:1",
																		"type": "",
																		"value": "d."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24049:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24049:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24049:29:1"
														}
													]
												},
												"name": "store_literal_in_memory_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23962:6:1",
														"type": ""
													}
												],
												"src": "23864:221:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24197:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24219:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24227:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24215:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24231:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24208:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24208:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24208:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24189:6:1",
														"type": ""
													}
												],
												"src": "24091:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24385:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24407:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24415:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24403:14:1"
																	},
																	{
																		"hexValue": "736574486172766573744665653a2066656550657263656e74203e203430",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24419:32:1",
																		"type": "",
																		"value": "setHarvestFee: feePercent > 40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24396:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24396:56:1"
														}
													]
												},
												"name": "store_literal_in_memory_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24377:6:1",
														"type": ""
													}
												],
												"src": "24279:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24571:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24593:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24601:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24589:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24589:14:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24605:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24582:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24582:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24582:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24563:6:1",
														"type": ""
													}
												],
												"src": "24465:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24756:138:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24778:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24786:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24774:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24774:14:1"
																	},
																	{
																		"hexValue": "4e667420556e7374616b696e673a20746f6b656e206e6f74207374616b656420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24790:34:1",
																		"type": "",
																		"value": "Nft Unstaking: token not staked "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24767:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24767:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24767:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24846:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24854:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24842:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24842:15:1"
																	},
																	{
																		"hexValue": "6f7220696e636f727265637420746f6b656e206f776e65722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24859:27:1",
																		"type": "",
																		"value": "or incorrect token owner."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24835:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24835:52:1"
														}
													]
												},
												"name": "store_literal_in_memory_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24748:6:1",
														"type": ""
													}
												],
												"src": "24650:244:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24943:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25000:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25009:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25012:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25002:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25002:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25002:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24966:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24991:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "24973:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24973:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "24963:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24963:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24956:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24956:43:1"
															},
															"nodeType": "YulIf",
															"src": "24953:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24936:5:1",
														"type": ""
													}
												],
												"src": "24900:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25068:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25122:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25131:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25134:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25124:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25124:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25124:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25091:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "25113:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "25098:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25098:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "25088:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25088:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25081:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25081:40:1"
															},
															"nodeType": "YulIf",
															"src": "25078:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25061:5:1",
														"type": ""
													}
												],
												"src": "25028:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25193:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25250:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25259:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25262:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25252:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25252:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25252:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25216:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "25241:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "25223:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25223:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "25213:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25213:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25206:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25206:43:1"
															},
															"nodeType": "YulIf",
															"src": "25203:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25186:5:1",
														"type": ""
													}
												],
												"src": "25150:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n\n        if gt(length, 0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() }\n        length := mul(length, 0x20)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$100_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$1076_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$1076_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_calldata_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$100__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$1076__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$1076_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IBEP20_$100_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$1076_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT Staking: Empty Array\")\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT Staking: duplicate token ids\")\n\n        mstore(add(memPtr, 32), \" in input params.\")\n\n    }\n\n    function store_literal_in_memory_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT Staking: not owner of token.\")\n\n    }\n\n    function store_literal_in_memory_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT Staking: token already stake\")\n\n        mstore(add(memPtr, 32), \"d.\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e(memPtr) {\n\n        mstore(add(memPtr, 0), \"setHarvestFee: feePercent > 40\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nft Unstaking: token not staked \")\n\n        mstore(add(memPtr, 32), \"or incorrect token owner.\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1098": [
									{
										"length": 32,
										"start": 1060
									},
									{
										"length": 32,
										"start": 2160
									},
									{
										"length": 32,
										"start": 4858
									},
									{
										"length": 32,
										"start": 6204
									}
								],
								"1101": [
									{
										"length": 32,
										"start": 2461
									},
									{
										"length": 32,
										"start": 2627
									},
									{
										"length": 32,
										"start": 2953
									},
									{
										"length": 32,
										"start": 3128
									},
									{
										"length": 32,
										"start": 3305
									},
									{
										"length": 32,
										"start": 3376
									},
									{
										"length": 32,
										"start": 3551
									},
									{
										"length": 32,
										"start": 3762
									},
									{
										"length": 32,
										"start": 5585
									},
									{
										"length": 32,
										"start": 5760
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101375760003560e01c80638ae39cac116100b8578063b59629171161007c578063b5962917146102f5578063d06fcba814610313578063d086c25414610331578063e449f34114610361578063f25f4b561461037d578063f2fde38b1461039b57610137565b80638ae39cac1461024f5780638da5cb5b1461026d5780638dbb1e3a1461028b57806390d49b9d146102bb578063a9f8d181146102d757610137565b80634641257d116100ff5780634641257d146101e3578063567e98f9146101ed5780635e42b4551461020b578063715018a614610229578063792b55b61461023357610137565b80630fbf0a931461013c5780631959a0021461015857806319fca9f61461018b5780631e2720ff146101a957806343db3c5f146101c5575b600080fd5b61015660048036038101906101519190612255565b6103b7565b005b610172600480360381019061016d91906121fb565b61096b565b6040516101829493929190612877565b60405180910390f35b61019361099b565b6040516101a091906126c4565b60405180910390f35b6101c360048036038101906101be91906122cf565b6109bf565b005b6101cd610af4565b6040516101da919061285c565b60405180910390f35b6101eb610afa565b005b6101f5610f81565b604051610202919061285c565b60405180910390f35b610213610f87565b604051610220919061285c565b60405180910390f35b610231610ff2565b005b61024d600480360381019061024891906122cf565b61107a565b005b61025761117b565b604051610264919061285c565b60405180910390f35b610275611181565b60405161028291906125e0565b60405180910390f35b6102a560048036038101906102a09190612329565b6111aa565b6040516102b2919061285c565b60405180910390f35b6102d560048036038101906102d091906121fb565b6111c7565b005b6102df6112ec565b6040516102ec919061285c565b60405180910390f35b6102fd6112f2565b60405161030a919061285c565b60405180910390f35b61031b6112f8565b60405161032891906126df565b60405180910390f35b61034b600480360381019061034691906121fb565b61131c565b604051610358919061285c565b60405180910390f35b61037b60048036038101906103769190612255565b61136b565b005b610385611938565b60405161039291906125e0565b60405180910390f35b6103b560048036038101906103b091906121fb565b61195e565b005b600082829050116103fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f49061271c565b60405180910390fd5b60005b828290508110156106ae573373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e85858581811061047157610470612b8d565b5b905060200201356040518263ffffffff1660e01b8152600401610494919061285c565b60206040518083038186803b1580156104ac57600080fd5b505afa1580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e49190612228565b73ffffffffffffffffffffffffffffffffffffffff161461053a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105319061279c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166008600085858581811061056957610568612b8d565b5b90506020020135815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec906127bc565b60405180910390fd5b600060018261060491906128ff565b90505b8383905081101561069a5783838281811061062557610624612b8d565b5b9050602002013584848481811061063f5761063e612b8d565b5b905060200201351415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e9061277c565b60405180910390fd5b808061069290612ae6565b915050610607565b5080806106a690612ae6565b915050610400565b506106b7611a56565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154111561077257600061074f826001015461074164e8d4a510006107336002548760000154611b8a90919063ffffffff16565b611ba090919063ffffffff16565b611bb690919063ffffffff16565b9050610768818360020154611bcc90919063ffffffff16565b8260020181905550505b600083839050905061078f81600654611bcc90919063ffffffff16565b6006819055506107ac818360000154611bcc90919063ffffffff16565b82600001819055506107e464e8d4a510006107d66002548560000154611b8a90919063ffffffff16565b611ba090919063ffffffff16565b826001018190555042826003018190555060005b8484905081101561092957336008600087878581811061081b5761081a612b8d565b5b90506020020135815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308888868181106108bf576108be612b8d565b5b905060200201356040518463ffffffff1660e01b81526004016108e4939291906125fb565b600060405180830381600087803b1580156108fe57600080fd5b505af1158015610912573d6000803e3d6000fd5b50505050808061092190612ae6565b9150506107f8565b507f134b166c6094cc1ccbf1e3353ce5c3cd9fd29869051bdb999895854d77cc5ef633858560405161095d93929190612632565b60405180910390a150505050565b60096020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109c7611be2565b73ffffffffffffffffffffffffffffffffffffffff166109e5611181565b73ffffffffffffffffffffffffffffffffffffffff1614610a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a32906127dc565b60405180910390fd5b610a883330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611bea909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f4f7fd5c9e17300a4800fd572ea53fc291e2ee7470d73346d16b357faee4e721082604051610ace919061285c565b60405180910390a2610aeb81600754611bcc90919063ffffffff16565b60078190555050565b60025481565b6000610b0533611c73565b90506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000610b746064610b6660055486611b8a90919063ffffffff16565b611ba090919063ffffffff16565b905060008184610b8491906129e0565b9050807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610be091906125e0565b60206040518083038186803b158015610bf857600080fd5b505afa158015610c0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3091906122fc565b1015610ce2577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c8f91906125e0565b60206040518083038186803b158015610ca757600080fd5b505afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf91906122fc565b90505b610d2d33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611da69092919063ffffffff16565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d8791906125e0565b60206040518083038186803b158015610d9f57600080fd5b505afa158015610db3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd791906122fc565b1015610e89577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e3691906125e0565b60206040518083038186803b158015610e4e57600080fd5b505afa158015610e62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8691906122fc565b91505b610ef6600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611da69092919063ffffffff16565b610efe611a56565b60008360020181905550610f3864e8d4a51000610f2a6002548660000154611b8a90919063ffffffff16565b611ba090919063ffffffff16565b83600101819055507f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954338284604051610f739392919061268d565b60405180910390a150505050565b60065481565b600060015443118015610f9d5750600060065414155b15610fe9576000610fb0600154436111aa565b90506000610fc960035483611b8a90919063ffffffff16565b9050610fe081600754611bb690919063ffffffff16565b92505050610fef565b60075490505b90565b610ffa611be2565b73ffffffffffffffffffffffffffffffffffffffff16611018611181565b73ffffffffffffffffffffffffffffffffffffffff161461106e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611065906127dc565b60405180910390fd5b6110786000611e2c565b565b611082611be2565b73ffffffffffffffffffffffffffffffffffffffff166110a0611181565b73ffffffffffffffffffffffffffffffffffffffff16146110f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ed906127dc565b60405180910390fd5b602881111561113a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611131906127fc565b60405180910390fd5b806005819055507ff419800a2d8930c61d5d9cd782aa72c512cf6be2f79da6db0b8855870b7269ed81604051611170919061285c565b60405180910390a150565b60035481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006111bf8383611bb690919063ffffffff16565b905092915050565b6111cf611be2565b73ffffffffffffffffffffffffffffffffffffffff166111ed611181565b73ffffffffffffffffffffffffffffffffffffffff1614611243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123a906127dc565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3d21e5a2b633291bd1ff5f9c654e402d063783c95759d2ea521b31fb30e4da4160405160405180910390a250565b60015481565b60055481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061132883611c73565b90506000611354606461134660055485611b8a90919063ffffffff16565b611ba090919063ffffffff16565b9050808261136291906129e0565b92505050919050565b600082829050116113b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a89061271c565b60405180910390fd5b60005b828290508110156115385760008383838181106113d4576113d3612b8d565b5b9050602002013590503373ffffffffffffffffffffffffffffffffffffffff166008600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461147e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114759061283c565b60405180910390fd5b600060018361148d91906128ff565b90505b84849050811015611523578484828181106114ae576114ad612b8d565b5b905060200201358585858181106114c8576114c7612b8d565b5b905060200201351415611510576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115079061277c565b60405180910390fd5b808061151b90612ae6565b915050611490565b5050808061153090612ae6565b9150506113b4565b50611541611a56565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006115cc82600101546115be64e8d4a510006115b06002548760000154611b8a90919063ffffffff16565b611ba090919063ffffffff16565b611bb690919063ffffffff16565b9050807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161162891906125e0565b60206040518083038186803b15801561164057600080fd5b505afa158015611654573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167891906122fc565b101561172a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116d791906125e0565b60206040518083038186803b1580156116ef57600080fd5b505afa158015611703573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172791906122fc565b90505b611741818360020154611bcc90919063ffffffff16565b8260020181905550600084849050905061176681600654611bb690919063ffffffff16565b600681905550611783818460000154611bb690919063ffffffff16565b83600001819055506117bb64e8d4a510006117ad6002548660000154611b8a90919063ffffffff16565b611ba090919063ffffffff16565b836001018190555060005b818110156118f5576000600860008888858181106117e7576117e6612b8d565b5b90506020020135815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd303389898681811061188b5761188a612b8d565b5b905060200201356040518463ffffffff1660e01b81526004016118b0939291906125fb565b600060405180830381600087803b1580156118ca57600080fd5b505af11580156118de573d6000803e3d6000fd5b5050505080806118ed90612ae6565b9150506117c6565b507f80cc10bf7e52583ae0a17d8dd6ab5005573b17a08091a091af1a81205a675c9133868660405161192993929190612632565b60405180910390a15050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611966611be2565b73ffffffffffffffffffffffffffffffffffffffff16611984611181565b73ffffffffffffffffffffffffffffffffffffffff16146119da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d1906127dc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a419061275c565b60405180910390fd5b611a5381611e2c565b50565b6001544311611a6457611b88565b60006006541415611a7b5743600181905550611b88565b6000611a89600154436111aa565b90506000611aa260035483611b8a90919063ffffffff16565b905060006007541415611abd57436001819055505050611b88565b806007541015611b1c57611b09611af8600654611aea64e8d4a51000600754611b8a90919063ffffffff16565b611ba090919063ffffffff16565b600254611bcc90919063ffffffff16565b6002819055506000600781905550611b7e565b611b3181600754611bb690919063ffffffff16565b600781905550611b77611b66600654611b5864e8d4a5100085611b8a90919063ffffffff16565b611ba090919063ffffffff16565b600254611bcc90919063ffffffff16565b6002819055505b4360018190555050505b565b60008183611b989190612986565b905092915050565b60008183611bae9190612955565b905092915050565b60008183611bc491906129e0565b905092915050565b60008183611bda91906128ff565b905092915050565b600033905090565b611c6d846323b872dd60e01b858585604051602401611c0b939291906125fb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ef0565b50505050565b600080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600254905060015443118015611cd25750600060065414155b15611d43576000611ce5600154436111aa565b90506000611cfe60035483611b8a90919063ffffffff16565b9050611d3e611d2f600654611d2164e8d4a5100085611b8a90919063ffffffff16565b611ba090919063ffffffff16565b84611bcc90919063ffffffff16565b925050505b611d9d8260020154611d8f8460010154611d8164e8d4a51000611d73878960000154611b8a90919063ffffffff16565b611ba090919063ffffffff16565b611bb690919063ffffffff16565b611bcc90919063ffffffff16565b92505050919050565b611e278363a9059cbb60e01b8484604051602401611dc5929190612664565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ef0565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611f52826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611fb79092919063ffffffff16565b9050600081511115611fb25780806020019051810190611f7291906122a2565b611fb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa89061273c565b60405180910390fd5b5b505050565b6060611fc68484600085611fcf565b90509392505050565b6060611fda856120f1565b612019576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120109061281c565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161204291906125c9565b60006040518083038185875af1925050503d806000811461207f576040519150601f19603f3d011682016040523d82523d6000602084013e612084565b606091505b509150915081156120995780925050506120e9565b6000815111156120ac5780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e091906126fa565b60405180910390fd5b949350505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561213357506000801b8214155b92505050919050565b60008135905061214b81612e43565b92915050565b60008151905061216081612e43565b92915050565b60008083601f84011261217c5761217b612bc1565b5b8235905067ffffffffffffffff81111561219957612198612bbc565b5b6020830191508360208202830111156121b5576121b4612bc6565b5b9250929050565b6000815190506121cb81612e5a565b92915050565b6000813590506121e081612e71565b92915050565b6000815190506121f581612e71565b92915050565b60006020828403121561221157612210612bd5565b5b600061221f8482850161213c565b91505092915050565b60006020828403121561223e5761223d612bd5565b5b600061224c84828501612151565b91505092915050565b6000806020838503121561226c5761226b612bd5565b5b600083013567ffffffffffffffff81111561228a57612289612bcb565b5b61229685828601612166565b92509250509250929050565b6000602082840312156122b8576122b7612bd5565b5b60006122c6848285016121bc565b91505092915050565b6000602082840312156122e5576122e4612bd5565b5b60006122f3848285016121d1565b91505092915050565b60006020828403121561231257612311612bd5565b5b6000612320848285016121e6565b91505092915050565b600080604083850312156123405761233f612bd5565b5b600061234e858286016121d1565b925050602061235f858286016121d1565b9150509250929050565b61237281612a14565b82525050565b600061238483856128d2565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156123b7576123b6612bd0565b5b6020830292506123c8838584612aa4565b82840190509392505050565b60006123df826128bc565b6123e981856128e3565b93506123f9818560208601612ab3565b80840191505092915050565b61240e81612a5c565b82525050565b61241d81612a6e565b82525050565b600061242e826128c7565b61243881856128ee565b9350612448818560208601612ab3565b61245181612bda565b840191505092915050565b60006124696018836128ee565b915061247482612beb565b602082019050919050565b600061248c602a836128ee565b915061249782612c14565b604082019050919050565b60006124af6026836128ee565b91506124ba82612c63565b604082019050919050565b60006124d26031836128ee565b91506124dd82612cb2565b604082019050919050565b60006124f56020836128ee565b915061250082612d01565b602082019050919050565b60006125186022836128ee565b915061252382612d2a565b604082019050919050565b600061253b6020836128ee565b915061254682612d79565b602082019050919050565b600061255e601e836128ee565b915061256982612da2565b602082019050919050565b6000612581601d836128ee565b915061258c82612dcb565b602082019050919050565b60006125a46039836128ee565b91506125af82612df4565b604082019050919050565b6125c381612a52565b82525050565b60006125d582846123d4565b915081905092915050565b60006020820190506125f56000830184612369565b92915050565b60006060820190506126106000830186612369565b61261d6020830185612369565b61262a60408301846125ba565b949350505050565b60006040820190506126476000830186612369565b818103602083015261265a818486612378565b9050949350505050565b60006040820190506126796000830185612369565b61268660208301846125ba565b9392505050565b60006060820190506126a26000830186612369565b6126af60208301856125ba565b6126bc60408301846125ba565b949350505050565b60006020820190506126d96000830184612405565b92915050565b60006020820190506126f46000830184612414565b92915050565b600060208201905081810360008301526127148184612423565b905092915050565b600060208201905081810360008301526127358161245c565b9050919050565b600060208201905081810360008301526127558161247f565b9050919050565b60006020820190508181036000830152612775816124a2565b9050919050565b60006020820190508181036000830152612795816124c5565b9050919050565b600060208201905081810360008301526127b5816124e8565b9050919050565b600060208201905081810360008301526127d58161250b565b9050919050565b600060208201905081810360008301526127f58161252e565b9050919050565b6000602082019050818103600083015261281581612551565b9050919050565b6000602082019050818103600083015261283581612574565b9050919050565b6000602082019050818103600083015261285581612597565b9050919050565b600060208201905061287160008301846125ba565b92915050565b600060808201905061288c60008301876125ba565b61289960208301866125ba565b6128a660408301856125ba565b6128b360608301846125ba565b95945050505050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061290a82612a52565b915061291583612a52565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561294a57612949612b2f565b5b828201905092915050565b600061296082612a52565b915061296b83612a52565b92508261297b5761297a612b5e565b5b828204905092915050565b600061299182612a52565b915061299c83612a52565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156129d5576129d4612b2f565b5b828202905092915050565b60006129eb82612a52565b91506129f683612a52565b925082821015612a0957612a08612b2f565b5b828203905092915050565b6000612a1f82612a32565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612a6782612a80565b9050919050565b6000612a7982612a80565b9050919050565b6000612a8b82612a92565b9050919050565b6000612a9d82612a32565b9050919050565b82818337600083830152505050565b60005b83811015612ad1578082015181840152602081019050612ab6565b83811115612ae0576000848401525b50505050565b6000612af182612a52565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612b2457612b23612b2f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e4654205374616b696e673a20456d7074792041727261790000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e4654205374616b696e673a206475706c696361746520746f6b656e2069647360008201527f20696e20696e70757420706172616d732e000000000000000000000000000000602082015250565b7f4e4654205374616b696e673a206e6f74206f776e6572206f6620746f6b656e2e600082015250565b7f4e4654205374616b696e673a20746f6b656e20616c7265616479207374616b6560008201527f642e000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f736574486172766573744665653a2066656550657263656e74203e2034300000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f4e667420556e7374616b696e673a20746f6b656e206e6f74207374616b65642060008201527f6f7220696e636f727265637420746f6b656e206f776e65722e00000000000000602082015250565b612e4c81612a14565b8114612e5757600080fd5b50565b612e6381612a26565b8114612e6e57600080fd5b50565b612e7a81612a52565b8114612e8557600080fd5b5056fea2646970667358221220321bfe4a732571b6d5227e5d62f94896647dd37654d1daa4845e0e4a111d466064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AE39CAC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB5962917 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB5962917 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xD06FCBA8 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xD086C254 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xE449F341 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xF25F4B56 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39B JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x90D49B9D EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x2D7 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x4641257D GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x567E98F9 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x5E42B455 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x792B55B6 EQ PUSH2 0x233 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0xFBF0A93 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x19FCA9F6 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x1E2720FF EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x43DB3C5F EQ PUSH2 0x1C5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x99B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0xAFA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F5 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH2 0xF87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0xFF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH2 0x107A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x2329 JUMP JUMPDEST PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x11C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DF PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x26DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x136B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x385 PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x195E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP GT PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4 SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x6AE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x471 JUMPI PUSH2 0x470 PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x2228 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x569 JUMPI PUSH2 0x568 PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EC SWAP1 PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x28FF JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x69A JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x625 JUMPI PUSH2 0x624 PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x63F JUMPI PUSH2 0x63E PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x692 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x607 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x6A6 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x400 JUMP JUMPDEST POP PUSH2 0x6B7 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 PUSH2 0x74F DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x741 PUSH5 0xE8D4A51000 PUSH2 0x733 PUSH1 0x2 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x768 DUP2 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SWAP1 POP PUSH2 0x78F DUP2 PUSH1 0x6 SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x7AC DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x7E4 PUSH5 0xE8D4A51000 PUSH2 0x7D6 PUSH1 0x2 SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x929 JUMPI CALLER PUSH1 0x8 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x81B JUMPI PUSH2 0x81A PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x8BF JUMPI PUSH2 0x8BE PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x912 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x921 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7F8 JUMP JUMPDEST POP PUSH32 0x134B166C6094CC1CCBF1E3353CE5C3CD9FD29869051BDB999895854D77CC5EF6 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x95D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x9C7 PUSH2 0x1BE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E5 PUSH2 0x1181 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA32 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA88 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BEA SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F7FD5C9E17300A4800FD572EA53FC291E2EE7470D73346D16B357FAEE4E7210 DUP3 PUSH1 0x40 MLOAD PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xAEB DUP2 PUSH1 0x7 SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB05 CALLER PUSH2 0x1C73 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xB74 PUSH1 0x64 PUSH2 0xB66 PUSH1 0x5 SLOAD DUP7 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH2 0xB84 SWAP2 SWAP1 PUSH2 0x29E0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE0 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC30 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST LT ISZERO PUSH2 0xCE2 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xD2D CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DA6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD87 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST LT ISZERO PUSH2 0xE89 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE36 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE86 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xEF6 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DA6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEFE PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF38 PUSH5 0xE8D4A51000 PUSH2 0xF2A PUSH1 0x2 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954 CALLER DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF73 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x268D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xF9D JUMPI POP PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 PUSH2 0xFB0 PUSH1 0x1 SLOAD NUMBER PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFC9 PUSH1 0x3 SLOAD DUP4 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xFE0 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xFFA PUSH2 0x1BE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1018 PUSH2 0x1181 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1065 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1078 PUSH1 0x0 PUSH2 0x1E2C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1082 PUSH2 0x1BE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10A0 PUSH2 0x1181 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x28 DUP2 GT ISZERO PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1131 SWAP1 PUSH2 0x27FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0xF419800A2D8930C61D5D9CD782AA72C512CF6BE2F79DA6DB0B8855870B7269ED DUP2 PUSH1 0x40 MLOAD PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BF DUP4 DUP4 PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11CF PUSH2 0x1BE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11ED PUSH2 0x1181 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123A SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D21E5A2B633291BD1FF5F9C654E402D063783C95759D2EA521B31FB30E4DA41 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1328 DUP4 PUSH2 0x1C73 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1354 PUSH1 0x64 PUSH2 0x1346 PUSH1 0x5 SLOAD DUP6 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x1362 SWAP2 SWAP1 PUSH2 0x29E0 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP GT PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A8 SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1538 JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x13D4 JUMPI PUSH2 0x13D3 PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1475 SWAP1 PUSH2 0x283C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x148D SWAP2 SWAP1 PUSH2 0x28FF JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1523 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x14AE JUMPI PUSH2 0x14AD PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x14C8 JUMPI PUSH2 0x14C7 PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD EQ ISZERO PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1507 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x151B SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1490 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1530 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13B4 JUMP JUMPDEST POP PUSH2 0x1541 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x15CC DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x15BE PUSH5 0xE8D4A51000 PUSH2 0x15B0 PUSH1 0x2 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1654 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1678 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST LT ISZERO PUSH2 0x172A JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D7 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1703 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1727 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1741 DUP2 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH2 0x1766 DUP2 PUSH1 0x6 SLOAD PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x1783 DUP2 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x17BB PUSH5 0xE8D4A51000 PUSH2 0x17AD PUSH1 0x2 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18F5 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x17E7 JUMPI PUSH2 0x17E6 PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP10 DUP10 DUP7 DUP2 DUP2 LT PUSH2 0x188B JUMPI PUSH2 0x188A PUSH2 0x2B8D JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x18ED SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17C6 JUMP JUMPDEST POP PUSH32 0x80CC10BF7E52583AE0A17D8DD6AB5005573B17A08091A091AF1A81205A675C91 CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1929 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1966 PUSH2 0x1BE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1984 PUSH2 0x1181 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D1 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A41 SWAP1 PUSH2 0x275C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A53 DUP2 PUSH2 0x1E2C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD NUMBER GT PUSH2 0x1A64 JUMPI PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x1A7B JUMPI NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A89 PUSH1 0x1 SLOAD NUMBER PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AA2 PUSH1 0x3 SLOAD DUP4 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x1ABD JUMPI NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1B88 JUMP JUMPDEST DUP1 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0x1B1C JUMPI PUSH2 0x1B09 PUSH2 0x1AF8 PUSH1 0x6 SLOAD PUSH2 0x1AEA PUSH5 0xE8D4A51000 PUSH1 0x7 SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x1B31 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x1B77 PUSH2 0x1B66 PUSH1 0x6 SLOAD PUSH2 0x1B58 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B98 SWAP2 SWAP1 PUSH2 0x2986 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1BAE SWAP2 SWAP1 PUSH2 0x2955 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1BC4 SWAP2 SWAP1 PUSH2 0x29E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1BDA SWAP2 SWAP1 PUSH2 0x28FF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C6D DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EF0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x1 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x1CD2 JUMPI POP PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1D43 JUMPI PUSH1 0x0 PUSH2 0x1CE5 PUSH1 0x1 SLOAD NUMBER PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CFE PUSH1 0x3 SLOAD DUP4 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1D3E PUSH2 0x1D2F PUSH1 0x6 SLOAD PUSH2 0x1D21 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH2 0x1D9D DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x1D8F DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1D81 PUSH5 0xE8D4A51000 PUSH2 0x1D73 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x1B8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BB6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E27 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1DC5 SWAP3 SWAP2 SWAP1 PUSH2 0x2664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EF0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F52 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FB7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1FB2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1F72 SWAP2 SWAP1 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x1FB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA8 SWAP1 PUSH2 0x273C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1FC6 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1FCF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1FDA DUP6 PUSH2 0x20F1 JUMP JUMPDEST PUSH2 0x2019 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2010 SWAP1 PUSH2 0x281C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2042 SWAP2 SWAP1 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x207F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x2099 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x20AC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E0 SWAP2 SWAP1 PUSH2 0x26FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x2133 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x214B DUP2 PUSH2 0x2E43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2160 DUP2 PUSH2 0x2E43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x217C JUMPI PUSH2 0x217B PUSH2 0x2BC1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2199 JUMPI PUSH2 0x2198 PUSH2 0x2BBC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x21B5 JUMPI PUSH2 0x21B4 PUSH2 0x2BC6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21CB DUP2 PUSH2 0x2E5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21E0 DUP2 PUSH2 0x2E71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21F5 DUP2 PUSH2 0x2E71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2211 JUMPI PUSH2 0x2210 PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x221F DUP5 DUP3 DUP6 ADD PUSH2 0x213C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x223E JUMPI PUSH2 0x223D PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x224C DUP5 DUP3 DUP6 ADD PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x226C JUMPI PUSH2 0x226B PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x228A JUMPI PUSH2 0x2289 PUSH2 0x2BCB JUMP JUMPDEST JUMPDEST PUSH2 0x2296 DUP6 DUP3 DUP7 ADD PUSH2 0x2166 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B8 JUMPI PUSH2 0x22B7 PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22C6 DUP5 DUP3 DUP6 ADD PUSH2 0x21BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22E5 JUMPI PUSH2 0x22E4 PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F3 DUP5 DUP3 DUP6 ADD PUSH2 0x21D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2312 JUMPI PUSH2 0x2311 PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2320 DUP5 DUP3 DUP6 ADD PUSH2 0x21E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2340 JUMPI PUSH2 0x233F PUSH2 0x2BD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x234E DUP6 DUP3 DUP7 ADD PUSH2 0x21D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x235F DUP6 DUP3 DUP7 ADD PUSH2 0x21D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2372 DUP2 PUSH2 0x2A14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2384 DUP4 DUP6 PUSH2 0x28D2 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x23B7 JUMPI PUSH2 0x23B6 PUSH2 0x2BD0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x23C8 DUP4 DUP6 DUP5 PUSH2 0x2AA4 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DF DUP3 PUSH2 0x28BC JUMP JUMPDEST PUSH2 0x23E9 DUP2 DUP6 PUSH2 0x28E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x23F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2AB3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x240E DUP2 PUSH2 0x2A5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x241D DUP2 PUSH2 0x2A6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242E DUP3 PUSH2 0x28C7 JUMP JUMPDEST PUSH2 0x2438 DUP2 DUP6 PUSH2 0x28EE JUMP JUMPDEST SWAP4 POP PUSH2 0x2448 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2AB3 JUMP JUMPDEST PUSH2 0x2451 DUP2 PUSH2 0x2BDA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2469 PUSH1 0x18 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2474 DUP3 PUSH2 0x2BEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248C PUSH1 0x2A DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2497 DUP3 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24AF PUSH1 0x26 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x24BA DUP3 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D2 PUSH1 0x31 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x24DD DUP3 PUSH2 0x2CB2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F5 PUSH1 0x20 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2500 DUP3 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2518 PUSH1 0x22 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2523 DUP3 PUSH2 0x2D2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x253B PUSH1 0x20 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2546 DUP3 PUSH2 0x2D79 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x255E PUSH1 0x1E DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2569 DUP3 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2581 PUSH1 0x1D DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x258C DUP3 PUSH2 0x2DCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A4 PUSH1 0x39 DUP4 PUSH2 0x28EE JUMP JUMPDEST SWAP2 POP PUSH2 0x25AF DUP3 PUSH2 0x2DF4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C3 DUP2 PUSH2 0x2A52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D5 DUP3 DUP5 PUSH2 0x23D4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2610 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x261D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x262A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25BA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2647 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2369 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x265A DUP2 DUP5 DUP7 PUSH2 0x2378 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2679 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x2686 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x25BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26A2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x26AF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x26BC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25BA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26D9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2414 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2714 DUP2 DUP5 PUSH2 0x2423 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2735 DUP2 PUSH2 0x245C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2755 DUP2 PUSH2 0x247F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2775 DUP2 PUSH2 0x24A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2795 DUP2 PUSH2 0x24C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27B5 DUP2 PUSH2 0x24E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27D5 DUP2 PUSH2 0x250B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27F5 DUP2 PUSH2 0x252E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2815 DUP2 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2835 DUP2 PUSH2 0x2574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2855 DUP2 PUSH2 0x2597 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2871 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x288C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x2899 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x28A6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x28B3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x25BA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290A DUP3 PUSH2 0x2A52 JUMP JUMPDEST SWAP2 POP PUSH2 0x2915 DUP4 PUSH2 0x2A52 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x294A JUMPI PUSH2 0x2949 PUSH2 0x2B2F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2960 DUP3 PUSH2 0x2A52 JUMP JUMPDEST SWAP2 POP PUSH2 0x296B DUP4 PUSH2 0x2A52 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x297B JUMPI PUSH2 0x297A PUSH2 0x2B5E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2991 DUP3 PUSH2 0x2A52 JUMP JUMPDEST SWAP2 POP PUSH2 0x299C DUP4 PUSH2 0x2A52 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x29D5 JUMPI PUSH2 0x29D4 PUSH2 0x2B2F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29EB DUP3 PUSH2 0x2A52 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F6 DUP4 PUSH2 0x2A52 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2A09 JUMPI PUSH2 0x2A08 PUSH2 0x2B2F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1F DUP3 PUSH2 0x2A32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A67 DUP3 PUSH2 0x2A80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A79 DUP3 PUSH2 0x2A80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8B DUP3 PUSH2 0x2A92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9D DUP3 PUSH2 0x2A32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2AB6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2AE0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF1 DUP3 PUSH2 0x2A52 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2B24 JUMPI PUSH2 0x2B23 PUSH2 0x2B2F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A20456D7074792041727261790000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A206475706C696361746520746F6B656E20696473 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20696E20696E70757420706172616D732E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A206E6F74206F776E6572206F6620746F6B656E2E PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654205374616B696E673A20746F6B656E20616C7265616479207374616B65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x642E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x736574486172766573744665653A2066656550657263656E74203E2034300000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E667420556E7374616B696E673A20746F6B656E206E6F74207374616B656420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F7220696E636F727265637420746F6B656E206F776E65722E00000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2E4C DUP2 PUSH2 0x2A14 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E63 DUP2 PUSH2 0x2A26 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E7A DUP2 PUSH2 0x2A52 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN SHL INVALID 0x4A PUSH20 0x2571B6D5227E5D62F94896647DD37654D1DAA484 0x5E 0xE 0x4A GT SAR CHAINID PUSH1 0x64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "27968:7959:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31500:1390;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28670:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;28285:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30363:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28362:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;35087:837;;;:::i;:::-;;28498:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29950:405;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5562:103;;;:::i;:::-;;29594:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28399:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4911:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29821:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29445:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28325:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28466:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28245:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34290:224;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32898:1384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28435:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5820:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31500:1390;31590:1;31572:8;;:15;;:19;31564:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;31635:9;31631:444;31654:8;;:15;;31650:1;:19;31631:444;;;31732:10;31699:43;;:8;:16;;;31716:8;;31725:1;31716:11;;;;;;;:::i;:::-;;;;;;;;31699:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;31691:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;31836:1;31802:36;;:9;:22;31812:8;;31821:1;31812:11;;;;;;;:::i;:::-;;;;;;;;31802:22;;;;;;;;;;;;;;;;;;;;;:36;;;31794:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;31896:9;31912:1;31908;:5;;;;:::i;:::-;31896:17;;31892:172;31919:8;;:15;;31915:1;:19;31892:172;;;31983:8;;31992:1;31983:11;;;;;;;:::i;:::-;;;;;;;;31968:8;;31977:1;31968:11;;;;;;;:::i;:::-;;;;;;;;:26;;31960:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;31936:4;;;;;:::i;:::-;;;;31892:172;;;;31671:4;;;;;:::i;:::-;;;;31631:444;;;;32085:14;:12;:14::i;:::-;32110:21;32134:8;:20;32143:10;32134:20;;;;;;;;;;;;;;;32110:44;;32183:1;32169:4;:11;;;:15;32165:196;;;32201:15;32219:63;32266:4;:15;;;32219:42;32256:4;32219:32;32235:15;;32219:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;:46;;:63;;;;:::i;:::-;32201:81;;32318:31;32341:7;32318:4;:18;;;:22;;:31;;;;:::i;:::-;32297:4;:18;;:52;;;;32186:175;32165:196;32371:19;32393:8;;:15;;32371:37;;32439:34;32461:11;32439:17;;:21;;:34;;;;:::i;:::-;32419:17;:54;;;;32498:28;32514:11;32498:4;:11;;;:15;;:28;;;;:::i;:::-;32484:4;:11;;:42;;;;32555;32592:4;32555:32;32571:15;;32555:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;32537:4;:15;;:60;;;;32630:15;32608:4;:19;;:37;;;;32660:9;32656:183;32679:8;;:15;;32675:1;:19;32656:183;;;32741:10;32716:9;:22;32726:8;;32735:1;32726:11;;;;;;;:::i;:::-;;;;;;;;32716:22;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;32766:8;:21;;;32788:10;32808:4;32815:8;;32824:1;32815:11;;;;;;;:::i;:::-;;;;;;;;32766:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32696:4;;;;;:::i;:::-;;;;32656:183;;;;32854:28;32861:10;32873:8;;32854:28;;;;;;;;:::i;:::-;;;;;;;;31553:1337;;31500:1390;;:::o;28670:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;28285:33::-;;;:::o;30363:245::-;5142:12;:10;:12::i;:::-;5131:23;;:7;:5;:7::i;:::-;:23;;;5123:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;30433:62:::1;30460:10;30480:4;30487:7;30433:9;:26;;;;:62;;;;;;:::i;:::-;30525:10;30511:34;;;30537:7;30511:34;;;;;;:::i;:::-;;;;;;;;30573:27;30592:7;30573:14;;:18;;:27;;;;:::i;:::-;30556:14;:44;;;;30363:245:::0;:::o;28362:30::-;;;;:::o;35087:837::-;35126:20;35149:23;35161:10;35149:11;:23::i;:::-;35126:46;;35183:21;35207:8;:20;35216:10;35207:20;;;;;;;;;;;;;;;35183:44;;35238:19;35260:37;35293:3;35260:28;35277:10;;35260:12;:16;;:28;;;;:::i;:::-;:32;;:37;;;;:::i;:::-;35238:59;;35308:14;35340:11;35325:12;:26;;;;:::i;:::-;35308:43;;35403:6;35366:9;:19;;;35394:4;35366:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;35362:119;;;35435:9;:19;;;35463:4;35435:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;35426:43;;35362:119;35491:42;35514:10;35526:6;35491:9;:22;;;;:42;;;;;:::i;:::-;35587:11;35550:9;:19;;;35578:4;35550:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;35546:129;;;35629:9;:19;;;35657:4;35629:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;35615:48;;35546:129;35685:46;35708:9;;;;;;;;;;;35719:11;35685:9;:22;;;;:46;;;;;:::i;:::-;35742:14;:12;:14::i;:::-;35788:1;35767:4;:18;;:22;;;;35818:42;35855:4;35818:32;35834:15;;35818:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;35800:4;:15;;:60;;;;35876:40;35884:10;35896:6;35904:11;35876:40;;;;;;;;:::i;:::-;;;;;;;;35115:809;;;;35087:837::o;28498:32::-;;;;:::o;29950:405::-;30001:7;30040:15;;30025:12;:30;:56;;;;;30080:1;30059:17;;:22;;30025:56;30021:327;;;30098:18;30119:44;30133:15;;30150:12;30119:13;:44::i;:::-;30098:65;;30178:14;30195:30;30210:14;;30195:10;:14;;:30;;;;:::i;:::-;30178:47;;30247:26;30266:6;30247:14;;:18;;:26;;;;:::i;:::-;30240:33;;;;;;30021:327;30322:14;;30315:21;;29950:405;;:::o;5562:103::-;5142:12;:10;:12::i;:::-;5131:23;;:7;:5;:7::i;:::-;:23;;;5123:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5627:30:::1;5654:1;5627:18;:30::i;:::-;5562:103::o:0;29594:219::-;5142:12;:10;:12::i;:::-;5131:23;;:7;:5;:7::i;:::-;:23;;;5123:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;29691:2:::1;29676:11;:17;;29668:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;29752:11;29739:10;:24;;;;29779:26;29793:11;29779:26;;;;;;:::i;:::-;;;;;;;;29594:219:::0;:::o;28399:29::-;;;;:::o;4911:87::-;4957:7;4984:6;;;;;;;;;;;4977:13;;4911:87;:::o;29821:121::-;29893:7;29920:14;29928:5;29920:3;:7;;:14;;;;:::i;:::-;29913:21;;29821:121;;;;:::o;29445:141::-;5142:12;:10;:12::i;:::-;5131:23;;:7;:5;:7::i;:::-;:23;;;5123:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;29529:10:::1;29517:9;;:22;;;;;;;;;;;;;;;;;;29568:9;;;;;;;;;;;29555:23;;;;;;;;;;;;29445:141:::0;:::o;28325:30::-;;;;:::o;28466:25::-;;;;:::o;28245:33::-;;;:::o;34290:224::-;34346:7;34366:15;34384:18;34396:5;34384:11;:18::i;:::-;34366:36;;34413:19;34435:32;34463:3;34435:23;34447:10;;34435:7;:11;;:23;;;;:::i;:::-;:27;;:32;;;;:::i;:::-;34413:54;;34495:11;34485:7;:21;;;;:::i;:::-;34478:28;;;;34290:224;;;:::o;32898:1384::-;32990:1;32972:8;;:15;;:19;32964:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;33035:9;33031:404;33054:8;;:15;;33050:1;:19;33031:404;;;33091:15;33109:8;;33118:1;33109:11;;;;;;;:::i;:::-;;;;;;;;33091:29;;33165:10;33143:32;;:9;:18;33153:7;33143:18;;;;;;;;;;;;;;;;;;;;;:32;;;33135:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;33256:9;33272:1;33268;:5;;;;:::i;:::-;33256:17;;33252:172;33279:8;;:15;;33275:1;:19;33252:172;;;33343:8;;33352:1;33343:11;;;;;;;:::i;:::-;;;;;;;;33328:8;;33337:1;33328:11;;;;;;;:::i;:::-;;;;;;;;:26;;33320:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;33296:4;;;;;:::i;:::-;;;;33252:172;;;;33076:359;33071:4;;;;;:::i;:::-;;;;33031:404;;;;33447:14;:12;:14::i;:::-;33472:21;33496:8;:20;33505:10;33496:20;;;;;;;;;;;;;;;33472:44;;33527:15;33545:63;33592:4;:15;;;33545:42;33582:4;33545:32;33561:15;;33545:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;:46;;:63;;;;:::i;:::-;33527:81;;33660:7;33623:9;:19;;;33651:4;33623:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;33619:121;;;33694:9;:19;;;33722:4;33694:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33684:44;;33619:121;33771:31;33794:7;33771:4;:18;;;:22;;:31;;;;:::i;:::-;33750:4;:18;;:52;;;;33813:19;33835:8;;:15;;33813:37;;33881:34;33903:11;33881:17;;:21;;:34;;;;:::i;:::-;33861:17;:54;;;;33940:28;33956:11;33940:4;:11;;;:15;;:28;;;;:::i;:::-;33926:4;:11;;:42;;;;33997;34034:4;33997:32;34013:15;;33997:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;33979:4;:15;;:60;;;;34054:9;34050:179;34073:11;34069:1;:15;34050:179;;;34139:1;34106:9;:22;34116:8;;34125:1;34116:11;;;;;;;:::i;:::-;;;;;;;;34106:22;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;34156:8;:21;;;34186:4;34193:10;34205:8;;34214:1;34205:11;;;;;;;:::i;:::-;;;;;;;;34156:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34086:4;;;;;:::i;:::-;;;;34050:179;;;;34244:30;34253:10;34265:8;;34244:30;;;;;;;;:::i;:::-;;;;;;;;32953:1329;;;32898:1384;;:::o;28435:24::-;;;;;;;;;;;;;:::o;5820:201::-;5142:12;:10;:12::i;:::-;5131:23;;:7;:5;:7::i;:::-;:23;;;5123:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5929:1:::1;5909:22;;:8;:22;;;;5901:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;5985:28;6004:8;5985:18;:28::i;:::-;5820:201:::0;:::o;30616:878::-;30679:15;;30663:12;:31;30659:70;;30711:7;;30659:70;30764:1;30743:17;;:22;30739:106;;;30800:12;30782:15;:30;;;;30827:7;;30739:106;30855:18;30876:44;30890:15;;30907:12;30876:13;:44::i;:::-;30855:65;;30931:14;30948:30;30963:14;;30948:10;:14;;:30;;;;:::i;:::-;30931:47;;31011:1;30993:14;;:19;30989:103;;;31047:12;31029:15;:30;;;;31074:7;;;;30989:103;31123:6;31106:14;;:23;31102:344;;;31164:68;31184:47;31213:17;;31184:24;31203:4;31184:14;;:18;;:24;;;;:::i;:::-;:28;;:47;;;;:::i;:::-;31164:15;;:19;;:68;;;;:::i;:::-;31146:15;:86;;;;31264:1;31247:14;:18;;;;31102:344;;;31315:26;31334:6;31315:14;;:18;;:26;;;;:::i;:::-;31298:14;:43;;;;31374:60;31394:39;31415:17;;31394:16;31405:4;31394:6;:10;;:16;;;;:::i;:::-;:20;;:39;;;;:::i;:::-;31374:15;;:19;;:60;;;;:::i;:::-;31356:15;:78;;;;31102:344;31474:12;31456:15;:30;;;;30648:846;;30616:878;:::o;9698:98::-;9756:7;9787:1;9783;:5;;;;:::i;:::-;9776:12;;9698:98;;;;:::o;10097:::-;10155:7;10186:1;10182;:5;;;;:::i;:::-;10175:12;;10097:98;;;;:::o;9341:::-;9399:7;9430:1;9426;:5;;;;:::i;:::-;9419:12;;9341:98;;;;:::o;8960:::-;9018:7;9049:1;9045;:5;;;;:::i;:::-;9038:12;;8960:98;;;;:::o;3751:::-;3804:7;3831:10;3824:17;;3751:98;:::o;13429:205::-;13530:96;13550:5;13580:27;;;13609:4;13615:2;13619:5;13557:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13530:19;:96::i;:::-;13429:205;;;;:::o;34526:553::-;34584:7;34604:21;34628:8;:15;34637:5;34628:15;;;;;;;;;;;;;;;34604:39;;34654:11;34668:15;;34654:29;;34713:15;;34698:12;:30;:56;;;;;34753:1;34732:17;;:22;;34698:56;34694:285;;;34771:18;34792:44;34806:15;;34823:12;34792:13;:44::i;:::-;34771:65;;34851:14;34868:30;34883:14;;34868:10;:14;;:30;;;;:::i;:::-;34851:47;;34919:48;34927:39;34948:17;;34927:16;34938:4;34927:6;:10;;:16;;;;:::i;:::-;:20;;:39;;;;:::i;:::-;34919:3;:7;;:48;;;;:::i;:::-;34913:54;;34756:223;;34694:285;34996:75;35052:4;:18;;;34996:51;35031:4;:15;;;34996:30;35021:4;34996:20;35012:3;34996:4;:11;;;:15;;:20;;;;:::i;:::-;:24;;:30;;;;:::i;:::-;:34;;:51;;;;:::i;:::-;:55;;:75;;;;:::i;:::-;34989:82;;;;34526:553;;;:::o;13244:177::-;13327:86;13347:5;13377:23;;;13402:2;13406:5;13354:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13327:19;:86::i;:::-;13244:177;;;:::o;6181:191::-;6255:16;6274:6;;;;;;;;;;;6255:25;;6300:8;6291:6;;:17;;;;;;;;;;;;;;;;;;6355:8;6324:40;;6345:8;6324:40;;;;;;;;;;;;6244:128;6181:191;:::o;15549:761::-;15973:23;15999:69;16027:4;15999:69;;;;;;;;;;;;;;;;;16007:5;15999:27;;;;:69;;;;;:::i;:::-;15973:95;;16103:1;16083:10;:17;:21;16079:224;;;16225:10;16214:30;;;;;;;;;;;;:::i;:::-;16206:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;16079:224;15619:691;15549:761;;:::o;20069:196::-;20172:12;20204:53;20227:6;20235:4;20241:1;20244:12;20204:22;:53::i;:::-;20197:60;;20069:196;;;;;:::o;21446:979::-;21576:12;21609:18;21620:6;21609:10;:18::i;:::-;21601:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;21735:12;21749:23;21776:6;:11;;21796:8;21807:4;21776:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21734:78;;;;21827:7;21823:595;;;21858:10;21851:17;;;;;;21823:595;21992:1;21972:10;:17;:21;21968:439;;;22235:10;22229:17;22296:15;22283:10;22279:2;22275:19;22268:44;21968:439;22378:12;22371:20;;;;;;;;;;;:::i;:::-;;;;;;;;21446:979;;;;;;;:::o;16954:619::-;17014:4;17276:16;17303:19;17325:66;17303:88;;;;17494:7;17482:20;17470:32;;17534:11;17522:8;:23;;:42;;;;;17561:3;17549:15;;:8;:15;;17522:42;17514:51;;;;16954:619;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;152:143;;;;:::o;318:568::-;391:8;401:6;451:3;444:4;436:6;432:17;428:27;418:122;;459:79;;:::i;:::-;418:122;572:6;559:20;549:30;;602:18;594:6;591:30;588:117;;;624:79;;:::i;:::-;588:117;738:4;730:6;726:17;714:29;;792:3;784:4;776:6;772:17;762:8;758:32;755:41;752:128;;;799:79;;:::i;:::-;752:128;318:568;;;;;:::o;892:137::-;946:5;977:6;971:13;962:22;;993:30;1017:5;993:30;:::i;:::-;892:137;;;;:::o;1035:139::-;1081:5;1119:6;1106:20;1097:29;;1135:33;1162:5;1135:33;:::i;:::-;1035:139;;;;:::o;1180:143::-;1237:5;1268:6;1262:13;1253:22;;1284:33;1311:5;1284:33;:::i;:::-;1180:143;;;;:::o;1329:329::-;1388:6;1437:2;1425:9;1416:7;1412:23;1408:32;1405:119;;;1443:79;;:::i;:::-;1405:119;1563:1;1588:53;1633:7;1624:6;1613:9;1609:22;1588:53;:::i;:::-;1578:63;;1534:117;1329:329;;;;:::o;1664:351::-;1734:6;1783:2;1771:9;1762:7;1758:23;1754:32;1751:119;;;1789:79;;:::i;:::-;1751:119;1909:1;1934:64;1990:7;1981:6;1970:9;1966:22;1934:64;:::i;:::-;1924:74;;1880:128;1664:351;;;;:::o;2021:559::-;2107:6;2115;2164:2;2152:9;2143:7;2139:23;2135:32;2132:119;;;2170:79;;:::i;:::-;2132:119;2318:1;2307:9;2303:17;2290:31;2348:18;2340:6;2337:30;2334:117;;;2370:79;;:::i;:::-;2334:117;2483:80;2555:7;2546:6;2535:9;2531:22;2483:80;:::i;:::-;2465:98;;;;2261:312;2021:559;;;;;:::o;2586:345::-;2653:6;2702:2;2690:9;2681:7;2677:23;2673:32;2670:119;;;2708:79;;:::i;:::-;2670:119;2828:1;2853:61;2906:7;2897:6;2886:9;2882:22;2853:61;:::i;:::-;2843:71;;2799:125;2586:345;;;;:::o;2937:329::-;2996:6;3045:2;3033:9;3024:7;3020:23;3016:32;3013:119;;;3051:79;;:::i;:::-;3013:119;3171:1;3196:53;3241:7;3232:6;3221:9;3217:22;3196:53;:::i;:::-;3186:63;;3142:117;2937:329;;;;:::o;3272:351::-;3342:6;3391:2;3379:9;3370:7;3366:23;3362:32;3359:119;;;3397:79;;:::i;:::-;3359:119;3517:1;3542:64;3598:7;3589:6;3578:9;3574:22;3542:64;:::i;:::-;3532:74;;3488:128;3272:351;;;;:::o;3629:474::-;3697:6;3705;3754:2;3742:9;3733:7;3729:23;3725:32;3722:119;;;3760:79;;:::i;:::-;3722:119;3880:1;3905:53;3950:7;3941:6;3930:9;3926:22;3905:53;:::i;:::-;3895:63;;3851:117;4007:2;4033:53;4078:7;4069:6;4058:9;4054:22;4033:53;:::i;:::-;4023:63;;3978:118;3629:474;;;;;:::o;4109:118::-;4196:24;4214:5;4196:24;:::i;:::-;4191:3;4184:37;4109:118;;:::o;4263:537::-;4391:3;4412:86;4491:6;4486:3;4412:86;:::i;:::-;4405:93;;4522:66;4514:6;4511:78;4508:165;;;4592:79;;:::i;:::-;4508:165;4704:4;4696:6;4692:17;4682:27;;4719:43;4755:6;4750:3;4743:5;4719:43;:::i;:::-;4787:6;4782:3;4778:16;4771:23;;4263:537;;;;;:::o;4806:373::-;4910:3;4938:38;4970:5;4938:38;:::i;:::-;4992:88;5073:6;5068:3;4992:88;:::i;:::-;4985:95;;5089:52;5134:6;5129:3;5122:4;5115:5;5111:16;5089:52;:::i;:::-;5166:6;5161:3;5157:16;5150:23;;4914:265;4806:373;;;;:::o;5185:159::-;5286:51;5331:5;5286:51;:::i;:::-;5281:3;5274:64;5185:159;;:::o;5350:163::-;5453:53;5500:5;5453:53;:::i;:::-;5448:3;5441:66;5350:163;;:::o;5519:364::-;5607:3;5635:39;5668:5;5635:39;:::i;:::-;5690:71;5754:6;5749:3;5690:71;:::i;:::-;5683:78;;5770:52;5815:6;5810:3;5803:4;5796:5;5792:16;5770:52;:::i;:::-;5847:29;5869:6;5847:29;:::i;:::-;5842:3;5838:39;5831:46;;5611:272;5519:364;;;;:::o;5889:366::-;6031:3;6052:67;6116:2;6111:3;6052:67;:::i;:::-;6045:74;;6128:93;6217:3;6128:93;:::i;:::-;6246:2;6241:3;6237:12;6230:19;;5889:366;;;:::o;6261:::-;6403:3;6424:67;6488:2;6483:3;6424:67;:::i;:::-;6417:74;;6500:93;6589:3;6500:93;:::i;:::-;6618:2;6613:3;6609:12;6602:19;;6261:366;;;:::o;6633:::-;6775:3;6796:67;6860:2;6855:3;6796:67;:::i;:::-;6789:74;;6872:93;6961:3;6872:93;:::i;:::-;6990:2;6985:3;6981:12;6974:19;;6633:366;;;:::o;7005:::-;7147:3;7168:67;7232:2;7227:3;7168:67;:::i;:::-;7161:74;;7244:93;7333:3;7244:93;:::i;:::-;7362:2;7357:3;7353:12;7346:19;;7005:366;;;:::o;7377:::-;7519:3;7540:67;7604:2;7599:3;7540:67;:::i;:::-;7533:74;;7616:93;7705:3;7616:93;:::i;:::-;7734:2;7729:3;7725:12;7718:19;;7377:366;;;:::o;7749:::-;7891:3;7912:67;7976:2;7971:3;7912:67;:::i;:::-;7905:74;;7988:93;8077:3;7988:93;:::i;:::-;8106:2;8101:3;8097:12;8090:19;;7749:366;;;:::o;8121:::-;8263:3;8284:67;8348:2;8343:3;8284:67;:::i;:::-;8277:74;;8360:93;8449:3;8360:93;:::i;:::-;8478:2;8473:3;8469:12;8462:19;;8121:366;;;:::o;8493:::-;8635:3;8656:67;8720:2;8715:3;8656:67;:::i;:::-;8649:74;;8732:93;8821:3;8732:93;:::i;:::-;8850:2;8845:3;8841:12;8834:19;;8493:366;;;:::o;8865:::-;9007:3;9028:67;9092:2;9087:3;9028:67;:::i;:::-;9021:74;;9104:93;9193:3;9104:93;:::i;:::-;9222:2;9217:3;9213:12;9206:19;;8865:366;;;:::o;9237:::-;9379:3;9400:67;9464:2;9459:3;9400:67;:::i;:::-;9393:74;;9476:93;9565:3;9476:93;:::i;:::-;9594:2;9589:3;9585:12;9578:19;;9237:366;;;:::o;9609:118::-;9696:24;9714:5;9696:24;:::i;:::-;9691:3;9684:37;9609:118;;:::o;9733:271::-;9863:3;9885:93;9974:3;9965:6;9885:93;:::i;:::-;9878:100;;9995:3;9988:10;;9733:271;;;;:::o;10010:222::-;10103:4;10141:2;10130:9;10126:18;10118:26;;10154:71;10222:1;10211:9;10207:17;10198:6;10154:71;:::i;:::-;10010:222;;;;:::o;10238:442::-;10387:4;10425:2;10414:9;10410:18;10402:26;;10438:71;10506:1;10495:9;10491:17;10482:6;10438:71;:::i;:::-;10519:72;10587:2;10576:9;10572:18;10563:6;10519:72;:::i;:::-;10601;10669:2;10658:9;10654:18;10645:6;10601:72;:::i;:::-;10238:442;;;;;;:::o;10686:503::-;10867:4;10905:2;10894:9;10890:18;10882:26;;10918:71;10986:1;10975:9;10971:17;10962:6;10918:71;:::i;:::-;11036:9;11030:4;11026:20;11021:2;11010:9;11006:18;10999:48;11064:118;11177:4;11168:6;11160;11064:118;:::i;:::-;11056:126;;10686:503;;;;;;:::o;11195:332::-;11316:4;11354:2;11343:9;11339:18;11331:26;;11367:71;11435:1;11424:9;11420:17;11411:6;11367:71;:::i;:::-;11448:72;11516:2;11505:9;11501:18;11492:6;11448:72;:::i;:::-;11195:332;;;;;:::o;11533:442::-;11682:4;11720:2;11709:9;11705:18;11697:26;;11733:71;11801:1;11790:9;11786:17;11777:6;11733:71;:::i;:::-;11814:72;11882:2;11871:9;11867:18;11858:6;11814:72;:::i;:::-;11896;11964:2;11953:9;11949:18;11940:6;11896:72;:::i;:::-;11533:442;;;;;;:::o;11981:250::-;12088:4;12126:2;12115:9;12111:18;12103:26;;12139:85;12221:1;12210:9;12206:17;12197:6;12139:85;:::i;:::-;11981:250;;;;:::o;12237:254::-;12346:4;12384:2;12373:9;12369:18;12361:26;;12397:87;12481:1;12470:9;12466:17;12457:6;12397:87;:::i;:::-;12237:254;;;;:::o;12497:313::-;12610:4;12648:2;12637:9;12633:18;12625:26;;12697:9;12691:4;12687:20;12683:1;12672:9;12668:17;12661:47;12725:78;12798:4;12789:6;12725:78;:::i;:::-;12717:86;;12497:313;;;;:::o;12816:419::-;12982:4;13020:2;13009:9;13005:18;12997:26;;13069:9;13063:4;13059:20;13055:1;13044:9;13040:17;13033:47;13097:131;13223:4;13097:131;:::i;:::-;13089:139;;12816:419;;;:::o;13241:::-;13407:4;13445:2;13434:9;13430:18;13422:26;;13494:9;13488:4;13484:20;13480:1;13469:9;13465:17;13458:47;13522:131;13648:4;13522:131;:::i;:::-;13514:139;;13241:419;;;:::o;13666:::-;13832:4;13870:2;13859:9;13855:18;13847:26;;13919:9;13913:4;13909:20;13905:1;13894:9;13890:17;13883:47;13947:131;14073:4;13947:131;:::i;:::-;13939:139;;13666:419;;;:::o;14091:::-;14257:4;14295:2;14284:9;14280:18;14272:26;;14344:9;14338:4;14334:20;14330:1;14319:9;14315:17;14308:47;14372:131;14498:4;14372:131;:::i;:::-;14364:139;;14091:419;;;:::o;14516:::-;14682:4;14720:2;14709:9;14705:18;14697:26;;14769:9;14763:4;14759:20;14755:1;14744:9;14740:17;14733:47;14797:131;14923:4;14797:131;:::i;:::-;14789:139;;14516:419;;;:::o;14941:::-;15107:4;15145:2;15134:9;15130:18;15122:26;;15194:9;15188:4;15184:20;15180:1;15169:9;15165:17;15158:47;15222:131;15348:4;15222:131;:::i;:::-;15214:139;;14941:419;;;:::o;15366:::-;15532:4;15570:2;15559:9;15555:18;15547:26;;15619:9;15613:4;15609:20;15605:1;15594:9;15590:17;15583:47;15647:131;15773:4;15647:131;:::i;:::-;15639:139;;15366:419;;;:::o;15791:::-;15957:4;15995:2;15984:9;15980:18;15972:26;;16044:9;16038:4;16034:20;16030:1;16019:9;16015:17;16008:47;16072:131;16198:4;16072:131;:::i;:::-;16064:139;;15791:419;;;:::o;16216:::-;16382:4;16420:2;16409:9;16405:18;16397:26;;16469:9;16463:4;16459:20;16455:1;16444:9;16440:17;16433:47;16497:131;16623:4;16497:131;:::i;:::-;16489:139;;16216:419;;;:::o;16641:::-;16807:4;16845:2;16834:9;16830:18;16822:26;;16894:9;16888:4;16884:20;16880:1;16869:9;16865:17;16858:47;16922:131;17048:4;16922:131;:::i;:::-;16914:139;;16641:419;;;:::o;17066:222::-;17159:4;17197:2;17186:9;17182:18;17174:26;;17210:71;17278:1;17267:9;17263:17;17254:6;17210:71;:::i;:::-;17066:222;;;;:::o;17294:553::-;17471:4;17509:3;17498:9;17494:19;17486:27;;17523:71;17591:1;17580:9;17576:17;17567:6;17523:71;:::i;:::-;17604:72;17672:2;17661:9;17657:18;17648:6;17604:72;:::i;:::-;17686;17754:2;17743:9;17739:18;17730:6;17686:72;:::i;:::-;17768;17836:2;17825:9;17821:18;17812:6;17768:72;:::i;:::-;17294:553;;;;;;;:::o;17934:98::-;17985:6;18019:5;18013:12;18003:22;;17934:98;;;:::o;18038:99::-;18090:6;18124:5;18118:12;18108:22;;18038:99;;;:::o;18143:184::-;18242:11;18276:6;18271:3;18264:19;18316:4;18311:3;18307:14;18292:29;;18143:184;;;;:::o;18333:147::-;18434:11;18471:3;18456:18;;18333:147;;;;:::o;18486:169::-;18570:11;18604:6;18599:3;18592:19;18644:4;18639:3;18635:14;18620:29;;18486:169;;;;:::o;18661:305::-;18701:3;18720:20;18738:1;18720:20;:::i;:::-;18715:25;;18754:20;18772:1;18754:20;:::i;:::-;18749:25;;18908:1;18840:66;18836:74;18833:1;18830:81;18827:107;;;18914:18;;:::i;:::-;18827:107;18958:1;18955;18951:9;18944:16;;18661:305;;;;:::o;18972:185::-;19012:1;19029:20;19047:1;19029:20;:::i;:::-;19024:25;;19063:20;19081:1;19063:20;:::i;:::-;19058:25;;19102:1;19092:35;;19107:18;;:::i;:::-;19092:35;19149:1;19146;19142:9;19137:14;;18972:185;;;;:::o;19163:348::-;19203:7;19226:20;19244:1;19226:20;:::i;:::-;19221:25;;19260:20;19278:1;19260:20;:::i;:::-;19255:25;;19448:1;19380:66;19376:74;19373:1;19370:81;19365:1;19358:9;19351:17;19347:105;19344:131;;;19455:18;;:::i;:::-;19344:131;19503:1;19500;19496:9;19485:20;;19163:348;;;;:::o;19517:191::-;19557:4;19577:20;19595:1;19577:20;:::i;:::-;19572:25;;19611:20;19629:1;19611:20;:::i;:::-;19606:25;;19650:1;19647;19644:8;19641:34;;;19655:18;;:::i;:::-;19641:34;19700:1;19697;19693:9;19685:17;;19517:191;;;;:::o;19714:96::-;19751:7;19780:24;19798:5;19780:24;:::i;:::-;19769:35;;19714:96;;;:::o;19816:90::-;19850:7;19893:5;19886:13;19879:21;19868:32;;19816:90;;;:::o;19912:126::-;19949:7;19989:42;19982:5;19978:54;19967:65;;19912:126;;;:::o;20044:77::-;20081:7;20110:5;20099:16;;20044:77;;;:::o;20127:140::-;20191:9;20224:37;20255:5;20224:37;:::i;:::-;20211:50;;20127:140;;;:::o;20273:142::-;20339:9;20372:37;20403:5;20372:37;:::i;:::-;20359:50;;20273:142;;;:::o;20421:126::-;20471:9;20504:37;20535:5;20504:37;:::i;:::-;20491:50;;20421:126;;;:::o;20553:113::-;20603:9;20636:24;20654:5;20636:24;:::i;:::-;20623:37;;20553:113;;;:::o;20672:154::-;20756:6;20751:3;20746;20733:30;20818:1;20809:6;20804:3;20800:16;20793:27;20672:154;;;:::o;20832:307::-;20900:1;20910:113;20924:6;20921:1;20918:13;20910:113;;;21009:1;21004:3;21000:11;20994:18;20990:1;20985:3;20981:11;20974:39;20946:2;20943:1;20939:10;20934:15;;20910:113;;;21041:6;21038:1;21035:13;21032:101;;;21121:1;21112:6;21107:3;21103:16;21096:27;21032:101;20881:258;20832:307;;;:::o;21145:233::-;21184:3;21207:24;21225:5;21207:24;:::i;:::-;21198:33;;21253:66;21246:5;21243:77;21240:103;;;21323:18;;:::i;:::-;21240:103;21370:1;21363:5;21359:13;21352:20;;21145:233;;;:::o;21384:180::-;21432:77;21429:1;21422:88;21529:4;21526:1;21519:15;21553:4;21550:1;21543:15;21570:180;21618:77;21615:1;21608:88;21715:4;21712:1;21705:15;21739:4;21736:1;21729:15;21756:180;21804:77;21801:1;21794:88;21901:4;21898:1;21891:15;21925:4;21922:1;21915:15;21942:117;22051:1;22048;22041:12;22065:117;22174:1;22171;22164:12;22188:117;22297:1;22294;22287:12;22311:117;22420:1;22417;22410:12;22434:117;22543:1;22540;22533:12;22557:117;22666:1;22663;22656:12;22680:102;22721:6;22772:2;22768:7;22763:2;22756:5;22752:14;22748:28;22738:38;;22680:102;;;:::o;22788:174::-;22928:26;22924:1;22916:6;22912:14;22905:50;22788:174;:::o;22968:229::-;23108:34;23104:1;23096:6;23092:14;23085:58;23177:12;23172:2;23164:6;23160:15;23153:37;22968:229;:::o;23203:225::-;23343:34;23339:1;23331:6;23327:14;23320:58;23412:8;23407:2;23399:6;23395:15;23388:33;23203:225;:::o;23434:236::-;23574:34;23570:1;23562:6;23558:14;23551:58;23643:19;23638:2;23630:6;23626:15;23619:44;23434:236;:::o;23676:182::-;23816:34;23812:1;23804:6;23800:14;23793:58;23676:182;:::o;23864:221::-;24004:34;24000:1;23992:6;23988:14;23981:58;24073:4;24068:2;24060:6;24056:15;24049:29;23864:221;:::o;24091:182::-;24231:34;24227:1;24219:6;24215:14;24208:58;24091:182;:::o;24279:180::-;24419:32;24415:1;24407:6;24403:14;24396:56;24279:180;:::o;24465:179::-;24605:31;24601:1;24593:6;24589:14;24582:55;24465:179;:::o;24650:244::-;24790:34;24786:1;24778:6;24774:14;24767:58;24859:27;24854:2;24846:6;24842:15;24835:52;24650:244;:::o;24900:122::-;24973:24;24991:5;24973:24;:::i;:::-;24966:5;24963:35;24953:63;;25012:1;25009;25002:12;24953:63;24900:122;:::o;25028:116::-;25098:21;25113:5;25098:21;:::i;:::-;25091:5;25088:32;25078:60;;25134:1;25131;25124:12;25078:60;25028:116;:::o;25150:122::-;25223:24;25241:5;25223:24;:::i;:::-;25216:5;25213:35;25203:63;;25262:1;25259;25252:12;25203:63;25150:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2393200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accGHSPPerShare()": "2541",
								"depositReward(uint256)": "infinite",
								"feeWallet()": "2624",
								"getMultiplier(uint256,uint256)": "infinite",
								"getPending(address)": "infinite",
								"getRewardBalance()": "infinite",
								"ghspToken()": "infinite",
								"harvest()": "infinite",
								"harvestFee()": "2451",
								"lastRewardBlock()": "2540",
								"nftToken()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30463",
								"rewardPerBlock()": "2452",
								"setFeeWallet(address)": "30348",
								"setHarvestFee(uint256)": "infinite",
								"stake(uint256[])": "infinite",
								"totalStakedAmount()": "2474",
								"transferOwnership(address)": "30855",
								"unstake(uint256[])": "infinite",
								"userInfo(address)": "infinite"
							},
							"internal": {
								"_getPending(address)": "infinite",
								"updateStatus()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4790,
									"end": 4822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 4809,
									"end": 4821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4809,
									"end": 4819,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 4809,
									"end": 4819,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4809,
									"end": 4819,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4809,
									"end": 4821,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4809,
									"end": 4821,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4809,
									"end": 4821,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 4809,
									"end": 4821,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4809,
									"end": 4821,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4790,
									"end": 4808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 4790,
									"end": 4808,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4790,
									"end": 4808,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4790,
									"end": 4822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4790,
									"end": 4822,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4790,
									"end": 4822,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 4790,
									"end": 4822,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 4790,
									"end": 4822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29313,
									"end": 29322,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29302,
									"end": 29322,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29302,
									"end": 29322,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29302,
									"end": 29322,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 29302,
									"end": 29322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29302,
									"end": 29322,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29302,
									"end": 29322,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29302,
									"end": 29322,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 29302,
									"end": 29322,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 29302,
									"end": 29322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29302,
									"end": 29322,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29302,
									"end": 29322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29302,
									"end": 29322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29345,
									"end": 29355,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29333,
									"end": 29355,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29333,
									"end": 29355,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29333,
									"end": 29355,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 29333,
									"end": 29355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29333,
									"end": 29355,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29333,
									"end": 29355,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29333,
									"end": 29355,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 29333,
									"end": 29355,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 29333,
									"end": 29355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29333,
									"end": 29355,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29333,
									"end": 29355,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29333,
									"end": 29355,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29383,
									"end": 29398,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29380,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 29366,
									"end": 29398,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29398,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29398,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29398,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29421,
									"end": 29431,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29418,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 29409,
									"end": 29418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29409,
									"end": 29431,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29153,
									"end": 29439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3751,
									"end": 3849,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3751,
									"end": 3849,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3804,
									"end": 3811,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3831,
									"end": 3841,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 3824,
									"end": 3841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3824,
									"end": 3841,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3751,
									"end": 3849,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3751,
									"end": 3849,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 6181,
									"end": 6372,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6181,
									"end": 6372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6255,
									"end": 6271,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6274,
									"end": 6280,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6255,
									"end": 6280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6255,
									"end": 6280,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6300,
									"end": 6308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6308,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6355,
									"end": 6363,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6345,
									"end": 6353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6324,
									"end": 6364,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6372,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6181,
									"end": 6372,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6181,
									"end": 6372,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 327,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 156,
									"end": 327,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 227,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 264,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 252,
									"end": 265,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 243,
									"end": 265,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 243,
									"end": 265,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 274,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 315,
									"end": 320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 274,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 274,
									"end": 321,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 274,
									"end": 321,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 274,
									"end": 321,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 333,
									"end": 508,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 333,
									"end": 508,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 406,
									"end": 411,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 443,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 431,
									"end": 444,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 422,
									"end": 444,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 422,
									"end": 444,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 453,
									"end": 502,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 496,
									"end": 501,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 453,
									"end": 502,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 453,
									"end": 502,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 453,
									"end": 502,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 453,
									"end": 502,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 333,
									"end": 508,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 333,
									"end": 508,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 333,
									"end": 508,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 508,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 508,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 514,
									"end": 657,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 514,
									"end": 657,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 571,
									"end": 576,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 602,
									"end": 608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 596,
									"end": 609,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 587,
									"end": 609,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 587,
									"end": 609,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 618,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 645,
									"end": 650,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 618,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 618,
									"end": 651,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 618,
									"end": 651,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 618,
									"end": 651,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 514,
									"end": 657,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 514,
									"end": 657,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 514,
									"end": 657,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 514,
									"end": 657,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 514,
									"end": 657,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 790,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 798,
									"end": 804,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 806,
									"end": 812,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 820,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 863,
									"end": 866,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 851,
									"end": 860,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 842,
									"end": 849,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 838,
									"end": 861,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 834,
									"end": 867,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 831,
									"end": 951,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 831,
									"end": 951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 831,
									"end": 951,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 870,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 870,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 870,
									"end": 949,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 870,
									"end": 949,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 870,
									"end": 949,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 831,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 831,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 990,
									"end": 991,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1015,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1087,
									"end": 1094,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1067,
									"end": 1076,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1063,
									"end": 1085,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1015,
									"end": 1095,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1015,
									"end": 1095,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1015,
									"end": 1095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1095,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1095,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 961,
									"end": 1105,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1146,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1170,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1240,
									"end": 1247,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1231,
									"end": 1237,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1220,
									"end": 1229,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1238,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1170,
									"end": 1248,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1170,
									"end": 1248,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1170,
									"end": 1248,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1248,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1248,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1297,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1379,
									"end": 1386,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1370,
									"end": 1376,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1368,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1377,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1387,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1387,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1268,
									"end": 1397,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1438,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1518,
									"end": 1525,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1509,
									"end": 1515,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1507,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1494,
									"end": 1516,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1407,
									"end": 1536,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 663,
									"end": 1543,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1630,
									"end": 1726,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1630,
									"end": 1726,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1674,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1696,
									"end": 1720,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1714,
									"end": 1719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1720,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1696,
									"end": 1720,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1696,
									"end": 1720,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1696,
									"end": 1720,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1720,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1720,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1726,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1726,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1726,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1726,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1732,
									"end": 1842,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1732,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1783,
									"end": 1790,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1812,
									"end": 1836,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1830,
									"end": 1835,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1836,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1812,
									"end": 1836,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1812,
									"end": 1836,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1812,
									"end": 1836,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 1836,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 1836,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1842,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1842,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1842,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1842,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1848,
									"end": 1960,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1848,
									"end": 1960,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1908,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1930,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1948,
									"end": 1953,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1930,
									"end": 1954,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1930,
									"end": 1954,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1930,
									"end": 1954,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1919,
									"end": 1954,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1919,
									"end": 1954,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1960,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1960,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1960,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1960,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1966,
									"end": 2092,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1966,
									"end": 2092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2003,
									"end": 2010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2043,
									"end": 2085,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2036,
									"end": 2041,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2032,
									"end": 2086,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2086,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2092,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2098,
									"end": 2175,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2098,
									"end": 2175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2135,
									"end": 2142,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2164,
									"end": 2169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2098,
									"end": 2175,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2098,
									"end": 2175,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2098,
									"end": 2175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2098,
									"end": 2175,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2304,
									"end": 2421,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2304,
									"end": 2421,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2413,
									"end": 2414,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2410,
									"end": 2411,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2415,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2549,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2427,
									"end": 2549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2500,
									"end": 2524,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2518,
									"end": 2523,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2500,
									"end": 2524,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2500,
									"end": 2524,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2500,
									"end": 2524,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2500,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2493,
									"end": 2498,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2490,
									"end": 2525,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2480,
									"end": 2543,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2480,
									"end": 2543,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2539,
									"end": 2540,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2536,
									"end": 2537,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2529,
									"end": 2541,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2480,
									"end": 2543,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2480,
									"end": 2543,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2549,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2549,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2555,
									"end": 2705,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2555,
									"end": 2705,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2642,
									"end": 2680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2674,
									"end": 2679,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2642,
									"end": 2680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2642,
									"end": 2680,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2642,
									"end": 2680,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2642,
									"end": 2680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2635,
									"end": 2640,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2632,
									"end": 2681,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2622,
									"end": 2699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2622,
									"end": 2699,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2695,
									"end": 2696,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2692,
									"end": 2693,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2697,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2622,
									"end": 2699,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2622,
									"end": 2699,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2705,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2711,
									"end": 2865,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2711,
									"end": 2865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2840,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2834,
									"end": 2839,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2840,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2800,
									"end": 2840,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2800,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2800,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2793,
									"end": 2798,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 2841,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2859,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2780,
									"end": 2859,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2855,
									"end": 2856,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2852,
									"end": 2853,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2845,
									"end": 2857,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2859,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2780,
									"end": 2859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2865,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2871,
									"end": 2993,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2871,
									"end": 2993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2962,
									"end": 2967,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2937,
									"end": 2942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2934,
									"end": 2969,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2924,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2924,
									"end": 2987,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2983,
									"end": 2984,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2973,
									"end": 2985,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2924,
									"end": 2987,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2924,
									"end": 2987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2871,
									"end": 2993,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2871,
									"end": 2993,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1101"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1098"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27968,
									"end": 35927,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220321bfe4a732571b6d5227e5d62f94896647dd37654d1daa4845e0e4a111d466064736f6c63430008070033",
									".code": [
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "8AE39CAC"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "B5962917"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "B5962917"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "D06FCBA8"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "D086C254"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "E449F341"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "F25F4B56"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "8AE39CAC"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "8DBB1E3A"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "90D49B9D"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "A9F8D181"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "4641257D"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "4641257D"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "567E98F9"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "5E42B455"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "792B55B6"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "FBF0A93"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "1959A002"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "19FCA9F6"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "1E2720FF"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "43DB3C5F"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 35927,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 35087,
											"end": 35924,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35087,
											"end": 35924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35087,
											"end": 35924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 35087,
											"end": 35924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 35087,
											"end": 35924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35087,
											"end": 35924,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 35087,
											"end": 35924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35087,
											"end": 35924,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31572,
											"end": 31580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31591,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 31564,
											"end": 31620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 31644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31631,
											"end": 32075,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 31631,
											"end": 32075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31654,
											"end": 31662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31654,
											"end": 31662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31654,
											"end": 31669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31654,
											"end": 31669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31650,
											"end": 31651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31650,
											"end": 31669,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31631,
											"end": 32075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31631,
											"end": 32075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 31631,
											"end": 32075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31732,
											"end": 31742,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31699,
											"end": 31742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31707,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1098"
										},
										{
											"begin": 31699,
											"end": 31715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31699,
											"end": 31715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31715,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 31716,
											"end": 31724,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31724,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31726,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 31699,
											"end": 31728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31699,
											"end": 31742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31742,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 31691,
											"end": 31779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31836,
											"end": 31837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31802,
											"end": 31838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31802,
											"end": 31838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31811,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 31820,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31820,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31821,
											"end": 31822,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31823,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31802,
											"end": 31824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31802,
											"end": 31838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31802,
											"end": 31838,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31794,
											"end": 31877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31912,
											"end": 31913,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31908,
											"end": 31909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31908,
											"end": 31913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31908,
											"end": 31913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31908,
											"end": 31913,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31908,
											"end": 31913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31892,
											"end": 32064,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 31892,
											"end": 32064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31919,
											"end": 31927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31919,
											"end": 31927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31919,
											"end": 31934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31919,
											"end": 31934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31915,
											"end": 31916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31915,
											"end": 31934,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31892,
											"end": 32064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31892,
											"end": 32064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 31892,
											"end": 32064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31991,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31991,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31992,
											"end": 31993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31994,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31976,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31976,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31977,
											"end": 31978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31979,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 31960,
											"end": 32048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31936,
											"end": 31940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31936,
											"end": 31940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31936,
											"end": 31940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 31936,
											"end": 31940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31936,
											"end": 31940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 31936,
											"end": 31940,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31936,
											"end": 31940,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 31936,
											"end": 31940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31936,
											"end": 31940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31936,
											"end": 31940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31936,
											"end": 31940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31892,
											"end": 32064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 31892,
											"end": 32064,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31892,
											"end": 32064,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 31892,
											"end": 32064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31892,
											"end": 32064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 31671,
											"end": 31675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 31671,
											"end": 31675,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31671,
											"end": 31675,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 31671,
											"end": 31675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31631,
											"end": 32075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 31631,
											"end": 32075,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31631,
											"end": 32075,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 31631,
											"end": 32075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31631,
											"end": 32075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32085,
											"end": 32099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 32085,
											"end": 32097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 32085,
											"end": 32099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32085,
											"end": 32099,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 32085,
											"end": 32099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32110,
											"end": 32131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32134,
											"end": 32142,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32143,
											"end": 32153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32134,
											"end": 32154,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32110,
											"end": 32154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32110,
											"end": 32154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32183,
											"end": 32184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32169,
											"end": 32173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32169,
											"end": 32180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32169,
											"end": 32180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32169,
											"end": 32180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32169,
											"end": 32184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32165,
											"end": 32361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32165,
											"end": 32361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 32165,
											"end": 32361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32201,
											"end": 32216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32219,
											"end": 32282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 32266,
											"end": 32270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32281,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32266,
											"end": 32281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 32256,
											"end": 32260,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32219,
											"end": 32251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 32235,
											"end": 32250,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32235,
											"end": 32250,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32223,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32219,
											"end": 32230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 32219,
											"end": 32234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32219,
											"end": 32251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32219,
											"end": 32251,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 32219,
											"end": 32251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 32219,
											"end": 32255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32219,
											"end": 32261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32219,
											"end": 32261,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 32219,
											"end": 32261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32219,
											"end": 32265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32282,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32219,
											"end": 32282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32219,
											"end": 32282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32219,
											"end": 32282,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 32219,
											"end": 32282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32201,
											"end": 32282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32201,
											"end": 32282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32318,
											"end": 32349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 32341,
											"end": 32348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32318,
											"end": 32322,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32318,
											"end": 32336,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32318,
											"end": 32336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32318,
											"end": 32336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32318,
											"end": 32340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 32318,
											"end": 32340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32318,
											"end": 32349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32318,
											"end": 32349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32318,
											"end": 32349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32318,
											"end": 32349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32318,
											"end": 32349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32318,
											"end": 32349,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 32318,
											"end": 32349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32297,
											"end": 32301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32297,
											"end": 32315,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32297,
											"end": 32315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32297,
											"end": 32349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32297,
											"end": 32349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32297,
											"end": 32349,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32297,
											"end": 32349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32186,
											"end": 32361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32165,
											"end": 32361,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 32165,
											"end": 32361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32371,
											"end": 32390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32393,
											"end": 32401,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32393,
											"end": 32401,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32393,
											"end": 32408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32393,
											"end": 32408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32371,
											"end": 32408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32371,
											"end": 32408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32439,
											"end": 32473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 32461,
											"end": 32472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32439,
											"end": 32456,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32439,
											"end": 32456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32439,
											"end": 32460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 32439,
											"end": 32460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32439,
											"end": 32473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32439,
											"end": 32473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32439,
											"end": 32473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32439,
											"end": 32473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32439,
											"end": 32473,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32439,
											"end": 32473,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 32439,
											"end": 32473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32419,
											"end": 32436,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32419,
											"end": 32473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32419,
											"end": 32473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32419,
											"end": 32473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32419,
											"end": 32473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 32514,
											"end": 32525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32498,
											"end": 32509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 32498,
											"end": 32513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32526,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32498,
											"end": 32526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32498,
											"end": 32526,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 32498,
											"end": 32526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32488,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32484,
											"end": 32495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32526,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 32592,
											"end": 32596,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32555,
											"end": 32587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 32571,
											"end": 32586,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32571,
											"end": 32586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32559,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32555,
											"end": 32566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 32555,
											"end": 32570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32555,
											"end": 32587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32555,
											"end": 32587,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 32555,
											"end": 32587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 32555,
											"end": 32591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32555,
											"end": 32597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32555,
											"end": 32597,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 32555,
											"end": 32597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32552,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32537,
											"end": 32552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32597,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32630,
											"end": 32645,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32627,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32608,
											"end": 32627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32645,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32660,
											"end": 32669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32656,
											"end": 32839,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 32656,
											"end": 32839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32679,
											"end": 32687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32679,
											"end": 32687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32679,
											"end": 32694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32679,
											"end": 32694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32675,
											"end": 32676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32675,
											"end": 32694,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32656,
											"end": 32839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32656,
											"end": 32839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 32656,
											"end": 32839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32741,
											"end": 32751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32725,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32726,
											"end": 32734,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32734,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32735,
											"end": 32736,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32737,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32716,
											"end": 32751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32774,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1098"
										},
										{
											"begin": 32766,
											"end": 32787,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32766,
											"end": 32787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32787,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 32788,
											"end": 32798,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32808,
											"end": 32812,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32823,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32823,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 32824,
											"end": 32825,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32826,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32766,
											"end": 32827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32696,
											"end": 32700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32696,
											"end": 32700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32696,
											"end": 32700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 32696,
											"end": 32700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32696,
											"end": 32700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 32696,
											"end": 32700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32696,
											"end": 32700,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 32696,
											"end": 32700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32696,
											"end": 32700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32696,
											"end": 32700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32696,
											"end": 32700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32656,
											"end": 32839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 32656,
											"end": 32839,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32656,
											"end": 32839,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 32656,
											"end": 32839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32656,
											"end": 32839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "PUSH",
											"source": 0,
											"value": "134B166C6094CC1CCBF1E3353CE5C3CD9FD29869051BDB999895854D77CC5EF6"
										},
										{
											"begin": 32861,
											"end": 32871,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32873,
											"end": 32881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32873,
											"end": 32881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31553,
											"end": 32890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31553,
											"end": 32890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 32890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28715,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28285,
											"end": 28318,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5131,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30433,
											"end": 30495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 30460,
											"end": 30470,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30480,
											"end": 30484,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30487,
											"end": 30494,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30433,
											"end": 30442,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 30433,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30433,
											"end": 30459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30433,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 30433,
											"end": 30459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30433,
											"end": 30495,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30433,
											"end": 30495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30433,
											"end": 30495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30433,
											"end": 30495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30433,
											"end": 30495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30433,
											"end": 30495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30433,
											"end": 30495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30433,
											"end": 30495,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 30433,
											"end": 30495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 30535,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "PUSH",
											"source": 0,
											"value": "4F7FD5C9E17300A4800FD572EA53FC291E2EE7470D73346D16B357FAEE4E7210"
										},
										{
											"begin": 30537,
											"end": 30544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30545,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 30573,
											"end": 30600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 30592,
											"end": 30599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30573,
											"end": 30587,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30573,
											"end": 30587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30573,
											"end": 30591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 30573,
											"end": 30591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30573,
											"end": 30600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30573,
											"end": 30600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30573,
											"end": 30600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30573,
											"end": 30600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30573,
											"end": 30600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30573,
											"end": 30600,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 30573,
											"end": 30600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30556,
											"end": 30570,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30556,
											"end": 30600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30556,
											"end": 30600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30556,
											"end": 30600,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30556,
											"end": 30600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30608,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28362,
											"end": 28392,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35087,
											"end": 35924,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 35087,
											"end": 35924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35126,
											"end": 35146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35149,
											"end": 35172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 35161,
											"end": 35171,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35149,
											"end": 35160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 35149,
											"end": 35172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35149,
											"end": 35172,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 35149,
											"end": 35172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35126,
											"end": 35172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35126,
											"end": 35172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35183,
											"end": 35204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35207,
											"end": 35215,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35216,
											"end": 35226,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35207,
											"end": 35227,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35183,
											"end": 35227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35183,
											"end": 35227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 35257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35260,
											"end": 35297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 35293,
											"end": 35296,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 35260,
											"end": 35288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 35277,
											"end": 35287,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35277,
											"end": 35287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35260,
											"end": 35272,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35260,
											"end": 35276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 35260,
											"end": 35276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35260,
											"end": 35288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35260,
											"end": 35288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35260,
											"end": 35288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35260,
											"end": 35288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35260,
											"end": 35288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35260,
											"end": 35288,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 35260,
											"end": 35288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35260,
											"end": 35292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 35260,
											"end": 35292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35260,
											"end": 35297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35260,
											"end": 35297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35260,
											"end": 35297,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35260,
											"end": 35297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35260,
											"end": 35297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35260,
											"end": 35297,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 35260,
											"end": 35297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 35297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 35297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35308,
											"end": 35322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35340,
											"end": 35351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35325,
											"end": 35337,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35325,
											"end": 35351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 35325,
											"end": 35351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35325,
											"end": 35351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35325,
											"end": 35351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 35325,
											"end": 35351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35325,
											"end": 35351,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 35325,
											"end": 35351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35308,
											"end": 35351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35308,
											"end": 35351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35403,
											"end": 35409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35375,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 35366,
											"end": 35385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35366,
											"end": 35385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35385,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 35394,
											"end": 35398,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 35366,
											"end": 35400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35409,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35362,
											"end": 35481,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35362,
											"end": 35481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35362,
											"end": 35481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35444,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 35435,
											"end": 35454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35435,
											"end": 35454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35454,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 35463,
											"end": 35467,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 35435,
											"end": 35469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35426,
											"end": 35469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35426,
											"end": 35469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35362,
											"end": 35481,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35362,
											"end": 35481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 35514,
											"end": 35524,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35500,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 35491,
											"end": 35513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35491,
											"end": 35513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 35491,
											"end": 35513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35533,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35491,
											"end": 35533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35491,
											"end": 35533,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 35491,
											"end": 35533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35587,
											"end": 35598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35559,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 35550,
											"end": 35569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35550,
											"end": 35569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35569,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 35578,
											"end": 35582,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35550,
											"end": 35584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 35598,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35675,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35546,
											"end": 35675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35638,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 35629,
											"end": 35648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35629,
											"end": 35648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35648,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 35657,
											"end": 35661,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 35629,
											"end": 35663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35675,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35546,
											"end": 35675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35685,
											"end": 35731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 35708,
											"end": 35717,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35708,
											"end": 35717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35708,
											"end": 35717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35708,
											"end": 35717,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35708,
											"end": 35717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35708,
											"end": 35717,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35708,
											"end": 35717,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35708,
											"end": 35717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35708,
											"end": 35717,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35708,
											"end": 35717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35708,
											"end": 35717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35719,
											"end": 35730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35685,
											"end": 35694,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 35685,
											"end": 35707,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35685,
											"end": 35707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35685,
											"end": 35707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 35685,
											"end": 35707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35685,
											"end": 35731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35685,
											"end": 35731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35685,
											"end": 35731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35685,
											"end": 35731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35685,
											"end": 35731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35685,
											"end": 35731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35685,
											"end": 35731,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 35685,
											"end": 35731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35742,
											"end": 35756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 35742,
											"end": 35754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 35742,
											"end": 35756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35742,
											"end": 35756,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 35742,
											"end": 35756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35788,
											"end": 35789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35767,
											"end": 35771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35785,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35767,
											"end": 35785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35789,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 35855,
											"end": 35859,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35818,
											"end": 35850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 35834,
											"end": 35849,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35834,
											"end": 35849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35822,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35818,
											"end": 35829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 35818,
											"end": 35833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35850,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35818,
											"end": 35850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35818,
											"end": 35850,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 35818,
											"end": 35850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 35818,
											"end": 35854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35860,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35818,
											"end": 35860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35818,
											"end": 35860,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 35818,
											"end": 35860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35804,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35815,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35800,
											"end": 35815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35860,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "PUSH",
											"source": 0,
											"value": "71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954"
										},
										{
											"begin": 35884,
											"end": 35894,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35896,
											"end": 35902,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35904,
											"end": 35915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35916,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 35115,
											"end": 35924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35115,
											"end": 35924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35115,
											"end": 35924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35115,
											"end": 35924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35087,
											"end": 35924,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28530,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30001,
											"end": 30008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30040,
											"end": 30055,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30040,
											"end": 30055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30025,
											"end": 30037,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30025,
											"end": 30055,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30025,
											"end": 30081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30025,
											"end": 30081,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30025,
											"end": 30081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 30025,
											"end": 30081,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30025,
											"end": 30081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30059,
											"end": 30076,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30059,
											"end": 30076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30059,
											"end": 30081,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30059,
											"end": 30081,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30025,
											"end": 30081,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 30025,
											"end": 30081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30021,
											"end": 30348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30021,
											"end": 30348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 30021,
											"end": 30348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30119,
											"end": 30163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 30133,
											"end": 30148,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30133,
											"end": 30148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30150,
											"end": 30162,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30119,
											"end": 30132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 30119,
											"end": 30163,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30119,
											"end": 30163,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 30119,
											"end": 30163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30178,
											"end": 30192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30195,
											"end": 30225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 30210,
											"end": 30224,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30210,
											"end": 30224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30195,
											"end": 30205,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30195,
											"end": 30209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 30195,
											"end": 30209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30195,
											"end": 30225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30195,
											"end": 30225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30195,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30195,
											"end": 30225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30195,
											"end": 30225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30195,
											"end": 30225,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 30195,
											"end": 30225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30178,
											"end": 30225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30178,
											"end": 30225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30247,
											"end": 30273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 30266,
											"end": 30272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30247,
											"end": 30261,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30247,
											"end": 30261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30247,
											"end": 30265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 30247,
											"end": 30265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30247,
											"end": 30273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30247,
											"end": 30273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30247,
											"end": 30273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30247,
											"end": 30273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30247,
											"end": 30273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30247,
											"end": 30273,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 30247,
											"end": 30273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30273,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 30240,
											"end": 30273,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30021,
											"end": 30348,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 30021,
											"end": 30348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30336,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30322,
											"end": 30336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30315,
											"end": 30336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30315,
											"end": 30336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29950,
											"end": 30355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 5131,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 5654,
											"end": 5655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 5627,
											"end": 5657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5627,
											"end": 5657,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 5627,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5562,
											"end": 5665,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 5131,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 29676,
											"end": 29687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29676,
											"end": 29693,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29676,
											"end": 29693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 29668,
											"end": 29728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29752,
											"end": 29763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29739,
											"end": 29749,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29739,
											"end": 29763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29739,
											"end": 29763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29739,
											"end": 29763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29739,
											"end": 29763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "F419800A2D8930C61D5D9CD782AA72C512CF6BE2F79DA6DB0B8855870B7269ED"
										},
										{
											"begin": 29793,
											"end": 29804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29805,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29594,
											"end": 29813,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28399,
											"end": 28428,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4957,
											"end": 4964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 4990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 4990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4998,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29893,
											"end": 29900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29920,
											"end": 29934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 29928,
											"end": 29933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29923,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 29920,
											"end": 29927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29920,
											"end": 29934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29920,
											"end": 29934,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 29920,
											"end": 29934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29913,
											"end": 29934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29913,
											"end": 29934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29942,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 5131,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29529,
											"end": 29539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29517,
											"end": 29526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29517,
											"end": 29539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29577,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29568,
											"end": 29577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29568,
											"end": 29577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29577,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29577,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29568,
											"end": 29577,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29577,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29568,
											"end": 29577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29568,
											"end": 29577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29555,
											"end": 29578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29555,
											"end": 29578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29555,
											"end": 29578,
											"name": "PUSH",
											"source": 0,
											"value": "3D21E5A2B633291BD1FF5F9C654E402D063783C95759D2EA521B31FB30E4DA41"
										},
										{
											"begin": 29555,
											"end": 29578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29555,
											"end": 29578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29555,
											"end": 29578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29555,
											"end": 29578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29555,
											"end": 29578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29555,
											"end": 29578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29555,
											"end": 29578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29555,
											"end": 29578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29555,
											"end": 29578,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29586,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28466,
											"end": 28491,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1098"
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28278,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34346,
											"end": 34353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34366,
											"end": 34381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 34396,
											"end": 34401,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 34384,
											"end": 34402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34384,
											"end": 34402,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 34384,
											"end": 34402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34366,
											"end": 34402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34366,
											"end": 34402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34435,
											"end": 34467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 34463,
											"end": 34466,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 34435,
											"end": 34458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 34447,
											"end": 34457,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34447,
											"end": 34457,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34435,
											"end": 34442,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34435,
											"end": 34446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 34435,
											"end": 34446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34435,
											"end": 34458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34435,
											"end": 34458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34435,
											"end": 34458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34435,
											"end": 34458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34435,
											"end": 34458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34435,
											"end": 34458,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 34435,
											"end": 34458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34435,
											"end": 34462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 34435,
											"end": 34462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34435,
											"end": 34467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34435,
											"end": 34467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34435,
											"end": 34467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34435,
											"end": 34467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34435,
											"end": 34467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34435,
											"end": 34467,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 34435,
											"end": 34467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34478,
											"end": 34506,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34478,
											"end": 34506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34478,
											"end": 34506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34478,
											"end": 34506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34514,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32990,
											"end": 32991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32972,
											"end": 32980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32972,
											"end": 32980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32972,
											"end": 32987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32972,
											"end": 32987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32972,
											"end": 32991,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 32964,
											"end": 33020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33035,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33031,
											"end": 33435,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 33031,
											"end": 33435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33054,
											"end": 33062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33054,
											"end": 33062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33054,
											"end": 33069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33054,
											"end": 33069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33050,
											"end": 33051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33050,
											"end": 33069,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33031,
											"end": 33435,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33031,
											"end": 33435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 33031,
											"end": 33435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33109,
											"end": 33117,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33109,
											"end": 33117,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33118,
											"end": 33119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33109,
											"end": 33120,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33165,
											"end": 33175,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33143,
											"end": 33175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33152,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33153,
											"end": 33160,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33143,
											"end": 33161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33143,
											"end": 33175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 33135,
											"end": 33237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33256,
											"end": 33265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33272,
											"end": 33273,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33268,
											"end": 33269,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 33268,
											"end": 33273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 33268,
											"end": 33273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33268,
											"end": 33273,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 33268,
											"end": 33273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33256,
											"end": 33273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33256,
											"end": 33273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33424,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 33252,
											"end": 33424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33287,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33287,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33294,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 33252,
											"end": 33424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33351,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33351,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33352,
											"end": 33353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33337,
											"end": 33338,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33354,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 33320,
											"end": 33408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33296,
											"end": 33300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33296,
											"end": 33300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33296,
											"end": 33300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 33296,
											"end": 33300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33296,
											"end": 33300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 33296,
											"end": 33300,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33296,
											"end": 33300,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 33296,
											"end": 33300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33296,
											"end": 33300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33296,
											"end": 33300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33296,
											"end": 33300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 33252,
											"end": 33424,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33424,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 33252,
											"end": 33424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33076,
											"end": 33435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33071,
											"end": 33075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33071,
											"end": 33075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33071,
											"end": 33075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 33071,
											"end": 33075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33071,
											"end": 33075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 33071,
											"end": 33075,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33071,
											"end": 33075,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 33071,
											"end": 33075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33071,
											"end": 33075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33071,
											"end": 33075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33071,
											"end": 33075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33031,
											"end": 33435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 33031,
											"end": 33435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33031,
											"end": 33435,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 33031,
											"end": 33435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33031,
											"end": 33435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33447,
											"end": 33461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 33447,
											"end": 33459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 33447,
											"end": 33461,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33447,
											"end": 33461,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 33447,
											"end": 33461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33472,
											"end": 33493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33496,
											"end": 33504,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33505,
											"end": 33515,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33496,
											"end": 33516,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33472,
											"end": 33516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33472,
											"end": 33516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33527,
											"end": 33542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33545,
											"end": 33608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 33592,
											"end": 33596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33592,
											"end": 33607,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33592,
											"end": 33607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33592,
											"end": 33607,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 33582,
											"end": 33586,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33545,
											"end": 33577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 33561,
											"end": 33576,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33561,
											"end": 33576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33549,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33545,
											"end": 33556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 33545,
											"end": 33560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33545,
											"end": 33577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33545,
											"end": 33577,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 33545,
											"end": 33577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 33545,
											"end": 33581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33545,
											"end": 33587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33545,
											"end": 33587,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 33545,
											"end": 33587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 33545,
											"end": 33591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33545,
											"end": 33608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33545,
											"end": 33608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33545,
											"end": 33608,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 33545,
											"end": 33608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33527,
											"end": 33608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33527,
											"end": 33608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33660,
											"end": 33667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33632,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 33623,
											"end": 33642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33623,
											"end": 33642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33642,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 33651,
											"end": 33655,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 33623,
											"end": 33657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33619,
											"end": 33740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33619,
											"end": 33740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 33619,
											"end": 33740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33703,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1101"
										},
										{
											"begin": 33694,
											"end": 33713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33694,
											"end": 33713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33713,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 33722,
											"end": 33726,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 33694,
											"end": 33728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33684,
											"end": 33728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33684,
											"end": 33728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33619,
											"end": 33740,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 33619,
											"end": 33740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 33794,
											"end": 33801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33789,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33771,
											"end": 33789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 33771,
											"end": 33793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33771,
											"end": 33802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33802,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33771,
											"end": 33802,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 33771,
											"end": 33802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33768,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33750,
											"end": 33768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33802,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33813,
											"end": 33832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33835,
											"end": 33843,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33835,
											"end": 33843,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33835,
											"end": 33850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33835,
											"end": 33850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33813,
											"end": 33850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33813,
											"end": 33850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33881,
											"end": 33915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 33903,
											"end": 33914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33881,
											"end": 33898,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 33881,
											"end": 33898,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33881,
											"end": 33902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 33881,
											"end": 33902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33881,
											"end": 33915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33881,
											"end": 33915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33881,
											"end": 33915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33881,
											"end": 33915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33881,
											"end": 33915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33881,
											"end": 33915,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 33881,
											"end": 33915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 33878,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 33861,
											"end": 33915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 33915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 33915,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 33915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33940,
											"end": 33968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 33956,
											"end": 33967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33940,
											"end": 33944,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33940,
											"end": 33951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33940,
											"end": 33951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33940,
											"end": 33951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33940,
											"end": 33955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 33940,
											"end": 33955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33940,
											"end": 33968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33940,
											"end": 33968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33940,
											"end": 33968,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33940,
											"end": 33968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33940,
											"end": 33968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33940,
											"end": 33968,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 33940,
											"end": 33968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33926,
											"end": 33930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33926,
											"end": 33937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33926,
											"end": 33937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33926,
											"end": 33968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33926,
											"end": 33968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33926,
											"end": 33968,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33926,
											"end": 33968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 34034,
											"end": 34038,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33997,
											"end": 34029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 34013,
											"end": 34028,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34013,
											"end": 34028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34001,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33997,
											"end": 34008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 33997,
											"end": 34012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33997,
											"end": 34029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33997,
											"end": 34029,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 33997,
											"end": 34029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 33997,
											"end": 34033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33997,
											"end": 34039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33997,
											"end": 34039,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 33997,
											"end": 34039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33979,
											"end": 33983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33979,
											"end": 33994,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33979,
											"end": 33994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33979,
											"end": 34039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33979,
											"end": 34039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33979,
											"end": 34039,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33979,
											"end": 34039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34054,
											"end": 34063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34050,
											"end": 34229,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 34050,
											"end": 34229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34069,
											"end": 34070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34069,
											"end": 34084,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34229,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 34050,
											"end": 34229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34139,
											"end": 34140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34106,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34116,
											"end": 34124,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34124,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 34125,
											"end": 34126,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34127,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34106,
											"end": 34141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34164,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1098"
										},
										{
											"begin": 34156,
											"end": 34177,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34156,
											"end": 34177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34177,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 34186,
											"end": 34190,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34193,
											"end": 34203,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34213,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34213,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 34214,
											"end": 34215,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34205,
											"end": 34216,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34086,
											"end": 34090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34086,
											"end": 34090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34086,
											"end": 34090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 34086,
											"end": 34090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34086,
											"end": 34090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 34086,
											"end": 34090,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34086,
											"end": 34090,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 34086,
											"end": 34090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34086,
											"end": 34090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34086,
											"end": 34090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34086,
											"end": 34090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 34050,
											"end": 34229,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34229,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 34050,
											"end": 34229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "PUSH",
											"source": 0,
											"value": "80CC10BF7E52583AE0A17D8DD6AB5005573B17A08091A091AF1A81205A675C91"
										},
										{
											"begin": 34253,
											"end": 34263,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34265,
											"end": 34273,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34265,
											"end": 34273,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34244,
											"end": 34274,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 32953,
											"end": 34282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32953,
											"end": 34282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32953,
											"end": 34282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 34282,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28435,
											"end": 28459,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 5131,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 5131,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 5123,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5929,
											"end": 5930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5909,
											"end": 5917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 5901,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5985,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 6004,
											"end": 6012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5985,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 5985,
											"end": 6013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5985,
											"end": 6013,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 5985,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 6021,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30616,
											"end": 31494,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 30616,
											"end": 31494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30694,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30679,
											"end": 30694,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30663,
											"end": 30675,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30663,
											"end": 30694,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30659,
											"end": 30729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 30659,
											"end": 30729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30711,
											"end": 30718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 30711,
											"end": 30718,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30659,
											"end": 30729,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 30659,
											"end": 30729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30764,
											"end": 30765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30743,
											"end": 30760,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30743,
											"end": 30760,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30743,
											"end": 30765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30739,
											"end": 30845,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30739,
											"end": 30845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 30739,
											"end": 30845,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30800,
											"end": 30812,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30782,
											"end": 30797,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30782,
											"end": 30812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30782,
											"end": 30812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30782,
											"end": 30812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30782,
											"end": 30812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30827,
											"end": 30834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 30827,
											"end": 30834,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30739,
											"end": 30845,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 30739,
											"end": 30845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30876,
											"end": 30920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 30890,
											"end": 30905,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30890,
											"end": 30905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30907,
											"end": 30919,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 30876,
											"end": 30920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30876,
											"end": 30920,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 30876,
											"end": 30920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30931,
											"end": 30945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30948,
											"end": 30978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 30963,
											"end": 30977,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30963,
											"end": 30977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30948,
											"end": 30958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30948,
											"end": 30962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 30948,
											"end": 30962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30948,
											"end": 30978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30948,
											"end": 30978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30948,
											"end": 30978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30948,
											"end": 30978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30948,
											"end": 30978,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30948,
											"end": 30978,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 30948,
											"end": 30978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30931,
											"end": 30978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30931,
											"end": 30978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31011,
											"end": 31012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30993,
											"end": 31007,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30993,
											"end": 31007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30993,
											"end": 31012,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30989,
											"end": 31092,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30989,
											"end": 31092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 30989,
											"end": 31092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31047,
											"end": 31059,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31044,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31029,
											"end": 31059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31059,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31074,
											"end": 31081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31074,
											"end": 31081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31074,
											"end": 31081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 31074,
											"end": 31081,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30989,
											"end": 31092,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 30989,
											"end": 31092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31123,
											"end": 31129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31120,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31106,
											"end": 31120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31129,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31102,
											"end": 31446,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31102,
											"end": 31446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 31102,
											"end": 31446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 31184,
											"end": 31231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 31213,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31213,
											"end": 31230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 31203,
											"end": 31207,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31184,
											"end": 31198,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31184,
											"end": 31198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31184,
											"end": 31202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31184,
											"end": 31208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31184,
											"end": 31208,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 31184,
											"end": 31208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 31184,
											"end": 31212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31231,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31184,
											"end": 31231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31184,
											"end": 31231,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 31184,
											"end": 31231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31179,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31164,
											"end": 31179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 31164,
											"end": 31183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31164,
											"end": 31232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31164,
											"end": 31232,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 31164,
											"end": 31232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31146,
											"end": 31161,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31146,
											"end": 31232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31146,
											"end": 31232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31146,
											"end": 31232,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31146,
											"end": 31232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31264,
											"end": 31265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31247,
											"end": 31261,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31247,
											"end": 31265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31265,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31102,
											"end": 31446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 31102,
											"end": 31446,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31102,
											"end": 31446,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 31102,
											"end": 31446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31315,
											"end": 31341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 31334,
											"end": 31340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31315,
											"end": 31329,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31315,
											"end": 31329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31315,
											"end": 31333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 31315,
											"end": 31333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31315,
											"end": 31341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31315,
											"end": 31341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31315,
											"end": 31341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31315,
											"end": 31341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31315,
											"end": 31341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31315,
											"end": 31341,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 31315,
											"end": 31341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31298,
											"end": 31312,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31298,
											"end": 31341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31298,
											"end": 31341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31298,
											"end": 31341,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31298,
											"end": 31341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 31394,
											"end": 31433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 31415,
											"end": 31432,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31415,
											"end": 31432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 31405,
											"end": 31409,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31394,
											"end": 31400,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31394,
											"end": 31404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31394,
											"end": 31410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31410,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31394,
											"end": 31410,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 31394,
											"end": 31410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 31394,
											"end": 31414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31394,
											"end": 31433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31394,
											"end": 31433,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 31394,
											"end": 31433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31389,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31374,
											"end": 31389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 31374,
											"end": 31393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31434,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31374,
											"end": 31434,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31374,
											"end": 31434,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 31374,
											"end": 31434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31356,
											"end": 31371,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31356,
											"end": 31434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31356,
											"end": 31434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31356,
											"end": 31434,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31356,
											"end": 31434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31102,
											"end": 31446,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 31102,
											"end": 31446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31474,
											"end": 31486,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31456,
											"end": 31471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31456,
											"end": 31486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31456,
											"end": 31486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31456,
											"end": 31486,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31456,
											"end": 31486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30616,
											"end": 31494,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 30616,
											"end": 31494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30616,
											"end": 31494,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9756,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9787,
											"end": 9788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9783,
											"end": 9784,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9776,
											"end": 9788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9776,
											"end": 9788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9796,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10155,
											"end": 10162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10182,
											"end": 10183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 10182,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10195,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9399,
											"end": 9406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9430,
											"end": 9431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9427,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9439,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9018,
											"end": 9025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9049,
											"end": 9050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9038,
											"end": 9050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9038,
											"end": 9050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9058,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3751,
											"end": 3849,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3751,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3841,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3824,
											"end": 3841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3824,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3849,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13580,
											"end": 13607,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 13580,
											"end": 13607,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13580,
											"end": 13607,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13609,
											"end": 13613,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13615,
											"end": 13617,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 13530,
											"end": 13626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13530,
											"end": 13626,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 13530,
											"end": 13626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13429,
											"end": 13634,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34526,
											"end": 35079,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 34526,
											"end": 35079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34584,
											"end": 34591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34604,
											"end": 34625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34628,
											"end": 34636,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34637,
											"end": 34642,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34628,
											"end": 34643,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34604,
											"end": 34643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34604,
											"end": 34643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34654,
											"end": 34665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34668,
											"end": 34683,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34668,
											"end": 34683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34654,
											"end": 34683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34654,
											"end": 34683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34713,
											"end": 34728,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34713,
											"end": 34728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34698,
											"end": 34710,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34698,
											"end": 34728,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34698,
											"end": 34754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34698,
											"end": 34754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34698,
											"end": 34754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 34698,
											"end": 34754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34698,
											"end": 34754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34753,
											"end": 34754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34732,
											"end": 34749,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34732,
											"end": 34749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34732,
											"end": 34754,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34732,
											"end": 34754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34698,
											"end": 34754,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 34698,
											"end": 34754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34694,
											"end": 34979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34694,
											"end": 34979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 34694,
											"end": 34979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34771,
											"end": 34789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34792,
											"end": 34836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 34806,
											"end": 34821,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34806,
											"end": 34821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34823,
											"end": 34835,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34792,
											"end": 34836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34792,
											"end": 34836,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 34792,
											"end": 34836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34771,
											"end": 34836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34771,
											"end": 34836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34851,
											"end": 34865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34868,
											"end": 34898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 34883,
											"end": 34897,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34883,
											"end": 34897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34868,
											"end": 34878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34868,
											"end": 34882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 34868,
											"end": 34882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34868,
											"end": 34898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34868,
											"end": 34898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34868,
											"end": 34898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34868,
											"end": 34898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34868,
											"end": 34898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34868,
											"end": 34898,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 34868,
											"end": 34898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34851,
											"end": 34898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34851,
											"end": 34898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34919,
											"end": 34967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 34927,
											"end": 34966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 34948,
											"end": 34965,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34948,
											"end": 34965,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 34938,
											"end": 34942,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34927,
											"end": 34933,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 34927,
											"end": 34937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34943,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34927,
											"end": 34943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34927,
											"end": 34943,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 34927,
											"end": 34943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 34927,
											"end": 34947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34927,
											"end": 34966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34927,
											"end": 34966,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 34927,
											"end": 34966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34919,
											"end": 34922,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34919,
											"end": 34926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 34919,
											"end": 34926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34919,
											"end": 34967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34919,
											"end": 34967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34919,
											"end": 34967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34919,
											"end": 34967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34919,
											"end": 34967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34919,
											"end": 34967,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 34919,
											"end": 34967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34967,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34694,
											"end": 34979,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 34694,
											"end": 34979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 35052,
											"end": 35056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35052,
											"end": 35070,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35052,
											"end": 35070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35052,
											"end": 35070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 35031,
											"end": 35035,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35031,
											"end": 35046,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35031,
											"end": 35046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35031,
											"end": 35046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 35021,
											"end": 35025,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34996,
											"end": 35016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 35012,
											"end": 35015,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35000,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34996,
											"end": 35007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 34996,
											"end": 35011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35016,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34996,
											"end": 35016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34996,
											"end": 35016,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 34996,
											"end": 35016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 34996,
											"end": 35020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34996,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35026,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34996,
											"end": 35026,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 34996,
											"end": 35026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 34996,
											"end": 35030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34996,
											"end": 35047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34996,
											"end": 35047,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 34996,
											"end": 35047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 34996,
											"end": 35051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35071,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34996,
											"end": 35071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34996,
											"end": 35071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34996,
											"end": 35071,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 34996,
											"end": 35071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34989,
											"end": 35071,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34989,
											"end": 35071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34989,
											"end": 35071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34989,
											"end": 35071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34526,
											"end": 35079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34526,
											"end": 35079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34526,
											"end": 35079,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34526,
											"end": 35079,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13244,
											"end": 13421,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13244,
											"end": 13421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13327,
											"end": 13413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 13347,
											"end": 13352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13377,
											"end": 13400,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 13377,
											"end": 13400,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13377,
											"end": 13400,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13402,
											"end": 13404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13406,
											"end": 13411,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13354,
											"end": 13412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13327,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 13327,
											"end": 13413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13327,
											"end": 13413,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 13327,
											"end": 13413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13421,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6181,
											"end": 6372,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6181,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6274,
											"end": 6280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6300,
											"end": 6308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6364,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6244,
											"end": 6372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6181,
											"end": 6372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6181,
											"end": 6372,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15549,
											"end": 16310,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 15549,
											"end": 16310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 15996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 16027,
											"end": 16031,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16012,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15999,
											"end": 16026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 15999,
											"end": 16026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 15999,
											"end": 16068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 16068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 16068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16083,
											"end": 16093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16083,
											"end": 16100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16083,
											"end": 16104,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16079,
											"end": 16303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16079,
											"end": 16303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 16079,
											"end": 16303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 16214,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 16206,
											"end": 16291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16079,
											"end": 16303,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 16079,
											"end": 16303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15619,
											"end": 16310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 16310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 16310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 16310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20172,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20204,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 20227,
											"end": 20233,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20235,
											"end": 20239,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20241,
											"end": 20242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20244,
											"end": 20256,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20204,
											"end": 20226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 20204,
											"end": 20257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20204,
											"end": 20257,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 20204,
											"end": 20257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20197,
											"end": 20257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20197,
											"end": 20257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20265,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21576,
											"end": 21588,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21609,
											"end": 21627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 21620,
											"end": 21626,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21609,
											"end": 21619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 21609,
											"end": 21627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21609,
											"end": 21627,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 21609,
											"end": 21627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 21601,
											"end": 21661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21735,
											"end": 21747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21749,
											"end": 21772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21782,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21787,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21776,
											"end": 21787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21796,
											"end": 21804,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21807,
											"end": 21811,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21734,
											"end": 21812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21734,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21734,
											"end": 21812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21734,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21823,
											"end": 22418,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21823,
											"end": 22418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 21823,
											"end": 22418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21858,
											"end": 21868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21851,
											"end": 21868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21851,
											"end": 21868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21851,
											"end": 21868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21851,
											"end": 21868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21851,
											"end": 21868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 21851,
											"end": 21868,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21823,
											"end": 22418,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 21823,
											"end": 22418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21992,
											"end": 21993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21972,
											"end": 21982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 21989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 21993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21968,
											"end": 22407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21968,
											"end": 22407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 21968,
											"end": 22407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22229,
											"end": 22246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22283,
											"end": 22293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22279,
											"end": 22281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22275,
											"end": 22294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22268,
											"end": 22312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21968,
											"end": 22407,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 21968,
											"end": 22407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22378,
											"end": 22390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 22425,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16954,
											"end": 17573,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 16954,
											"end": 17573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17014,
											"end": 17018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17276,
											"end": 17292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17303,
											"end": 17322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17325,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 17303,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17303,
											"end": 17391,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17303,
											"end": 17391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17303,
											"end": 17391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17482,
											"end": 17502,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 17470,
											"end": 17502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17470,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17534,
											"end": 17545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17545,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17561,
											"end": 17564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17549,
											"end": 17564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17564,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17564,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 17522,
											"end": 17564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17514,
											"end": 17565,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17514,
											"end": 17565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17514,
											"end": 17565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17514,
											"end": 17565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16954,
											"end": 17573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16954,
											"end": 17573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16954,
											"end": 17573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16954,
											"end": 17573,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 234,
											"end": 247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 225,
											"end": 247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 225,
											"end": 247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 318,
											"end": 886,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 318,
											"end": 886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 391,
											"end": 399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 444,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 436,
											"end": 442,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 432,
											"end": 449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 428,
											"end": 455,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 418,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 418,
											"end": 540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 459,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 459,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 459,
											"end": 538,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 459,
											"end": 538,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 459,
											"end": 538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 418,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 418,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 559,
											"end": 579,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 549,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 549,
											"end": 579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 591,
											"end": 621,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 588,
											"end": 705,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 588,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 588,
											"end": 705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 624,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 624,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 624,
											"end": 703,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 624,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 588,
											"end": 705,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 588,
											"end": 705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 738,
											"end": 742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 736,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 726,
											"end": 743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 714,
											"end": 743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 784,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 776,
											"end": 782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 789,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 762,
											"end": 770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 758,
											"end": 790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 755,
											"end": 796,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 752,
											"end": 880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 752,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 752,
											"end": 880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 799,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 799,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 799,
											"end": 878,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 878,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 799,
											"end": 878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 752,
											"end": 880,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 752,
											"end": 880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 318,
											"end": 886,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 318,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 886,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 318,
											"end": 886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 318,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 886,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 946,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 971,
											"end": 984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 962,
											"end": 984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 962,
											"end": 984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 1017,
											"end": 1022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 993,
											"end": 1023,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 993,
											"end": 1023,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 993,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1029,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1126,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 1135,
											"end": 1168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1135,
											"end": 1168,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 1135,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 1284,
											"end": 1317,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1284,
											"end": 1317,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 1284,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1440,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 1633,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1622,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 1588,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 1588,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1658,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1781,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1786,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1870,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 1751,
											"end": 1870,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 1789,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 1789,
											"end": 1868,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1789,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 1789,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 1751,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 1987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 1934,
											"end": 1998,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1998,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 1934,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 2008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 2015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2150,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2162,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2251,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 2132,
											"end": 2251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 2132,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2321,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2366,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2367,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 2334,
											"end": 2451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 2370,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 2370,
											"end": 2449,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2449,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 2370,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2451,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 2334,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 2555,
											"end": 2562,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 2483,
											"end": 2563,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2563,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 2483,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2580,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2690,
											"end": 2699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2688,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2700,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2705,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2789,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 2670,
											"end": 2789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 2708,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 2708,
											"end": 2787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2708,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 2708,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 2670,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 2906,
											"end": 2913,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2853,
											"end": 2914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2853,
											"end": 2914,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 2853,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2931,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3033,
											"end": 3042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3031,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3043,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3048,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 3241,
											"end": 3248,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3230,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3217,
											"end": 3239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3377,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3389,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3362,
											"end": 3394,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3478,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 3359,
											"end": 3478,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 3397,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 3397,
											"end": 3476,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3397,
											"end": 3476,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 3397,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3478,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 3359,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3587,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 3542,
											"end": 3606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3542,
											"end": 3606,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 3542,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3623,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3740,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3725,
											"end": 3757,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 3841,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 3722,
											"end": 3841,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 3760,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 3760,
											"end": 3839,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3760,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 3760,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 3841,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 3722,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3905,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 3950,
											"end": 3957,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 3905,
											"end": 3958,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3905,
											"end": 3958,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 3905,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3958,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4033,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 4078,
											"end": 4085,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4067,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 4033,
											"end": 4086,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4033,
											"end": 4086,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 4033,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4086,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 4103,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4109,
											"end": 4227,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 4109,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 4214,
											"end": 4219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 4196,
											"end": 4220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4196,
											"end": 4220,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 4196,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4263,
											"end": 4800,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 4263,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 4412,
											"end": 4498,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4412,
											"end": 4498,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 4412,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4498,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4522,
											"end": 4588,
											"name": "PUSH",
											"source": 1,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4514,
											"end": 4520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4589,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4673,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 4508,
											"end": 4673,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 4592,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 4592,
											"end": 4671,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4592,
											"end": 4671,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 4592,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4673,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 4508,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4708,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4696,
											"end": 4702,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4709,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4709,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 4755,
											"end": 4761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4753,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 4719,
											"end": 4762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4719,
											"end": 4762,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 4719,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4785,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4800,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4800,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4800,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4806,
											"end": 5179,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 4806,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 4970,
											"end": 4975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 4938,
											"end": 4976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4938,
											"end": 4976,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 4938,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 5073,
											"end": 5079,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5071,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 4992,
											"end": 5080,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4992,
											"end": 5080,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 4992,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5080,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5132,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5115,
											"end": 5120,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 5089,
											"end": 5141,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5089,
											"end": 5141,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 5089,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5164,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 5179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 5179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 5179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 5179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 5179,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5185,
											"end": 5344,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 5185,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 5331,
											"end": 5336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 5286,
											"end": 5337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5286,
											"end": 5337,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 5286,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5274,
											"end": 5338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5344,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5350,
											"end": 5513,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 5350,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 5500,
											"end": 5505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 5453,
											"end": 5506,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5453,
											"end": 5506,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 5453,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5350,
											"end": 5513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5350,
											"end": 5513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5350,
											"end": 5513,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5519,
											"end": 5883,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 5519,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5607,
											"end": 5610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 5668,
											"end": 5673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5635,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 5635,
											"end": 5674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5635,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 5635,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 5754,
											"end": 5760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5749,
											"end": 5752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5683,
											"end": 5761,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5683,
											"end": 5761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 5815,
											"end": 5821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5810,
											"end": 5813,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5803,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5796,
											"end": 5801,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 5770,
											"end": 5822,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5770,
											"end": 5822,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 5770,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5847,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5847,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 5847,
											"end": 5876,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5847,
											"end": 5876,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 5847,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5883,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5883,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5889,
											"end": 6255,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 5889,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6052,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 6116,
											"end": 6118,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6111,
											"end": 6114,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 6052,
											"end": 6119,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6052,
											"end": 6119,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 6052,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6045,
											"end": 6119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6045,
											"end": 6119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6128,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 6217,
											"end": 6220,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6128,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 6128,
											"end": 6221,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6128,
											"end": 6221,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 6128,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6241,
											"end": 6244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5889,
											"end": 6255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5889,
											"end": 6255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5889,
											"end": 6255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5889,
											"end": 6255,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6261,
											"end": 6627,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 6261,
											"end": 6627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 6488,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 6483,
											"end": 6486,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 6424,
											"end": 6491,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6424,
											"end": 6491,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 6424,
											"end": 6491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6491,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6500,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 6589,
											"end": 6592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6500,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 6500,
											"end": 6593,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6500,
											"end": 6593,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 6500,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6613,
											"end": 6616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6609,
											"end": 6621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6627,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6627,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6633,
											"end": 6999,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 6633,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 6860,
											"end": 6862,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6855,
											"end": 6858,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6796,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 6796,
											"end": 6863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6796,
											"end": 6863,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 6796,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 6961,
											"end": 6964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 6872,
											"end": 6965,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6872,
											"end": 6965,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 6872,
											"end": 6965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 6992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6985,
											"end": 6988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 6993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6999,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7005,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 7005,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7147,
											"end": 7150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 7232,
											"end": 7234,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7227,
											"end": 7230,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 7168,
											"end": 7235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7168,
											"end": 7235,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 7168,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 7333,
											"end": 7336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 7244,
											"end": 7337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7244,
											"end": 7337,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 7244,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7357,
											"end": 7360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7353,
											"end": 7365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7371,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7377,
											"end": 7743,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 7377,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7540,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 7604,
											"end": 7606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7599,
											"end": 7602,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 7540,
											"end": 7607,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7540,
											"end": 7607,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 7540,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7533,
											"end": 7607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7533,
											"end": 7607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7616,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 7705,
											"end": 7708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7616,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 7616,
											"end": 7709,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7616,
											"end": 7709,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 7616,
											"end": 7709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7734,
											"end": 7736,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7729,
											"end": 7732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7743,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7749,
											"end": 8115,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 7749,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 7976,
											"end": 7978,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7971,
											"end": 7974,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7912,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 7912,
											"end": 7979,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7912,
											"end": 7979,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 7912,
											"end": 7979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7905,
											"end": 7979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7905,
											"end": 7979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7988,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 8077,
											"end": 8080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7988,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 7988,
											"end": 8081,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7988,
											"end": 8081,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 7988,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8101,
											"end": 8104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8097,
											"end": 8109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7749,
											"end": 8115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7749,
											"end": 8115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7749,
											"end": 8115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7749,
											"end": 8115,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8121,
											"end": 8487,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 8121,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8263,
											"end": 8266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 8348,
											"end": 8350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8343,
											"end": 8346,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8284,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 8284,
											"end": 8351,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8284,
											"end": 8351,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 8284,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8351,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8360,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 8449,
											"end": 8452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8360,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 8360,
											"end": 8453,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8360,
											"end": 8453,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 8360,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8478,
											"end": 8480,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8473,
											"end": 8476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8462,
											"end": 8481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8462,
											"end": 8481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8487,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8487,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8493,
											"end": 8859,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 8493,
											"end": 8859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8635,
											"end": 8638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8656,
											"end": 8723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 8720,
											"end": 8722,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8656,
											"end": 8723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 8656,
											"end": 8723,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8656,
											"end": 8723,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 8656,
											"end": 8723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8649,
											"end": 8723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8649,
											"end": 8723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8732,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 8821,
											"end": 8824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8732,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 8732,
											"end": 8825,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8732,
											"end": 8825,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 8732,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8845,
											"end": 8848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8841,
											"end": 8853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8834,
											"end": 8853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8834,
											"end": 8853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8865,
											"end": 9231,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 8865,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9007,
											"end": 9010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 9092,
											"end": 9094,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 9087,
											"end": 9090,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 9028,
											"end": 9095,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9028,
											"end": 9095,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 9028,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9021,
											"end": 9095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9021,
											"end": 9095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9104,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 9193,
											"end": 9196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9104,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 9104,
											"end": 9197,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9104,
											"end": 9197,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 9104,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9222,
											"end": 9224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9217,
											"end": 9220,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9206,
											"end": 9225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9206,
											"end": 9225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 9231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 9231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 9231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 9231,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9237,
											"end": 9603,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 9237,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9379,
											"end": 9382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9400,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 9459,
											"end": 9462,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9400,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 9400,
											"end": 9467,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9400,
											"end": 9467,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 9400,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9393,
											"end": 9467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9393,
											"end": 9467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9476,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 9565,
											"end": 9568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9476,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 9476,
											"end": 9569,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9476,
											"end": 9569,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 9476,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9594,
											"end": 9596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9585,
											"end": 9597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9578,
											"end": 9597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9578,
											"end": 9597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9237,
											"end": 9603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9237,
											"end": 9603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9237,
											"end": 9603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9237,
											"end": 9603,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9609,
											"end": 9727,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 9609,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 9714,
											"end": 9719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9684,
											"end": 9721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9609,
											"end": 9727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9609,
											"end": 9727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9609,
											"end": 9727,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9733,
											"end": 10004,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 9733,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9863,
											"end": 9866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9885,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 9974,
											"end": 9977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9971,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 9885,
											"end": 9978,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9885,
											"end": 9978,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 9885,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 9998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9988,
											"end": 9998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9988,
											"end": 9998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 10004,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 10004,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 10004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 10004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 10004,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10010,
											"end": 10232,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 10010,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10141,
											"end": 10143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10130,
											"end": 10139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10154,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 10222,
											"end": 10223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10207,
											"end": 10224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10154,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 10154,
											"end": 10225,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10154,
											"end": 10225,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 10154,
											"end": 10225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10010,
											"end": 10232,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10010,
											"end": 10232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10010,
											"end": 10232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10010,
											"end": 10232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10010,
											"end": 10232,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10238,
											"end": 10680,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10238,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10387,
											"end": 10391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10427,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10414,
											"end": 10423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10402,
											"end": 10428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10402,
											"end": 10428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 10506,
											"end": 10507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10495,
											"end": 10504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10491,
											"end": 10508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10482,
											"end": 10488,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 10438,
											"end": 10509,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10438,
											"end": 10509,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 10438,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 10587,
											"end": 10589,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10576,
											"end": 10585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10563,
											"end": 10569,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 10519,
											"end": 10591,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10519,
											"end": 10591,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 10519,
											"end": 10591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10601,
											"end": 10673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 10669,
											"end": 10671,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10658,
											"end": 10667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10601,
											"end": 10673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 10601,
											"end": 10673,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10601,
											"end": 10673,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 10601,
											"end": 10673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10680,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10680,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10680,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10686,
											"end": 11189,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10686,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10867,
											"end": 10871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10905,
											"end": 10907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10894,
											"end": 10903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10882,
											"end": 10908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10882,
											"end": 10908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10918,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 10986,
											"end": 10987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10975,
											"end": 10984,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10971,
											"end": 10988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10962,
											"end": 10968,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10918,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 10918,
											"end": 10989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10918,
											"end": 10989,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 10918,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11036,
											"end": 11045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11030,
											"end": 11034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11046,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11006,
											"end": 11024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10999,
											"end": 11047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11064,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 11177,
											"end": 11181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11160,
											"end": 11166,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11064,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 11064,
											"end": 11182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11064,
											"end": 11182,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 11064,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11056,
											"end": 11182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11056,
											"end": 11182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 11189,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 11189,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 11189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 11189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 11189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 11189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 11189,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11195,
											"end": 11527,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 11195,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11316,
											"end": 11320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11354,
											"end": 11356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11343,
											"end": 11352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11339,
											"end": 11357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11331,
											"end": 11357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11331,
											"end": 11357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11367,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 11435,
											"end": 11436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11424,
											"end": 11433,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11411,
											"end": 11417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11367,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 11367,
											"end": 11438,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11367,
											"end": 11438,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 11367,
											"end": 11438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11448,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 11516,
											"end": 11518,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11505,
											"end": 11514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11501,
											"end": 11519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11492,
											"end": 11498,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11448,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 11448,
											"end": 11520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11448,
											"end": 11520,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 11448,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11195,
											"end": 11527,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11195,
											"end": 11527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11195,
											"end": 11527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11195,
											"end": 11527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11195,
											"end": 11527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11195,
											"end": 11527,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11533,
											"end": 11975,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 11533,
											"end": 11975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11682,
											"end": 11686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11720,
											"end": 11722,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11697,
											"end": 11723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11697,
											"end": 11723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 11801,
											"end": 11802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11790,
											"end": 11799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11777,
											"end": 11783,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11814,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 11882,
											"end": 11884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11871,
											"end": 11880,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11867,
											"end": 11885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11858,
											"end": 11864,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11814,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 11814,
											"end": 11886,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11814,
											"end": 11886,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 11814,
											"end": 11886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11896,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 11964,
											"end": 11966,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11953,
											"end": 11962,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11949,
											"end": 11967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11940,
											"end": 11946,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11896,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 11896,
											"end": 11968,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11896,
											"end": 11968,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 11896,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11975,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11975,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11975,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11981,
											"end": 12231,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11981,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12088,
											"end": 12092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12126,
											"end": 12128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12115,
											"end": 12124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12111,
											"end": 12129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12103,
											"end": 12129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12103,
											"end": 12129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12139,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 12221,
											"end": 12222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12210,
											"end": 12219,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12197,
											"end": 12203,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12139,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 12139,
											"end": 12224,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12139,
											"end": 12224,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 12139,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11981,
											"end": 12231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11981,
											"end": 12231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11981,
											"end": 12231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11981,
											"end": 12231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11981,
											"end": 12231,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12237,
											"end": 12491,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 12237,
											"end": 12491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12373,
											"end": 12382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12369,
											"end": 12387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12361,
											"end": 12387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12361,
											"end": 12387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12397,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 12481,
											"end": 12482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12470,
											"end": 12479,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12466,
											"end": 12483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12397,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 12397,
											"end": 12484,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12397,
											"end": 12484,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 12397,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12237,
											"end": 12491,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12237,
											"end": 12491,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12237,
											"end": 12491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12237,
											"end": 12491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12237,
											"end": 12491,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12497,
											"end": 12810,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 12497,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12610,
											"end": 12614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12648,
											"end": 12650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12637,
											"end": 12646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12633,
											"end": 12651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12625,
											"end": 12651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12625,
											"end": 12651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12697,
											"end": 12706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12691,
											"end": 12695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12707,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12672,
											"end": 12681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12668,
											"end": 12685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12661,
											"end": 12708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12725,
											"end": 12803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 12798,
											"end": 12802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12789,
											"end": 12795,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12725,
											"end": 12803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 12725,
											"end": 12803,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12725,
											"end": 12803,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 12725,
											"end": 12803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12717,
											"end": 12803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12717,
											"end": 12803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12497,
											"end": 12810,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12497,
											"end": 12810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12497,
											"end": 12810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12497,
											"end": 12810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12497,
											"end": 12810,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12816,
											"end": 13235,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 12816,
											"end": 13235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 12986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13020,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13009,
											"end": 13018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13005,
											"end": 13023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12997,
											"end": 13023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12997,
											"end": 13023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13069,
											"end": 13078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13063,
											"end": 13067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13059,
											"end": 13079,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13053,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13040,
											"end": 13057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13033,
											"end": 13080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13097,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 13223,
											"end": 13227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13097,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 13097,
											"end": 13228,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13097,
											"end": 13228,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 13097,
											"end": 13228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12816,
											"end": 13235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12816,
											"end": 13235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12816,
											"end": 13235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12816,
											"end": 13235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13241,
											"end": 13660,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 13241,
											"end": 13660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13407,
											"end": 13411,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13445,
											"end": 13447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13434,
											"end": 13443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13430,
											"end": 13448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13422,
											"end": 13448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13422,
											"end": 13448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13494,
											"end": 13503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13488,
											"end": 13492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13484,
											"end": 13504,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 13481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13469,
											"end": 13478,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13465,
											"end": 13482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13458,
											"end": 13505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13522,
											"end": 13653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 13648,
											"end": 13652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13522,
											"end": 13653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 13522,
											"end": 13653,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13522,
											"end": 13653,
											"name": "tag",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 13522,
											"end": 13653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13514,
											"end": 13653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13514,
											"end": 13653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 13660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 13660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 13660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 13660,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13666,
											"end": 14085,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 13666,
											"end": 14085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13832,
											"end": 13836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13870,
											"end": 13872,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13859,
											"end": 13868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13919,
											"end": 13928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 13929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13905,
											"end": 13906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13894,
											"end": 13903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13890,
											"end": 13907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13883,
											"end": 13930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13947,
											"end": 14078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13947,
											"end": 14078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 13947,
											"end": 14078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13947,
											"end": 14078,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 13947,
											"end": 14078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13939,
											"end": 14078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13939,
											"end": 14078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 14085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 14085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 14085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 14085,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14091,
											"end": 14510,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 14091,
											"end": 14510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14257,
											"end": 14261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14295,
											"end": 14297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14284,
											"end": 14293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14280,
											"end": 14298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14344,
											"end": 14353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14338,
											"end": 14342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14330,
											"end": 14331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14319,
											"end": 14328,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14372,
											"end": 14503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 14498,
											"end": 14502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14372,
											"end": 14503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 14372,
											"end": 14503,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14372,
											"end": 14503,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 14372,
											"end": 14503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14091,
											"end": 14510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14091,
											"end": 14510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14091,
											"end": 14510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14091,
											"end": 14510,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14516,
											"end": 14935,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 14516,
											"end": 14935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14682,
											"end": 14686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14720,
											"end": 14722,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14709,
											"end": 14718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14705,
											"end": 14723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 14723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 14723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14769,
											"end": 14778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14763,
											"end": 14767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14759,
											"end": 14779,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14744,
											"end": 14753,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 14757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 14780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14797,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 14923,
											"end": 14927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14797,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 14797,
											"end": 14928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14797,
											"end": 14928,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 14797,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14789,
											"end": 14928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14789,
											"end": 14928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14516,
											"end": 14935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14516,
											"end": 14935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14516,
											"end": 14935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14516,
											"end": 14935,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14941,
											"end": 15360,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 14941,
											"end": 15360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15107,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15145,
											"end": 15147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15134,
											"end": 15143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15130,
											"end": 15148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15122,
											"end": 15148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15122,
											"end": 15148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15194,
											"end": 15203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15184,
											"end": 15204,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15180,
											"end": 15181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15169,
											"end": 15178,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15165,
											"end": 15182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15158,
											"end": 15205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15222,
											"end": 15353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 15348,
											"end": 15352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15222,
											"end": 15353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 15222,
											"end": 15353,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15222,
											"end": 15353,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 15222,
											"end": 15353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15214,
											"end": 15353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15214,
											"end": 15353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14941,
											"end": 15360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14941,
											"end": 15360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14941,
											"end": 15360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14941,
											"end": 15360,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15366,
											"end": 15785,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 15366,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15532,
											"end": 15536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15570,
											"end": 15572,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15559,
											"end": 15568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15555,
											"end": 15573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15547,
											"end": 15573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15547,
											"end": 15573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15619,
											"end": 15628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15613,
											"end": 15617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15609,
											"end": 15629,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15605,
											"end": 15606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15594,
											"end": 15603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15590,
											"end": 15607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15583,
											"end": 15630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15647,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 15773,
											"end": 15777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15647,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 15647,
											"end": 15778,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15647,
											"end": 15778,
											"name": "tag",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 15647,
											"end": 15778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15366,
											"end": 15785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15366,
											"end": 15785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15366,
											"end": 15785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15366,
											"end": 15785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15791,
											"end": 16210,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 15791,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15957,
											"end": 15961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15995,
											"end": 15997,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15984,
											"end": 15993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15980,
											"end": 15998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15972,
											"end": 15998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15972,
											"end": 15998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16044,
											"end": 16053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16038,
											"end": 16042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16034,
											"end": 16054,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16030,
											"end": 16031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16019,
											"end": 16028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16015,
											"end": 16032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16008,
											"end": 16055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16072,
											"end": 16203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 16198,
											"end": 16202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16072,
											"end": 16203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 16072,
											"end": 16203,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16072,
											"end": 16203,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 16072,
											"end": 16203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16064,
											"end": 16203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16064,
											"end": 16203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15791,
											"end": 16210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15791,
											"end": 16210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15791,
											"end": 16210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15791,
											"end": 16210,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16216,
											"end": 16635,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 16216,
											"end": 16635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16382,
											"end": 16386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16420,
											"end": 16422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16409,
											"end": 16418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16405,
											"end": 16423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16397,
											"end": 16423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16397,
											"end": 16423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16463,
											"end": 16467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16459,
											"end": 16479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16444,
											"end": 16453,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16440,
											"end": 16457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16433,
											"end": 16480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16497,
											"end": 16628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 16623,
											"end": 16627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16497,
											"end": 16628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 16497,
											"end": 16628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16497,
											"end": 16628,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 16497,
											"end": 16628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16489,
											"end": 16628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16489,
											"end": 16628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16216,
											"end": 16635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16216,
											"end": 16635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16216,
											"end": 16635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16216,
											"end": 16635,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16641,
											"end": 17060,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 16641,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16807,
											"end": 16811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16845,
											"end": 16847,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16834,
											"end": 16843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16830,
											"end": 16848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16822,
											"end": 16848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16822,
											"end": 16848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16894,
											"end": 16903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16888,
											"end": 16892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16884,
											"end": 16904,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16880,
											"end": 16881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16869,
											"end": 16878,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16858,
											"end": 16905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16922,
											"end": 17053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 17048,
											"end": 17052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16922,
											"end": 17053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 16922,
											"end": 17053,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16922,
											"end": 17053,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 16922,
											"end": 17053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16914,
											"end": 17053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16914,
											"end": 17053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16641,
											"end": 17060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16641,
											"end": 17060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16641,
											"end": 17060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16641,
											"end": 17060,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17066,
											"end": 17288,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 17066,
											"end": 17288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17159,
											"end": 17163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17197,
											"end": 17199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17186,
											"end": 17195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17182,
											"end": 17200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17174,
											"end": 17200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17174,
											"end": 17200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17210,
											"end": 17281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 17278,
											"end": 17279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17267,
											"end": 17276,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17254,
											"end": 17260,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17210,
											"end": 17281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 17210,
											"end": 17281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17210,
											"end": 17281,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 17210,
											"end": 17281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17066,
											"end": 17288,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17066,
											"end": 17288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17066,
											"end": 17288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17066,
											"end": 17288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17066,
											"end": 17288,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17294,
											"end": 17847,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 17294,
											"end": 17847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17471,
											"end": 17475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17509,
											"end": 17512,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 17498,
											"end": 17507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17494,
											"end": 17513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17486,
											"end": 17513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17486,
											"end": 17513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17523,
											"end": 17594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 17591,
											"end": 17592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17580,
											"end": 17589,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17576,
											"end": 17593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17567,
											"end": 17573,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17523,
											"end": 17594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 17523,
											"end": 17594,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17523,
											"end": 17594,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 17523,
											"end": 17594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17604,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 17672,
											"end": 17674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17661,
											"end": 17670,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17657,
											"end": 17675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17604,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 17604,
											"end": 17676,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17604,
											"end": 17676,
											"name": "tag",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 17604,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17686,
											"end": 17758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 17754,
											"end": 17756,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17743,
											"end": 17752,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17739,
											"end": 17757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17730,
											"end": 17736,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17686,
											"end": 17758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 17686,
											"end": 17758,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17686,
											"end": 17758,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 17686,
											"end": 17758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17768,
											"end": 17840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 17836,
											"end": 17838,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17825,
											"end": 17834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17821,
											"end": 17839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17812,
											"end": 17818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17768,
											"end": 17840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 17768,
											"end": 17840,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17768,
											"end": 17840,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 17768,
											"end": 17840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17847,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17847,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17847,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17934,
											"end": 18032,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 17934,
											"end": 18032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17985,
											"end": 17991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18019,
											"end": 18024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18013,
											"end": 18025,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18003,
											"end": 18025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18003,
											"end": 18025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17934,
											"end": 18032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17934,
											"end": 18032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17934,
											"end": 18032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17934,
											"end": 18032,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18038,
											"end": 18137,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 18038,
											"end": 18137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18090,
											"end": 18096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18124,
											"end": 18129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18118,
											"end": 18130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18108,
											"end": 18130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18108,
											"end": 18130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18038,
											"end": 18137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18038,
											"end": 18137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18038,
											"end": 18137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18038,
											"end": 18137,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18143,
											"end": 18327,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 18143,
											"end": 18327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18242,
											"end": 18253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18276,
											"end": 18282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18271,
											"end": 18274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18264,
											"end": 18283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18316,
											"end": 18320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18311,
											"end": 18314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18307,
											"end": 18321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18292,
											"end": 18321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18292,
											"end": 18321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18143,
											"end": 18327,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18143,
											"end": 18327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18143,
											"end": 18327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18143,
											"end": 18327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18143,
											"end": 18327,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18333,
											"end": 18480,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 18333,
											"end": 18480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18434,
											"end": 18445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18471,
											"end": 18474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18456,
											"end": 18474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18456,
											"end": 18474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18333,
											"end": 18480,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18333,
											"end": 18480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18333,
											"end": 18480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18333,
											"end": 18480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18333,
											"end": 18480,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18486,
											"end": 18655,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 18486,
											"end": 18655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18570,
											"end": 18581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18604,
											"end": 18610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18599,
											"end": 18602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18592,
											"end": 18611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18644,
											"end": 18648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18639,
											"end": 18642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18635,
											"end": 18649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18620,
											"end": 18649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18620,
											"end": 18649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18486,
											"end": 18655,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18486,
											"end": 18655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18486,
											"end": 18655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18486,
											"end": 18655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18486,
											"end": 18655,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18661,
											"end": 18966,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 18661,
											"end": 18966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18701,
											"end": 18704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18720,
											"end": 18740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 18738,
											"end": 18739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18720,
											"end": 18740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 18720,
											"end": 18740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18720,
											"end": 18740,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 18720,
											"end": 18740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18715,
											"end": 18740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18715,
											"end": 18740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18754,
											"end": 18774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 18772,
											"end": 18773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18754,
											"end": 18774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 18754,
											"end": 18774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18754,
											"end": 18774,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 18754,
											"end": 18774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18749,
											"end": 18774,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18749,
											"end": 18774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18908,
											"end": 18909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18840,
											"end": 18906,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18836,
											"end": 18910,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18833,
											"end": 18834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18830,
											"end": 18911,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18827,
											"end": 18934,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18827,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 18827,
											"end": 18934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18914,
											"end": 18932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 18914,
											"end": 18932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 18914,
											"end": 18932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18914,
											"end": 18932,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 18914,
											"end": 18932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18827,
											"end": 18934,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 18827,
											"end": 18934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18958,
											"end": 18959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18955,
											"end": 18956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18944,
											"end": 18960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18944,
											"end": 18960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18661,
											"end": 18966,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18661,
											"end": 18966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18661,
											"end": 18966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18661,
											"end": 18966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18661,
											"end": 18966,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18972,
											"end": 19157,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 18972,
											"end": 19157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19012,
											"end": 19013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19029,
											"end": 19049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 19047,
											"end": 19048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19029,
											"end": 19049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 19029,
											"end": 19049,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19029,
											"end": 19049,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 19029,
											"end": 19049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19024,
											"end": 19049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19024,
											"end": 19049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19063,
											"end": 19083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 19081,
											"end": 19082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19063,
											"end": 19083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 19063,
											"end": 19083,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19063,
											"end": 19083,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 19063,
											"end": 19083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19058,
											"end": 19083,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19058,
											"end": 19083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19102,
											"end": 19103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 19092,
											"end": 19127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19107,
											"end": 19125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 19107,
											"end": 19125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 19107,
											"end": 19125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19107,
											"end": 19125,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 19107,
											"end": 19125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19127,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 19092,
											"end": 19127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19149,
											"end": 19150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19146,
											"end": 19147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19142,
											"end": 19151,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 19137,
											"end": 19151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19137,
											"end": 19151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18972,
											"end": 19157,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18972,
											"end": 19157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18972,
											"end": 19157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18972,
											"end": 19157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18972,
											"end": 19157,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19163,
											"end": 19511,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 19163,
											"end": 19511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19203,
											"end": 19210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 19244,
											"end": 19245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19221,
											"end": 19246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19221,
											"end": 19246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19260,
											"end": 19280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 19278,
											"end": 19279,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19260,
											"end": 19280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 19260,
											"end": 19280,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19260,
											"end": 19280,
											"name": "tag",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 19260,
											"end": 19280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19255,
											"end": 19280,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19255,
											"end": 19280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19448,
											"end": 19449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19380,
											"end": 19446,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19376,
											"end": 19450,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 19373,
											"end": 19374,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19370,
											"end": 19451,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19365,
											"end": 19366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19367,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19351,
											"end": 19368,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19347,
											"end": 19452,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19475,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 19344,
											"end": 19475,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19455,
											"end": 19473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 19455,
											"end": 19473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 19455,
											"end": 19473,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19455,
											"end": 19473,
											"name": "tag",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 19455,
											"end": 19473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19475,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 19344,
											"end": 19475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19500,
											"end": 19501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19496,
											"end": 19505,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 19485,
											"end": 19505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19485,
											"end": 19505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19163,
											"end": 19511,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19163,
											"end": 19511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19163,
											"end": 19511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19163,
											"end": 19511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19163,
											"end": 19511,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19517,
											"end": 19708,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 19517,
											"end": 19708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19557,
											"end": 19561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19577,
											"end": 19597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 19595,
											"end": 19596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19577,
											"end": 19597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 19577,
											"end": 19597,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19577,
											"end": 19597,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 19577,
											"end": 19597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19572,
											"end": 19597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19572,
											"end": 19597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19611,
											"end": 19631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 19629,
											"end": 19630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19611,
											"end": 19631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 19611,
											"end": 19631,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19611,
											"end": 19631,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 19611,
											"end": 19631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19606,
											"end": 19631,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19606,
											"end": 19631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19650,
											"end": 19651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19647,
											"end": 19648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19644,
											"end": 19652,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19641,
											"end": 19675,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19641,
											"end": 19675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 19641,
											"end": 19675,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19655,
											"end": 19673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 19655,
											"end": 19673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 19655,
											"end": 19673,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19655,
											"end": 19673,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 19655,
											"end": 19673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19641,
											"end": 19675,
											"name": "tag",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 19641,
											"end": 19675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19700,
											"end": 19701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19697,
											"end": 19698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19693,
											"end": 19702,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19517,
											"end": 19708,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19517,
											"end": 19708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19517,
											"end": 19708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19517,
											"end": 19708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19517,
											"end": 19708,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19714,
											"end": 19810,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 19714,
											"end": 19810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19751,
											"end": 19758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19780,
											"end": 19804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 19798,
											"end": 19803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19780,
											"end": 19804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 19780,
											"end": 19804,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19780,
											"end": 19804,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 19780,
											"end": 19804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19769,
											"end": 19804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19769,
											"end": 19804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19714,
											"end": 19810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19714,
											"end": 19810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19714,
											"end": 19810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19714,
											"end": 19810,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19816,
											"end": 19906,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 19816,
											"end": 19906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19850,
											"end": 19857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19893,
											"end": 19898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19886,
											"end": 19899,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19879,
											"end": 19900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19868,
											"end": 19900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19868,
											"end": 19900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19816,
											"end": 19906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19816,
											"end": 19906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19816,
											"end": 19906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19816,
											"end": 19906,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19912,
											"end": 20038,
											"name": "tag",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 19912,
											"end": 20038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19949,
											"end": 19956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19989,
											"end": 20031,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19982,
											"end": 19987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19978,
											"end": 20032,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19967,
											"end": 20032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19967,
											"end": 20032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19912,
											"end": 20038,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19912,
											"end": 20038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19912,
											"end": 20038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19912,
											"end": 20038,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20044,
											"end": 20121,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 20044,
											"end": 20121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20081,
											"end": 20088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20110,
											"end": 20115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20099,
											"end": 20115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20099,
											"end": 20115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20044,
											"end": 20121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20044,
											"end": 20121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20044,
											"end": 20121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20044,
											"end": 20121,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20127,
											"end": 20267,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 20127,
											"end": 20267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20191,
											"end": 20200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20224,
											"end": 20261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 20255,
											"end": 20260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20224,
											"end": 20261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 20224,
											"end": 20261,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20224,
											"end": 20261,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 20224,
											"end": 20261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20211,
											"end": 20261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20211,
											"end": 20261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20127,
											"end": 20267,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20127,
											"end": 20267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20127,
											"end": 20267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20127,
											"end": 20267,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20273,
											"end": 20415,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 20273,
											"end": 20415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20339,
											"end": 20348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20372,
											"end": 20409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 20403,
											"end": 20408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20372,
											"end": 20409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 20372,
											"end": 20409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20372,
											"end": 20409,
											"name": "tag",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 20372,
											"end": 20409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20359,
											"end": 20409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20359,
											"end": 20409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20273,
											"end": 20415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20273,
											"end": 20415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20273,
											"end": 20415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20273,
											"end": 20415,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20421,
											"end": 20547,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 20421,
											"end": 20547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20471,
											"end": 20480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20504,
											"end": 20541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 20535,
											"end": 20540,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20504,
											"end": 20541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 20504,
											"end": 20541,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20504,
											"end": 20541,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 20504,
											"end": 20541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20491,
											"end": 20541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20491,
											"end": 20541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20421,
											"end": 20547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20421,
											"end": 20547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20421,
											"end": 20547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20421,
											"end": 20547,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20603,
											"end": 20612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20636,
											"end": 20660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 20654,
											"end": 20659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20636,
											"end": 20660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 20636,
											"end": 20660,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20636,
											"end": 20660,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 20636,
											"end": 20660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20623,
											"end": 20660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20623,
											"end": 20660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20672,
											"end": 20826,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 20672,
											"end": 20826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20756,
											"end": 20762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20751,
											"end": 20754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20746,
											"end": 20749,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20733,
											"end": 20763,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20809,
											"end": 20815,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20804,
											"end": 20807,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20800,
											"end": 20816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20793,
											"end": 20820,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20672,
											"end": 20826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20672,
											"end": 20826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20672,
											"end": 20826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20672,
											"end": 20826,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20832,
											"end": 21139,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 20832,
											"end": 21139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20900,
											"end": 20901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20910,
											"end": 21023,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 20910,
											"end": 21023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20924,
											"end": 20930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20921,
											"end": 20922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20918,
											"end": 20931,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20910,
											"end": 21023,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20910,
											"end": 21023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 20910,
											"end": 21023,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21009,
											"end": 21010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21004,
											"end": 21007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21000,
											"end": 21011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20994,
											"end": 21012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20990,
											"end": 20991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20985,
											"end": 20988,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20981,
											"end": 20992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20974,
											"end": 21013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20946,
											"end": 20948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20943,
											"end": 20944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20939,
											"end": 20949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20934,
											"end": 20949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20934,
											"end": 20949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20910,
											"end": 21023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 20910,
											"end": 21023,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20910,
											"end": 21023,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 20910,
											"end": 21023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21041,
											"end": 21047,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21038,
											"end": 21039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21035,
											"end": 21048,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 21032,
											"end": 21133,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21032,
											"end": 21133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 21032,
											"end": 21133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21121,
											"end": 21122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21112,
											"end": 21118,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21107,
											"end": 21110,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21103,
											"end": 21119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21032,
											"end": 21133,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 21032,
											"end": 21133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20881,
											"end": 21139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20832,
											"end": 21139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20832,
											"end": 21139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20832,
											"end": 21139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20832,
											"end": 21139,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21145,
											"end": 21378,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 21145,
											"end": 21378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21184,
											"end": 21187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21207,
											"end": 21231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 21225,
											"end": 21230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21207,
											"end": 21231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 21207,
											"end": 21231,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21207,
											"end": 21231,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 21207,
											"end": 21231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21198,
											"end": 21231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21198,
											"end": 21231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21253,
											"end": 21319,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21246,
											"end": 21251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21243,
											"end": 21320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21240,
											"end": 21343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21240,
											"end": 21343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 21240,
											"end": 21343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21323,
											"end": 21341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 21323,
											"end": 21341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 21323,
											"end": 21341,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21323,
											"end": 21341,
											"name": "tag",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 21323,
											"end": 21341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21240,
											"end": 21343,
											"name": "tag",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 21240,
											"end": 21343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21370,
											"end": 21371,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21363,
											"end": 21368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21359,
											"end": 21372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21352,
											"end": 21372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21352,
											"end": 21372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21145,
											"end": 21378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21145,
											"end": 21378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21145,
											"end": 21378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21145,
											"end": 21378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21384,
											"end": 21564,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 21384,
											"end": 21564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21432,
											"end": 21509,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21429,
											"end": 21430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21422,
											"end": 21510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21529,
											"end": 21533,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 21526,
											"end": 21527,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21519,
											"end": 21534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21553,
											"end": 21557,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21550,
											"end": 21551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21543,
											"end": 21558,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21570,
											"end": 21750,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 21570,
											"end": 21750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21618,
											"end": 21695,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21615,
											"end": 21616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21608,
											"end": 21696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21715,
											"end": 21719,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 21712,
											"end": 21713,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21705,
											"end": 21720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21739,
											"end": 21743,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21736,
											"end": 21737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21729,
											"end": 21744,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21756,
											"end": 21936,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 21756,
											"end": 21936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21804,
											"end": 21881,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21801,
											"end": 21802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21794,
											"end": 21882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21901,
											"end": 21905,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 21898,
											"end": 21899,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21891,
											"end": 21906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21925,
											"end": 21929,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21922,
											"end": 21923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21915,
											"end": 21930,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21942,
											"end": 22059,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 21942,
											"end": 22059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22051,
											"end": 22052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22048,
											"end": 22049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22041,
											"end": 22053,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22065,
											"end": 22182,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 22065,
											"end": 22182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 22175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22171,
											"end": 22172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22164,
											"end": 22176,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22188,
											"end": 22305,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 22188,
											"end": 22305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22297,
											"end": 22298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22294,
											"end": 22295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22287,
											"end": 22299,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22311,
											"end": 22428,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 22311,
											"end": 22428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22420,
											"end": 22421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22417,
											"end": 22418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22410,
											"end": 22422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22434,
											"end": 22551,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 22434,
											"end": 22551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22543,
											"end": 22544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22540,
											"end": 22541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22533,
											"end": 22545,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22557,
											"end": 22674,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 22557,
											"end": 22674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22666,
											"end": 22667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22663,
											"end": 22664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22656,
											"end": 22668,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22680,
											"end": 22782,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 22680,
											"end": 22782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22721,
											"end": 22727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22772,
											"end": 22774,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 22768,
											"end": 22775,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 22763,
											"end": 22765,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 22756,
											"end": 22761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22752,
											"end": 22766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22748,
											"end": 22776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22738,
											"end": 22776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22738,
											"end": 22776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22680,
											"end": 22782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22680,
											"end": 22782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22680,
											"end": 22782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22680,
											"end": 22782,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22788,
											"end": 22962,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 22788,
											"end": 22962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22928,
											"end": 22954,
											"name": "PUSH",
											"source": 1,
											"value": "4E4654205374616B696E673A20456D7074792041727261790000000000000000"
										},
										{
											"begin": 22924,
											"end": 22925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22916,
											"end": 22922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22912,
											"end": 22926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22905,
											"end": 22955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22788,
											"end": 22962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22788,
											"end": 22962,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22968,
											"end": 23197,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 22968,
											"end": 23197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23108,
											"end": 23142,
											"name": "PUSH",
											"source": 1,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 23104,
											"end": 23105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23096,
											"end": 23102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23092,
											"end": 23106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23085,
											"end": 23143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23177,
											"end": 23189,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 23172,
											"end": 23174,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23164,
											"end": 23170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23160,
											"end": 23175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23153,
											"end": 23190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22968,
											"end": 23197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22968,
											"end": 23197,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23203,
											"end": 23428,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 23203,
											"end": 23428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23343,
											"end": 23377,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 23339,
											"end": 23340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23331,
											"end": 23337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23327,
											"end": 23341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23320,
											"end": 23378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23412,
											"end": 23420,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23407,
											"end": 23409,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23399,
											"end": 23405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23395,
											"end": 23410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23388,
											"end": 23421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23203,
											"end": 23428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23203,
											"end": 23428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23434,
											"end": 23670,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 23434,
											"end": 23670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23574,
											"end": 23608,
											"name": "PUSH",
											"source": 1,
											"value": "4E4654205374616B696E673A206475706C696361746520746F6B656E20696473"
										},
										{
											"begin": 23570,
											"end": 23571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23562,
											"end": 23568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23558,
											"end": 23572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23551,
											"end": 23609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23643,
											"end": 23662,
											"name": "PUSH",
											"source": 1,
											"value": "20696E20696E70757420706172616D732E000000000000000000000000000000"
										},
										{
											"begin": 23638,
											"end": 23640,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23630,
											"end": 23636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23626,
											"end": 23641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23619,
											"end": 23663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23434,
											"end": 23670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23434,
											"end": 23670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23676,
											"end": 23858,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 23676,
											"end": 23858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23816,
											"end": 23850,
											"name": "PUSH",
											"source": 1,
											"value": "4E4654205374616B696E673A206E6F74206F776E6572206F6620746F6B656E2E"
										},
										{
											"begin": 23812,
											"end": 23813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23804,
											"end": 23810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23800,
											"end": 23814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23793,
											"end": 23851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23676,
											"end": 23858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23676,
											"end": 23858,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23864,
											"end": 24085,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 23864,
											"end": 24085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24004,
											"end": 24038,
											"name": "PUSH",
											"source": 1,
											"value": "4E4654205374616B696E673A20746F6B656E20616C7265616479207374616B65"
										},
										{
											"begin": 24000,
											"end": 24001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23992,
											"end": 23998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23988,
											"end": 24002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23981,
											"end": 24039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24073,
											"end": 24077,
											"name": "PUSH",
											"source": 1,
											"value": "642E000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24068,
											"end": 24070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24060,
											"end": 24066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24056,
											"end": 24071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24049,
											"end": 24078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23864,
											"end": 24085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23864,
											"end": 24085,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24091,
											"end": 24273,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 24091,
											"end": 24273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24231,
											"end": 24265,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 24227,
											"end": 24228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24219,
											"end": 24225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24215,
											"end": 24229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24208,
											"end": 24266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24091,
											"end": 24273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24091,
											"end": 24273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24279,
											"end": 24459,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 24279,
											"end": 24459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24419,
											"end": 24451,
											"name": "PUSH",
											"source": 1,
											"value": "736574486172766573744665653A2066656550657263656E74203E2034300000"
										},
										{
											"begin": 24415,
											"end": 24416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24407,
											"end": 24413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24403,
											"end": 24417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24396,
											"end": 24452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24279,
											"end": 24459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24279,
											"end": 24459,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24465,
											"end": 24644,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 24465,
											"end": 24644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24605,
											"end": 24636,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 24601,
											"end": 24602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24593,
											"end": 24599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24589,
											"end": 24603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24465,
											"end": 24644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24465,
											"end": 24644,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24650,
											"end": 24894,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 24650,
											"end": 24894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24790,
											"end": 24824,
											"name": "PUSH",
											"source": 1,
											"value": "4E667420556E7374616B696E673A20746F6B656E206E6F74207374616B656420"
										},
										{
											"begin": 24786,
											"end": 24787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24778,
											"end": 24784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24774,
											"end": 24788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24767,
											"end": 24825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24859,
											"end": 24886,
											"name": "PUSH",
											"source": 1,
											"value": "6F7220696E636F727265637420746F6B656E206F776E65722E00000000000000"
										},
										{
											"begin": 24854,
											"end": 24856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24846,
											"end": 24852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24842,
											"end": 24857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24835,
											"end": 24887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24650,
											"end": 24894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24650,
											"end": 24894,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24900,
											"end": 25022,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 24900,
											"end": 25022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24973,
											"end": 24997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 24991,
											"end": 24996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24973,
											"end": 24997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 24973,
											"end": 24997,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24973,
											"end": 24997,
											"name": "tag",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 24973,
											"end": 24997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24966,
											"end": 24971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24963,
											"end": 24998,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24953,
											"end": 25016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 24953,
											"end": 25016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25012,
											"end": 25013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25009,
											"end": 25010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25002,
											"end": 25014,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24953,
											"end": 25016,
											"name": "tag",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 24953,
											"end": 25016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24900,
											"end": 25022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24900,
											"end": 25022,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25028,
											"end": 25144,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 25028,
											"end": 25144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25098,
											"end": 25119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 25113,
											"end": 25118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25098,
											"end": 25119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 25098,
											"end": 25119,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25098,
											"end": 25119,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 25098,
											"end": 25119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25091,
											"end": 25096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25088,
											"end": 25120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 25078,
											"end": 25138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 25078,
											"end": 25138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25134,
											"end": 25135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25131,
											"end": 25132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25124,
											"end": 25136,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25078,
											"end": 25138,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 25078,
											"end": 25138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25028,
											"end": 25144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25028,
											"end": 25144,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25150,
											"end": 25272,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 25150,
											"end": 25272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25223,
											"end": 25247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 25241,
											"end": 25246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25223,
											"end": 25247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 25223,
											"end": 25247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25223,
											"end": 25247,
											"name": "tag",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 25223,
											"end": 25247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25216,
											"end": 25221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25213,
											"end": 25248,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 25203,
											"end": 25266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 25203,
											"end": 25266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25262,
											"end": 25263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25259,
											"end": 25260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25252,
											"end": 25264,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25203,
											"end": 25266,
											"name": "tag",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 25203,
											"end": 25266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25150,
											"end": 25272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25150,
											"end": 25272,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"accGHSPPerShare()": "43db3c5f",
							"depositReward(uint256)": "1e2720ff",
							"feeWallet()": "f25f4b56",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"getPending(address)": "d086c254",
							"getRewardBalance()": "5e42b455",
							"ghspToken()": "19fca9f6",
							"harvest()": "4641257d",
							"harvestFee()": "b5962917",
							"lastRewardBlock()": "a9f8d181",
							"nftToken()": "d06fcba8",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardPerBlock()": "8ae39cac",
							"setFeeWallet(address)": "90d49b9d",
							"setHarvestFee(uint256)": "792b55b6",
							"stake(uint256[])": "0fbf0a93",
							"totalStakedAmount()": "567e98f9",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256[])": "e449f341",
							"userInfo(address)": "1959a002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nftToken\",\"type\":\"address\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_ghspToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDays\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"AddUnStakeFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"harvestFee\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_feeWallet\",\"type\":\"address\"}],\"name\":\"SetFeeWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_harvestFee\",\"type\":\"uint256\"}],\"name\":\"SetHarvestFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"}],\"name\":\"UnStaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accGHSPPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getPending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ghspToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRewardBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftToken\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeWallet\",\"type\":\"address\"}],\"name\":\"setFeeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setHarvestFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStakedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ghosper-NFT-Staking-MasterChef.sol\":\"NftStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xf4144d31b8f8091fc3acaf31ac6e8a6c919488f9a72d3de8e3900a07b285ad37\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://70d1eff3ae068549ea5c7747876d4f1164bffbbe3500d6e6970abc3cdeaf62fb\",\"dweb:/ipfs/QmbT99ZghqPq5qGxHVy9u1dpXXf8JPSkAqvyMK5pQPwZu6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ghosper-NFT-Staking-MasterChef.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xf4144d31b8f8091fc3acaf31ac6e8a6c919488f9a72d3de8e3900a07b285ad37\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://70d1eff3ae068549ea5c7747876d4f1164bffbbe3500d6e6970abc3cdeaf62fb\",\"dweb:/ipfs/QmbT99ZghqPq5qGxHVy9u1dpXXf8JPSkAqvyMK5pQPwZu6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ghosper-NFT-Staking-MasterChef.sol\":13152:16313  library SafeBEP20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":13152:16313  library SafeBEP20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202d772eb0e3fb28c8cae63900acc9402eeb96027dd710dab29955bab7bdbceb2d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202d772eb0e3fb28c8cae63900acc9402eeb96027dd710dab29955bab7bdbceb2d64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D PUSH24 0x2EB0E3FB28C8CAE63900ACC9402EEB96027DD710DAB29955 0xBA 0xB7 0xBD 0xBC 0xEB 0x2D PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "13152:3161:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202d772eb0e3fb28c8cae63900acc9402eeb96027dd710dab29955bab7bdbceb2d64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D PUSH24 0x2EB0E3FB28C8CAE63900ACC9402EEB96027DD710DAB29955 0xBA 0xB7 0xBD 0xBC 0xEB 0x2D PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "13152:3161:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13152,
									"end": 16313,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d772eb0e3fb28c8cae63900acc9402eeb96027dd710dab29955bab7bdbceb2d64736f6c63430008070033",
									".code": [
										{
											"begin": 13152,
											"end": 16313,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 16313,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ghosper-NFT-Staking-MasterChef.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xf4144d31b8f8091fc3acaf31ac6e8a6c919488f9a72d3de8e3900a07b285ad37\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://70d1eff3ae068549ea5c7747876d4f1164bffbbe3500d6e6970abc3cdeaf62fb\",\"dweb:/ipfs/QmbT99ZghqPq5qGxHVy9u1dpXXf8JPSkAqvyMK5pQPwZu6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ghosper-NFT-Staking-MasterChef.sol\":6609:13121  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ghosper-NFT-Staking-MasterChef.sol\":6609:13121  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bd72b73140bddf2fce9db04848ddece359c37757e0d99e06c34c8dc92964eb6164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd72b73140bddf2fce9db04848ddece359c37757e0d99e06c34c8dc92964eb6164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD PUSH19 0xB73140BDDF2FCE9DB04848DDECE359C37757E0 0xD9 SWAP15 MOD 0xC3 0x4C DUP14 0xC9 0x29 PUSH5 0xEB6164736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "6609:6512:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd72b73140bddf2fce9db04848ddece359c37757e0d99e06c34c8dc92964eb6164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD PUSH19 0xB73140BDDF2FCE9DB04848DDECE359C37757E0 0xD9 SWAP15 MOD 0xC3 0x4C DUP14 0xC9 0x29 PUSH5 0xEB6164736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "6609:6512:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6609,
									"end": 13121,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd72b73140bddf2fce9db04848ddece359c37757e0d99e06c34c8dc92964eb6164736f6c63430008070033",
									".code": [
										{
											"begin": 6609,
											"end": 13121,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 13121,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ghosper-NFT-Staking-MasterChef.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ghosper-NFT-Staking-MasterChef.sol\":{\"keccak256\":\"0xf4144d31b8f8091fc3acaf31ac6e8a6c919488f9a72d3de8e3900a07b285ad37\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://70d1eff3ae068549ea5c7747876d4f1164bffbbe3500d6e6970abc3cdeaf62fb\",\"dweb:/ipfs/QmbT99ZghqPq5qGxHVy9u1dpXXf8JPSkAqvyMK5pQPwZu6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Ghosper-NFT-Staking-MasterChef.sol": {
				"ast": {
					"absolutePath": "Ghosper-NFT-Staking-MasterChef.sol",
					"exportedSymbols": {
						"Address": [
							951
						],
						"Context": [
							121
						],
						"IBEP20": [
							100
						],
						"IERC165": [
							962
						],
						"IERC721": [
							1076
						],
						"NftStaking": [
							2056
						],
						"Ownable": [
							224
						],
						"SafeBEP20": [
							749
						],
						"SafeMath": [
							535
						]
					},
					"id": 2057,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IBEP20",
							"nameLocation": "79:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "93:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "176:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "213:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:9:0"
									},
									"scope": 100,
									"src": "167:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "230:53:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "298:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "332:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "332:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:7:0"
									},
									"scope": 100,
									"src": "289:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "347:51:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "413:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "419:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "445:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:15:0"
									},
									"scope": 100,
									"src": "404:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "468:49:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "532:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "536:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "562:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "562:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:15:0"
									},
									"scope": 100,
									"src": "523:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "585:54:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "654:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "688:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:9:0"
									},
									"scope": 100,
									"src": "645:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "705:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "794:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "812:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "804:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:17:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "844:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:9:0"
									},
									"scope": 100,
									"src": "785:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "861:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1091:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1108:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1100:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1127:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1119:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1099:35:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1153:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1153:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:6:0"
									},
									"scope": 100,
									"src": "1082:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1167:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1452:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1470:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1462:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1486:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1478:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:33:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1518:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1517:9:0"
									},
									"scope": 100,
									"src": "1443:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1535:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2205:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2238:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2230:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:33:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2264:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2263:6:0"
									},
									"scope": 100,
									"src": "2196:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2278:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2597:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2618:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2610:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2634:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2626:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2653:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2645:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:51:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2679:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2679:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:6:0"
									},
									"scope": 100,
									"src": "2588:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2693:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 90,
									"name": "Transfer",
									"nameLocation": "2868:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2893:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2877:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2915:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2899:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2927:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2919:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:57:0"
									},
									"src": "2862:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2942:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 99,
									"name": "Approval",
									"nameLocation": "3105:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3130:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3114:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3153:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3137:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3170:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3162:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3113:63:0"
									},
									"src": "3099:78:0"
								}
							],
							"scope": 2057,
							"src": "69:3111:0",
							"usedErrors": []
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3184:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3211:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "Context",
							"nameLocation": "3736:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "3813:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3831:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3831:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "3824:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "3760:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3770:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "3804:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3803:9:0"
									},
									"scope": 121,
									"src": "3751:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "3924:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3942:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "3942:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "3935:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "3866:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3874:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3908:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3908:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:16:0"
									},
									"scope": 121,
									"src": "3857:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2057,
							"src": "3718:243:0",
							"usedErrors": []
						},
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3965:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 124,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "4528:7:0"
									},
									"id": 125,
									"nodeType": "InheritanceSpecifier",
									"src": "4528:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "3992:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 224,
							"linearizedBaseContracts": [
								224,
								121
							],
							"name": "Ownable",
							"nameLocation": "4517:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 127,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "4559:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 224,
									"src": "4543:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 126,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4543:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 133,
									"name": "OwnershipTransferred",
									"nameLocation": "4580:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "4617:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4601:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4648:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4632:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4600:57:0"
									},
									"src": "4574:84:0"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "4779:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 138,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "4809:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4809:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 137,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4790:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4790:32:0"
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4666:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 143,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4776:2:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4779:0:0"
									},
									"scope": 224,
									"src": "4765:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "4966:32:0",
										"statements": [
											{
												"expression": {
													"id": 149,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "4984:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 148,
												"id": 150,
												"nodeType": "Return",
												"src": "4977:13:0"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "4838:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "4920:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4925:2:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4957:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4956:9:0"
									},
									"scope": 224,
									"src": "4911:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "5112:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 156,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "5131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5131:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 158,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5142:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5131:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5156:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5123:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "5123:68:0"
											},
											{
												"id": 164,
												"nodeType": "PlaceholderStatement",
												"src": "5202:1:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "5006:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 166,
									"name": "onlyOwner",
									"nameLocation": "5100:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5109:2:0"
									},
									"src": "5091:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "5616:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5654:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5646:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 173,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5646:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5646:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 172,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "5627:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5627:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "5627:30:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5219:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 170,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 169,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "5606:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5606:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "5571:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5588:2:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5616:0:0"
									},
									"scope": 224,
									"src": "5562:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "5890:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 189,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "5909:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5929:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5921:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 190,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5921:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5921:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5909:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5933:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5901:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "5901:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 199,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "6004:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 198,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "5985:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5985:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "5985:28:0"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "5673:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 185,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "5880:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5880:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "5829:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "5855:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5847:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5846:18:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5890:0:0"
									},
									"scope": 224,
									"src": "5820:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "6244:128:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "6263:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "6255:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6255:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 212,
												"initialValue": {
													"id": 211,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "6274:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6255:25:0"
											},
											{
												"expression": {
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 213,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "6291:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 214,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "6300:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6291:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6291:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 218,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6345:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 219,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "6355:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "6324:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6324:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "EmitStatement",
												"src": "6319:45:0"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "6029:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "6190:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6217:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6209:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6208:18:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6244:0:0"
									},
									"scope": 224,
									"src": "6181:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2057,
							"src": "4499:1876:0",
							"usedErrors": []
						},
						{
							"id": 225,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6379:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "6406:201:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 535,
							"linearizedBaseContracts": [
								535
							],
							"name": "SafeMath",
							"nameLocation": "6617:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "6850:146:0",
										"statements": [
											{
												"id": 256,
												"nodeType": "UncheckedBlock",
												"src": "6861:128:0",
												"statements": [
													{
														"assignments": [
															239
														],
														"declarations": [
															{
																"constant": false,
																"id": 239,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "6894:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 256,
																"src": "6886:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 238,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6886:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 243,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 240,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "6898:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 241,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "6902:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6898:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6886:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 244,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "6922:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 245,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "6926:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6922:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 251,
														"nodeType": "IfStatement",
														"src": "6918:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6937:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6944:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 249,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6936:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 237,
															"id": 250,
															"nodeType": "Return",
															"src": "6929:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6969:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 253,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6975:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 254,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6968:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 237,
														"id": 255,
														"nodeType": "Return",
														"src": "6961:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6633:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "6783:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6798:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6790:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6809:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6801:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6789:22:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6835:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6835:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6841:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6834:15:0"
									},
									"scope": 535,
									"src": "6774:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "7225:118:0",
										"statements": [
											{
												"id": 284,
												"nodeType": "UncheckedBlock",
												"src": "7236:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "7265:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 271,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "7269:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7265:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 277,
														"nodeType": "IfStatement",
														"src": "7261:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7280:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7287:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 275,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7279:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 269,
															"id": 276,
															"nodeType": "Return",
															"src": "7272:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7312:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 279,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "7318:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 280,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "7322:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7318:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 282,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7311:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 269,
														"id": 283,
														"nodeType": "Return",
														"src": "7304:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "7004:139:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "7158:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7173:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7165:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7184:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7176:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7164:22:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7210:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7210:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7216:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:15:0"
									},
									"scope": 535,
									"src": "7149:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "7574:427:0",
										"statements": [
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "7585:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 298,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "7847:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7852:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7847:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 305,
														"nodeType": "IfStatement",
														"src": "7843:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7863:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7869:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 303,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7862:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 297,
															"id": 304,
															"nodeType": "Return",
															"src": "7855:16:0"
														}
													},
													{
														"assignments": [
															307
														],
														"declarations": [
															{
																"constant": false,
																"id": 307,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "7894:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 326,
																"src": "7886:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 306,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7886:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 311,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 308,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "7898:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 309,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "7902:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7898:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7886:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 312,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "7922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 313,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "7926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7922:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 315,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "7931:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7922:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 321,
														"nodeType": "IfStatement",
														"src": "7918:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7942:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7949:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 319,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7941:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 297,
															"id": 320,
															"nodeType": "Return",
															"src": "7934:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7974:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 323,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "7980:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 324,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7973:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 297,
														"id": 325,
														"nodeType": "Return",
														"src": "7966:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7351:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "7507:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "7514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7533:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "7525:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7513:22:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "7559:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "7565:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:15:0"
									},
									"scope": 535,
									"src": "7498:503:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "8233:119:0",
										"statements": [
											{
												"id": 354,
												"nodeType": "UncheckedBlock",
												"src": "8244:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 340,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "8273:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8273:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 347,
														"nodeType": "IfStatement",
														"src": "8269:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8289:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8296:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 345,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8288:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 339,
															"id": 346,
															"nodeType": "Return",
															"src": "8281:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8321:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 349,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "8327:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 350,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "8331:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8327:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 352,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8320:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 339,
														"id": 353,
														"nodeType": "Return",
														"src": "8313:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "8009:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "8166:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8181:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "8173:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8192:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "8184:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8172:22:0"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "8218:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8218:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "8224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8217:15:0"
									},
									"scope": 535,
									"src": "8157:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "8594:119:0",
										"statements": [
											{
												"id": 382,
												"nodeType": "UncheckedBlock",
												"src": "8605:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 368,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "8634:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8639:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8634:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 375,
														"nodeType": "IfStatement",
														"src": "8630:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8650:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8657:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 373,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8649:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 367,
															"id": 374,
															"nodeType": "Return",
															"src": "8642:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8682:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 377,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "8688:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 378,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "8692:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8688:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 380,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8681:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 367,
														"id": 381,
														"nodeType": "Return",
														"src": "8674:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "8360:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "8527:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8542:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8534:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8553:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8545:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8533:22:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8579:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8579:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8585:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8578:15:0"
									},
									"scope": 535,
									"src": "8518:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "9027:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 394,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "9045:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 395,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "9049:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9045:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 393,
												"id": 397,
												"nodeType": "Return",
												"src": "9038:12:0"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "8721:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8969:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8981:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "8973:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8992:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "8984:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8972:22:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9018:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9017:9:0"
									},
									"scope": 535,
									"src": "8960:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "9408:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 409,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "9426:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 410,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "9430:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9426:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 412,
												"nodeType": "Return",
												"src": "9419:12:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "9066:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9350:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9362:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "9354:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9373:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "9365:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9353:22:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "9399:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9398:9:0"
									},
									"scope": 535,
									"src": "9341:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "9765:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 424,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "9783:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 425,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "9787:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9783:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 423,
												"id": 427,
												"nodeType": "Return",
												"src": "9776:12:0"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "9447:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "9707:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9719:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "9711:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9730:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "9722:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9710:22:0"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "9756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9755:9:0"
									},
									"scope": 535,
									"src": "9698:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "10164:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "10182:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 440,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "10186:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10182:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 438,
												"id": 442,
												"nodeType": "Return",
												"src": "10175:12:0"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "9804:287:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "10106:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10118:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10110:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10109:22:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10154:9:0"
									},
									"scope": 535,
									"src": "10097:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "10729:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 454,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "10747:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 455,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "10751:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10747:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 457,
												"nodeType": "Return",
												"src": "10740:12:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "10203:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "10671:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10683:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "10675:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10694:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "10686:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10674:22:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "10720:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10719:9:0"
									},
									"scope": 535,
									"src": "10662:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "11368:111:0",
										"statements": [
											{
												"id": 482,
												"nodeType": "UncheckedBlock",
												"src": "11379:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 472,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "11412:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 473,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "11417:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11412:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 475,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "11420:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 471,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "11404:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11404:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 477,
														"nodeType": "ExpressionStatement",
														"src": "11404:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 478,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "11455:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 479,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "11459:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11455:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 470,
														"id": 481,
														"nodeType": "Return",
														"src": "11448:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "10768:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "11248:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11270:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11262:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11290:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11282:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11316:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11302:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11302:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11251:84:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11359:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11358:9:0"
									},
									"scope": 535,
									"src": "11239:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "12106:110:0",
										"statements": [
											{
												"id": 507,
												"nodeType": "UncheckedBlock",
												"src": "12117:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 497,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "12150:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12150:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 500,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "12157:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 496,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "12142:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12142:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 502,
														"nodeType": "ExpressionStatement",
														"src": "12142:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 503,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "12192:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 504,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "12196:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12192:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 495,
														"id": 506,
														"nodeType": "Return",
														"src": "12185:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "11487:484:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "11986:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "12000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12028:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "12020:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12054:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "12040:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12040:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11989:84:0"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "12097:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12096:9:0"
									},
									"scope": 535,
									"src": "11977:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "13008:110:0",
										"statements": [
											{
												"id": 532,
												"nodeType": "UncheckedBlock",
												"src": "13019:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 522,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "13052:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13056:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "13052:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 525,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "13059:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 521,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "13044:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13044:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 527,
														"nodeType": "ExpressionStatement",
														"src": "13044:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 528,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "13094:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 529,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "13098:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13094:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 520,
														"id": 531,
														"nodeType": "Return",
														"src": "13087:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "12224:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "12888:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12910:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "12902:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12930:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "12922:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12956:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "12942:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12942:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12891:84:0"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "12999:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12998:9:0"
									},
									"scope": 535,
									"src": "12879:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2057,
							"src": "6609:6512:0",
							"usedErrors": []
						},
						{
							"id": 536,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13125:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 749,
							"linearizedBaseContracts": [
								749
							],
							"name": "SafeBEP20",
							"nameLocation": "13160:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 539,
									"libraryName": {
										"id": 537,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 535,
										"src": "13183:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "13177:27:0",
									"typeName": {
										"id": 538,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 542,
									"libraryName": {
										"id": 540,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 951,
										"src": "13216:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "13210:26:0",
									"typeName": {
										"id": 541,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13228:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "13316:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "13347:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 556,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 545,
																			"src": "13377:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 49,
																		"src": "13377:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "13377:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 559,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "13402:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 560,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "13406:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 554,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "13354:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "13354:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13354:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 552,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "13327:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13327:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "13327:86:0"
											}
										]
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "13253:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13273:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "13266:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 544,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 543,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "13266:6:0"
													},
													"referencedDeclaration": 100,
													"src": "13266:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13288:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "13280:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "13292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13265:41:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13316:0:0"
									},
									"scope": 749,
									"src": "13244:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "13519:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 578,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "13550:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 581,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 568,
																			"src": "13580:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 81,
																		"src": "13580:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "13580:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 584,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "13609:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 585,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "13615:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 586,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "13619:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 579,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "13557:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "13557:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13557:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 577,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "13530:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13530:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "13530:96:0"
											}
										]
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "13438:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13462:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "13455:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 567,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 566,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "13455:6:0"
													},
													"referencedDeclaration": 100,
													"src": "13455:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13477:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "13469:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13491:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "13483:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13503:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "13495:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13454:55:0"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13519:0:0"
									},
									"scope": 749,
									"src": "13429:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "13979:546:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 603,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 599,
																			"src": "14273:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14282:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "14273:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 606,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14272:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 611,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "14313:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$749",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$749",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 610,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14305:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 609,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "14305:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 612,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14305:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 613,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "14320:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 607,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 595,
																					"src": "14289:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$100",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 59,
																				"src": "14289:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14289:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14332:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "14289:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 617,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14288:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14272:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14349:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14264:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "14264:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 623,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "14447:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 626,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 595,
																			"src": "14477:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 69,
																		"src": "14477:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "14477:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 629,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "14501:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 630,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "14510:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 624,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "14454:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "14454:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14454:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 622,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "14427:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14427:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "14427:90:0"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "13642:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "13912:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13931:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "13924:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 594,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 593,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "13924:6:0"
													},
													"referencedDeclaration": 100,
													"src": "13924:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13946:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "13938:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13963:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "13955:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13923:46:0"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13979:0:0"
									},
									"scope": 749,
									"src": "13903:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "14619:200:0",
										"statements": [
											{
												"assignments": [
													646
												],
												"declarations": [
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "14638:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 671,
														"src": "14630:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 645,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 658,
												"initialValue": {
													"arguments": [
														{
															"id": 656,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "14697:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 651,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "14677:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$749",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$749",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14669:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 649,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14669:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14669:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 653,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "14684:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 647,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "14653:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 59,
																"src": "14653:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14653:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 399,
														"src": "14653:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14653:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14630:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 660,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "14734:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 663,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "14764:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 69,
																		"src": "14764:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "14764:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 666,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "14788:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 667,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "14797:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 661,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "14741:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "14741:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14741:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 659,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "14714:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14714:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "14714:97:0"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "14542:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14571:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "14564:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 637,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 636,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "14564:6:0"
													},
													"referencedDeclaration": 100,
													"src": "14564:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14586:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "14578:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14603:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "14595:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14563:46:0"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14619:0:0"
									},
									"scope": 749,
									"src": "14533:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "14913:245:0",
										"statements": [
											{
												"assignments": [
													683
												],
												"declarations": [
													{
														"constant": false,
														"id": 683,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "14932:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "14924:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 682,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"arguments": [
														{
															"id": 693,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "14991:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14998:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 688,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "14971:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$749",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$749",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14963:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 686,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14963:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14963:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 690,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "14978:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 684,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "14947:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 59,
																"src": "14947:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14947:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 484,
														"src": "14947:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14947:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14924:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "15073:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 701,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 675,
																			"src": "15103:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 69,
																		"src": "15103:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "15103:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 704,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "15127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 705,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "15136:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15080:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "15080:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15080:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "15053:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15053:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "15053:97:0"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "14836:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14865:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "14858:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "14858:6:0"
													},
													"referencedDeclaration": 100,
													"src": "14858:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14880:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "14872:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14897:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "14889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14857:46:0"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14913:0:0"
									},
									"scope": 749,
									"src": "14827:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "15619:691:0",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15986:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 747,
														"src": "15973:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 719,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 729,
												"initialValue": {
													"arguments": [
														{
															"id": 726,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "16027:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16033:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 723,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "16007:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15999:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 721,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15999:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15999:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 847,
														"src": "15999:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15999:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15973:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 730,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "16083:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16083:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16103:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16083:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 746,
												"nodeType": "IfStatement",
												"src": "16079:224:0",
												"trueBody": {
													"id": 745,
													"nodeType": "Block",
													"src": "16106:197:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 737,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 720,
																				"src": "16225:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 739,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "16238:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 738,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "16238:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 740,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "16237:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 735,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "16214:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "16214:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16214:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16246:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 734,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "16206:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16206:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 744,
															"nodeType": "ExpressionStatement",
															"src": "16206:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "15166:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "15558:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15585:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "15578:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 713,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 712,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "15578:6:0"
													},
													"referencedDeclaration": 100,
													"src": "15578:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15605:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "15592:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15592:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15577:33:0"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15619:0:0"
									},
									"scope": 749,
									"src": "15549:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2057,
							"src": "13152:3161:0",
							"usedErrors": []
						},
						{
							"id": 750,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16317:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 951,
							"linearizedBaseContracts": [
								951
							],
							"name": "Address",
							"nameLocation": "16352:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "17020:553:0",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "codehash",
														"nameLocation": "17284:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "17276:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 758,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17276:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 760,
												"nodeType": "VariableDeclarationStatement",
												"src": "17276:16:0"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "accountHash",
														"nameLocation": "17311:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "17303:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 761,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17303:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17325:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17303:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17468:36:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17470:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "17494:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "17482:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "17482:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "17470:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "17494:7:0",
														"valueSize": 1
													},
													{
														"declaration": 759,
														"isOffset": false,
														"isSlot": false,
														"src": "17470:8:0",
														"valueSize": 1
													}
												],
												"id": 765,
												"nodeType": "InlineAssembly",
												"src": "17459:45:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 766,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "17522:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 767,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "17534:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "17522:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 769,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "17549:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "307830",
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17561:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "17549:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17522:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 773,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "17521:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 757,
												"id": 774,
												"nodeType": "Return",
												"src": "17514:51:0"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "16367:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "16963:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16982:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "16974:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16973:17:0"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "17014:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17014:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17013:6:0"
									},
									"scope": 951,
									"src": "16954:619:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "18579:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 787,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "18606:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$951",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$951",
																				"typeString": "library Address"
																			}
																		],
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 785,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18598:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18598:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "18598:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 790,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "18623:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18598:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18631:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18590:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18590:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "18590:73:0"
											},
											{
												"assignments": [
													796,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18760:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 809,
														"src": "18755:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 795,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18755:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 803,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18805:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 797,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "18773:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "18773:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 799,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "18796:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "18773:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18773:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18754:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "18827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18836:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 804,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18819:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18819:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "18819:78:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "17581:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "18517:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "18543:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "18527:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18527:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18562:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "18554:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18526:43:0"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18579:0:0"
									},
									"scope": 951,
									"src": "18508:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "19755:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "19784:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "19792:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19798:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 820,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															827,
															847
														],
														"referencedDeclaration": 847,
														"src": "19771:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19771:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 819,
												"id": 825,
												"nodeType": "Return",
												"src": "19764:67:0"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "18913:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "19675:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "19696:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "19688:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19717:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "19704:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19704:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19687:35:0"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "19741:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 817,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19741:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19740:14:0"
									},
									"scope": 951,
									"src": "19666:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "20186:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 840,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "20227:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "20235:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20241:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 843,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "20244:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 839,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "20204:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20204:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 838,
												"id": 845,
												"nodeType": "Return",
												"src": "20197:60:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "19847:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "20078:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "20099:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "20091:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "20120:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "20107:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20107:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "20140:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "20126:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20126:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20090:63:0"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "20172:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20172:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20171:14:0"
									},
									"scope": 951,
									"src": "20069:196:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "20753:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "20793:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "20801:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 862,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "20807:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20814:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 859,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															867,
															900
														],
														"referencedDeclaration": 900,
														"src": "20771:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20771:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 858,
												"id": 865,
												"nodeType": "Return",
												"src": "20764:94:0"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "20273:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "20649:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "20679:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "20671:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "20700:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "20687:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 851,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20687:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20714:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "20706:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20670:50:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "20739:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 856,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20738:14:0"
									},
									"scope": 951,
									"src": "20640:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "21263:175:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 884,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "21290:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$951",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$951",
																				"typeString": "library Address"
																			}
																		],
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21282:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 882,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "21282:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21282:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "21282:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 887,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "21307:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21282:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21314:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21274:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21274:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "21274:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "21396:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "21404:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 895,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "21410:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 896,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "21417:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 892,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "21373:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21373:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 880,
												"id": 898,
												"nodeType": "Return",
												"src": "21366:64:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "20874:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "21131:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "21161:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "21153:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "21182:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "21169:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 871,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21169:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21196:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "21188:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "21217:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "21203:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 875,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21203:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21152:78:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "21249:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 878,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21249:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21248:14:0"
									},
									"scope": 951,
									"src": "21122:316:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "21590:835:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 915,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "21620:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 914,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "21609:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21609:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21629:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21601:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "21601:60:0"
											},
											{
												"assignments": [
													921,
													923
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "21740:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 949,
														"src": "21735:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 920,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "21735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "21762:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 949,
														"src": "21749:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 922,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "21749:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 930,
												"initialValue": {
													"arguments": [
														{
															"id": 928,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "21807:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 924,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "21776:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "21776:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 926,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "21796:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "21776:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21776:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21734:78:0"
											},
											{
												"condition": {
													"id": 931,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 921,
													"src": "21827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 947,
													"nodeType": "Block",
													"src": "21886:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 935,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "21972:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "21972:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21992:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21972:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 945,
																"nodeType": "Block",
																"src": "22352:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 942,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 908,
																					"src": "22378:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 941,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "22371:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22371:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 944,
																		"nodeType": "ExpressionStatement",
																		"src": "22371:20:0"
																	}
																]
															},
															"id": 946,
															"nodeType": "IfStatement",
															"src": "21968:439:0",
															"trueBody": {
																"id": 940,
																"nodeType": "Block",
																"src": "21995:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "22183:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "22206:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "22235:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "22229:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22229:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "22210:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "22279:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "22283:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "22275:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "22275:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "22296:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "22268:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22268:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "22268:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 923,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "22235:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 923,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "22283:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 939,
																		"nodeType": "InlineAssembly",
																		"src": "22174:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 948,
												"nodeType": "IfStatement",
												"src": "21823:595:0",
												"trueBody": {
													"id": 934,
													"nodeType": "Block",
													"src": "21836:44:0",
													"statements": [
														{
															"expression": {
																"id": 932,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "21858:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 912,
															"id": 933,
															"nodeType": "Return",
															"src": "21851:17:0"
														}
													]
												}
											}
										]
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nameLocation": "21455:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "21486:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "21478:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "21507:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "21494:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21494:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "weiValue",
												"nameLocation": "21521:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "21513:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "21545:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "21531:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 907,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21477:81:0"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "21576:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 910,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21576:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21575:14:0"
									},
									"scope": 951,
									"src": "21446:979:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2057,
							"src": "16344:6084:0",
							"usedErrors": []
						},
						{
							"id": 952,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "22432:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 953,
								"nodeType": "StructuredDocumentation",
								"src": "22459:287:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 962,
							"linearizedBaseContracts": [
								962
							],
							"name": "IERC165",
							"nameLocation": "22758:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "22773:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "23135:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "23160:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "23153:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 955,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "23153:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23152:20:0"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "23196:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23196:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23195:6:0"
									},
									"scope": 962,
									"src": "23126:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2057,
							"src": "22748:457:0",
							"usedErrors": []
						},
						{
							"id": 963,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23207:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 965,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 962,
										"src": "23326:7:0"
									},
									"id": 966,
									"nodeType": "InheritanceSpecifier",
									"src": "23326:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 964,
								"nodeType": "StructuredDocumentation",
								"src": "23234:69:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1076,
							"linearizedBaseContracts": [
								1076,
								962
							],
							"name": "IERC721",
							"nameLocation": "23315:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "23341:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 975,
									"name": "Transfer",
									"nameLocation": "23443:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23468:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "23452:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23490:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "23474:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23510:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "23494:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23451:67:0"
									},
									"src": "23437:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "23527:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 984,
									"name": "Approval",
									"nameLocation": "23635:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23660:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "23644:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "23683:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "23667:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23709:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "23693:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23643:74:0"
									},
									"src": "23629:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "23726:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 993,
									"name": "ApprovalForAll",
									"nameLocation": "23857:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23888:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "23872:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "23911:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "23895:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23895:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "23926:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "23921:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 990,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23921:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23871:64:0"
									},
									"src": "23851:85:0"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "23944:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "24037:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "24055:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24047:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24046:15:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "24093:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24085:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24085:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24084:17:0"
									},
									"scope": 1076,
									"src": "24028:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "24110:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "24262:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24278:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "24270:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24269:17:0"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "24318:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "24310:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24309:15:0"
									},
									"scope": 1076,
									"src": "24253:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "24333:703:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "25051:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25086:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "25078:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25109:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "25101:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "25122:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25067:77:0"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25153:0:0"
									},
									"scope": 1076,
									"src": "25042:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "25162:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "25694:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25725:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "25717:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25748:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "25740:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25769:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "25761:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25706:77:0"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25792:0:0"
									},
									"scope": 1076,
									"src": "25685:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "25801:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "26280:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26296:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "26288:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26308:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "26300:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26287:29:0"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26325:0:0"
									},
									"scope": 1076,
									"src": "26271:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "26334:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "26494:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26514:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "26506:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26505:17:0"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "26554:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "26546:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26545:18:0"
									},
									"scope": 1076,
									"src": "26485:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "26572:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1053,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "26905:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "26931:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "26923:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "26946:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "26941:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26941:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26922:34:0"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26965:0:0"
									},
									"scope": 1076,
									"src": "26896:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "26974:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "27131:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "27156:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "27148:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27171:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "27163:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27147:33:0"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "27204:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1060,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27204:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27203:6:0"
									},
									"scope": 1076,
									"src": "27122:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "27218:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "27801:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27836:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "27828:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27859:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "27851:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27880:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "27872:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27913:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "27898:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27898:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27817:107:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27933:0:0"
									},
									"scope": 1076,
									"src": "27792:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2057,
							"src": "23305:4632:0",
							"usedErrors": []
						},
						{
							"id": 1077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "27941:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1078,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 224,
										"src": "27991:7:0"
									},
									"id": 1079,
									"nodeType": "InheritanceSpecifier",
									"src": "27991:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2056,
							"linearizedBaseContracts": [
								2056,
								224,
								121
							],
							"name": "NftStaking",
							"nameLocation": "27977:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1082,
									"libraryName": {
										"id": 1080,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 535,
										"src": "28012:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28006:27:0",
									"typeName": {
										"id": 1081,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28025:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1086,
									"libraryName": {
										"id": 1083,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 749,
										"src": "28045:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28039:27:0",
									"typeName": {
										"id": 1085,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1084,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 100,
											"src": "28059:6:0"
										},
										"referencedDeclaration": 100,
										"src": "28059:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$100",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "NftStaking.UserInfo",
									"id": 1095,
									"members": [
										{
											"constant": false,
											"id": 1088,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "28131:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1095,
											"src": "28123:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1087,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28123:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1090,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "28156:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 1095,
											"src": "28148:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1089,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28148:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1092,
											"mutability": "mutable",
											"name": "pendingAmount",
											"nameLocation": "28185:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 1095,
											"src": "28177:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1091,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28177:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1094,
											"mutability": "mutable",
											"name": "lastStakedTime",
											"nameLocation": "28217:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 1095,
											"src": "28209:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1093,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28209:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "28103:8:0",
									"nodeType": "StructDefinition",
									"scope": 2056,
									"src": "28096:143:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d06fcba8",
									"id": 1098,
									"mutability": "immutable",
									"name": "nftToken",
									"nameLocation": "28270:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2056,
									"src": "28245:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$1076",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 1097,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1096,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1076,
											"src": "28245:7:0"
										},
										"referencedDeclaration": 1076,
										"src": "28245:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$1076",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19fca9f6",
									"id": 1101,
									"mutability": "immutable",
									"name": "ghspToken",
									"nameLocation": "28309:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2056,
									"src": "28285:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$100",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1100,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1099,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 100,
											"src": "28285:6:0"
										},
										"referencedDeclaration": 100,
										"src": "28285:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$100",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9f8d181",
									"id": 1103,
									"mutability": "mutable",
									"name": "lastRewardBlock",
									"nameLocation": "28340:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2056,
									"src": "28325:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1102,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28325:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "43db3c5f",
									"id": 1105,
									"mutability": "mutable",
									"name": "accGHSPPerShare",
									"nameLocation": "28377:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2056,
									"src": "28362:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1104,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28362:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ae39cac",
									"id": 1107,
									"mutability": "mutable",
									"name": "rewardPerBlock",
									"nameLocation": "28414:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2056,
									"src": "28399:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1106,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28399:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f25f4b56",
									"id": 1109,
									"mutability": "mutable",
									"name": "feeWallet",
									"nameLocation": "28450:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2056,
									"src": "28435:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1108,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28435:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5962917",
									"id": 1111,
									"mutability": "mutable",
									"name": "harvestFee",
									"nameLocation": "28481:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2056,
									"src": "28466:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1110,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28466:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "567e98f9",
									"id": 1113,
									"mutability": "mutable",
									"name": "totalStakedAmount",
									"nameLocation": "28513:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 2056,
									"src": "28498:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1112,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28498:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1115,
									"mutability": "mutable",
									"name": "_rewardBalance",
									"nameLocation": "28553:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2056,
									"src": "28537:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28537:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1119,
									"mutability": "mutable",
									"name": "allStakes",
									"nameLocation": "28602:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2056,
									"src": "28574:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1118,
										"keyType": {
											"id": 1116,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28582:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "28574:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1117,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28593:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 1124,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "28707:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2056,
									"src": "28670:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
										"typeString": "mapping(address => struct NftStaking.UserInfo)"
									},
									"typeName": {
										"id": 1123,
										"keyType": {
											"id": 1120,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28679:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "28670:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
											"typeString": "mapping(address => struct NftStaking.UserInfo)"
										},
										"valueType": {
											"id": 1122,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1121,
												"name": "UserInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1095,
												"src": "28690:8:0"
											},
											"referencedDeclaration": 1095,
											"src": "28690:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
												"typeString": "struct NftStaking.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1131,
									"name": "Staked",
									"nameLocation": "28730:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "28745:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "28737:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28763:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "28753:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1127,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "28753:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1128,
													"nodeType": "ArrayTypeName",
													"src": "28753:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28736:35:0"
									},
									"src": "28724:48:0"
								},
								{
									"anonymous": false,
									"id": 1138,
									"name": "UnStaked",
									"nameLocation": "28784:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "28801:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "28793:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28793:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28819:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "28809:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1134,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "28809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1135,
													"nodeType": "ArrayTypeName",
													"src": "28809:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28792:35:0"
									},
									"src": "28778:50:0"
								},
								{
									"anonymous": false,
									"id": 1146,
									"name": "Harvest",
									"nameLocation": "28840:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "28856:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "28848:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28872:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "28864:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"indexed": false,
												"mutability": "mutable",
												"name": "harvestFee",
												"nameLocation": "28888:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "28880:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28847:52:0"
									},
									"src": "28834:66:0"
								},
								{
									"anonymous": false,
									"id": 1152,
									"name": "DepositReward",
									"nameLocation": "28912:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "28942:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "28926:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28956:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "28948:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28925:38:0"
									},
									"src": "28906:58:0"
								},
								{
									"anonymous": false,
									"id": 1156,
									"name": "SetFeeWallet",
									"nameLocation": "28976:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"indexed": true,
												"mutability": "mutable",
												"name": "_feeWallet",
												"nameLocation": "29005:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "28989:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28988:28:0"
									},
									"src": "28970:47:0"
								},
								{
									"anonymous": false,
									"id": 1164,
									"name": "AddUnStakeFee",
									"nameLocation": "29029:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"indexed": false,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "29051:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "29043:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"indexed": false,
												"mutability": "mutable",
												"name": "_minDays",
												"nameLocation": "29067:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "29059:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"indexed": false,
												"mutability": "mutable",
												"name": "_feePercent",
												"nameLocation": "29085:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "29077:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29042:55:0"
									},
									"src": "29023:75:0"
								},
								{
									"anonymous": false,
									"id": 1168,
									"name": "SetHarvestFee",
									"nameLocation": "29110:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"indexed": false,
												"mutability": "mutable",
												"name": "_harvestFee",
												"nameLocation": "29132:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "29124:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29123:21:0"
									},
									"src": "29104:41:0"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "29291:148:0",
										"statements": [
											{
												"expression": {
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1181,
														"name": "nftToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "29302:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1076",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1182,
														"name": "_nftToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "29313:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1076",
															"typeString": "contract IERC721"
														}
													},
													"src": "29302:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1076",
														"typeString": "contract IERC721"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "29302:20:0"
											},
											{
												"expression": {
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1185,
														"name": "ghspToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "29333:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$100",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1186,
														"name": "_ghspToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "29345:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$100",
															"typeString": "contract IBEP20"
														}
													},
													"src": "29333:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "29333:22:0"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1189,
														"name": "rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "29366:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "_rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "29383:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29366:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "29366:32:0"
											},
											{
												"expression": {
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1193,
														"name": "feeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "29409:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1194,
														"name": "_feeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "29421:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29409:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "29409:22:0"
											}
										]
									},
									"id": 1198,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "_nftToken",
												"nameLocation": "29183:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "29175:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$1076",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1170,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1169,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1076,
														"src": "29175:7:0"
													},
													"referencedDeclaration": 1076,
													"src": "29175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1076",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "_ghspToken",
												"nameLocation": "29210:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "29203:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1173,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1172,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "29203:6:0"
													},
													"referencedDeclaration": 100,
													"src": "29203:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "_rewardPerBlock",
												"nameLocation": "29239:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "29231:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "_feeWallet",
												"nameLocation": "29273:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "29265:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29164:126:0"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29291:0:0"
									},
									"scope": 2056,
									"src": "29153:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "29506:80:0",
										"statements": [
											{
												"expression": {
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1205,
														"name": "feeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "29517:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1206,
														"name": "_feeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "29529:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29517:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "29517:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1210,
															"name": "feeWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "29568:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1209,
														"name": "SetFeeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "29555:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29555:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "EmitStatement",
												"src": "29550:28:0"
											}
										]
									},
									"functionSelector": "90d49b9d",
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1202,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "29496:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29496:9:0"
										}
									],
									"name": "setFeeWallet",
									"nameLocation": "29454:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "_feeWallet",
												"nameLocation": "29475:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "29467:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29466:20:0"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29506:0:0"
									},
									"scope": 2056,
									"src": "29445:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "29657:156:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1222,
																"name": "_feePercent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "29676:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3430",
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29691:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_40_by_1",
																	"typeString": "int_const 40"
																},
																"value": "40"
															},
															"src": "29676:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736574486172766573744665653a2066656550657263656e74203e203430",
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29695:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e",
																"typeString": "literal_string \"setHarvestFee: feePercent > 40\""
															},
															"value": "setHarvestFee: feePercent > 40"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b38241bd141f760d9a5f9d33089864b359dc1845b43501ef59c7aa3172f4ac1e",
																"typeString": "literal_string \"setHarvestFee: feePercent > 40\""
															}
														],
														"id": 1221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29668:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29668:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "29668:60:0"
											},
											{
												"expression": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1228,
														"name": "harvestFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "29739:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1229,
														"name": "_feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "29752:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29739:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "29739:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1233,
															"name": "_feePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "29793:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1232,
														"name": "SetHarvestFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "29779:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29779:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "EmitStatement",
												"src": "29774:31:0"
											}
										]
									},
									"functionSelector": "792b55b6",
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1219,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1218,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "29647:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29647:9:0"
										}
									],
									"name": "setHarvestFee",
									"nameLocation": "29603:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "_feePercent",
												"nameLocation": "29625:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "29617:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29616:21:0"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29657:0:0"
									},
									"scope": 2056,
									"src": "29594:219:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "29902:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1248,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "29928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1246,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "29920:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 414,
														"src": "29920:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29920:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1245,
												"id": 1250,
												"nodeType": "Return",
												"src": "29913:21:0"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "29830:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "29852:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "29844:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "29867:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "29859:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29843:28:0"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "29893:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29892:9:0"
									},
									"scope": 2056,
									"src": "29821:121:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "30010:345:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1257,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "30025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "30025:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1259,
															"name": "lastRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "30040:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "30025:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1261,
															"name": "totalStakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "30059:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30080:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "30059:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "30025:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1288,
													"nodeType": "Block",
													"src": "30300:48:0",
													"statements": [
														{
															"expression": {
																"id": 1286,
																"name": "_rewardBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "30322:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1256,
															"id": 1287,
															"nodeType": "Return",
															"src": "30315:21:0"
														}
													]
												},
												"id": 1289,
												"nodeType": "IfStatement",
												"src": "30021:327:0",
												"trueBody": {
													"id": 1285,
													"nodeType": "Block",
													"src": "30083:202:0",
													"statements": [
														{
															"assignments": [
																1266
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1266,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "30106:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1285,
																	"src": "30098:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1265,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30098:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1272,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1268,
																		"name": "lastRewardBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "30133:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1269,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "30150:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "30150:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1267,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "30119:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30119:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30098:65:0"
														},
														{
															"assignments": [
																1274
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1274,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "30186:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1285,
																	"src": "30178:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1273,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30178:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1279,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1277,
																		"name": "rewardPerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "30210:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1275,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "30195:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "30195:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30195:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30178:47:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1282,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "30266:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1280,
																		"name": "_rewardBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "30247:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 414,
																	"src": "30247:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30247:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1256,
															"id": 1284,
															"nodeType": "Return",
															"src": "30240:33:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "5e42b455",
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardBalance",
									"nameLocation": "29959:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29975:2:0"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "30001:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30000:9:0"
									},
									"scope": 2056,
									"src": "29950:405:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "30422:186:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1301,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30460:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30460:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1305,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "30480:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NftStaking_$2056",
																		"typeString": "contract NftStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NftStaking_$2056",
																		"typeString": "contract NftStaking"
																	}
																],
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30472:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1303,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30472:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30472:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1307,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "30487:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1298,
															"name": "ghspToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "30433:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 591,
														"src": "30433:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$100_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30433:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "30433:62:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1311,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30525:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30525:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "30537:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1310,
														"name": "DepositReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "30511:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30511:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "EmitStatement",
												"src": "30506:39:0"
											},
											{
												"expression": {
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1316,
														"name": "_rewardBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "30556:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1319,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "30592:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1317,
																"name": "_rewardBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "30573:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 399,
															"src": "30573:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30573:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30556:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "30556:44:0"
											}
										]
									},
									"functionSelector": "1e2720ff",
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1296,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1295,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "30412:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30412:9:0"
										}
									],
									"name": "depositReward",
									"nameLocation": "30372:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "30394:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "30386:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30385:17:0"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30422:0:0"
									},
									"scope": 2056,
									"src": "30363:245:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "30648:846:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1327,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "30663:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "30663:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1329,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "30679:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30663:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1333,
												"nodeType": "IfStatement",
												"src": "30659:70:0",
												"trueBody": {
													"id": 1332,
													"nodeType": "Block",
													"src": "30696:33:0",
													"statements": [
														{
															"functionReturnParameters": 1326,
															"id": 1331,
															"nodeType": "Return",
															"src": "30711:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1334,
														"name": "totalStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "30743:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30764:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30743:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1344,
												"nodeType": "IfStatement",
												"src": "30739:106:0",
												"trueBody": {
													"id": 1343,
													"nodeType": "Block",
													"src": "30767:78:0",
													"statements": [
														{
															"expression": {
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1337,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "30782:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1338,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "30800:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "30800:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30782:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1341,
															"nodeType": "ExpressionStatement",
															"src": "30782:30:0"
														},
														{
															"functionReturnParameters": 1326,
															"id": 1342,
															"nodeType": "Return",
															"src": "30827:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1346
												],
												"declarations": [
													{
														"constant": false,
														"id": 1346,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "30863:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "30855:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1345,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30855:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1352,
												"initialValue": {
													"arguments": [
														{
															"id": 1348,
															"name": "lastRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "30890:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1349,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "30907:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "30907:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1347,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "30876:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30876:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30855:65:0"
											},
											{
												"assignments": [
													1354
												],
												"declarations": [
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "30939:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "30931:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1353,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1359,
												"initialValue": {
													"arguments": [
														{
															"id": 1357,
															"name": "rewardPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "30963:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1355,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "30948:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 429,
														"src": "30948:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30948:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30931:47:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1360,
														"name": "_rewardBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "30993:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31011:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30993:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1370,
												"nodeType": "IfStatement",
												"src": "30989:103:0",
												"trueBody": {
													"id": 1369,
													"nodeType": "Block",
													"src": "31014:78:0",
													"statements": [
														{
															"expression": {
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1363,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "31029:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1364,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "31047:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "31047:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31029:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1367,
															"nodeType": "ExpressionStatement",
															"src": "31029:30:0"
														},
														{
															"functionReturnParameters": 1326,
															"id": 1368,
															"nodeType": "Return",
															"src": "31074:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1371,
														"name": "_rewardBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "31106:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1372,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "31123:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31106:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1412,
													"nodeType": "Block",
													"src": "31283:163:0",
													"statements": [
														{
															"expression": {
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1392,
																	"name": "_rewardBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "31298:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1395,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1354,
																			"src": "31334:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1393,
																			"name": "_rewardBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "31315:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "31315:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31315:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31298:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1398,
															"nodeType": "ExpressionStatement",
															"src": "31298:43:0"
														},
														{
															"expression": {
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1399,
																	"name": "accGHSPPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "31356:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1407,
																					"name": "totalStakedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "31415:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1404,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31405:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1402,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1354,
																							"src": "31394:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1403,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 429,
																						"src": "31394:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "31394:16:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 444,
																				"src": "31394:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31394:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1400,
																			"name": "accGHSPPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "31374:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 399,
																		"src": "31374:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31374:60:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31356:78:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1411,
															"nodeType": "ExpressionStatement",
															"src": "31356:78:0"
														}
													]
												},
												"id": 1413,
												"nodeType": "IfStatement",
												"src": "31102:344:0",
												"trueBody": {
													"id": 1391,
													"nodeType": "Block",
													"src": "31131:146:0",
													"statements": [
														{
															"expression": {
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1374,
																	"name": "accGHSPPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "31146:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1382,
																					"name": "totalStakedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "31213:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1379,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31203:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1377,
																							"name": "_rewardBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1115,
																							"src": "31184:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1378,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 429,
																						"src": "31184:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1380,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "31184:24:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 444,
																				"src": "31184:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31184:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1375,
																			"name": "accGHSPPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "31164:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 399,
																		"src": "31164:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31164:68:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31146:86:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1386,
															"nodeType": "ExpressionStatement",
															"src": "31146:86:0"
														},
														{
															"expression": {
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1387,
																	"name": "_rewardBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "31247:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31264:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "31247:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1390,
															"nodeType": "ExpressionStatement",
															"src": "31247:18:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1414,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "31456:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1415,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31474:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "31474:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31456:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "31456:30:0"
											}
										]
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateStatus",
									"nameLocation": "30625:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30637:2:0"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30648:0:0"
									},
									"scope": 2056,
									"src": "30616:878:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "31553:1337:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1427,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "31572:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "31572:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31590:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31572:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4654205374616b696e673a20456d707479204172726179",
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31593:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5",
																"typeString": "literal_string \"NFT Staking: Empty Array\""
															},
															"value": "NFT Staking: Empty Array"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5",
																"typeString": "literal_string \"NFT Staking: Empty Array\""
															}
														],
														"id": 1426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31564:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31564:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "31564:56:0"
											},
											{
												"body": {
													"id": 1498,
													"nodeType": "Block",
													"src": "31676:399:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1448,
																						"name": "tokenIds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1423,
																						"src": "31716:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																							"typeString": "uint256[] calldata"
																						}
																					},
																					"id": 1450,
																					"indexExpression": {
																						"id": 1449,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1435,
																						"src": "31725:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "31716:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1446,
																					"name": "nftToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1098,
																					"src": "31699:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721_$1076",
																						"typeString": "contract IERC721"
																					}
																				},
																				"id": 1447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "ownerOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1009,
																				"src": "31699:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																					"typeString": "function (uint256) view external returns (address)"
																				}
																			},
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31699:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1452,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "31732:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "31732:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "31699:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e4654205374616b696e673a206e6f74206f776e6572206f6620746f6b656e2e",
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31744:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06",
																			"typeString": "literal_string \"NFT Staking: not owner of token.\""
																		},
																		"value": "NFT Staking: not owner of token."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_49fad8557c6c6c9f43da44020ecb7749e175a69da909f4bd2d28d71aed0fdf06",
																			"typeString": "literal_string \"NFT Staking: not owner of token.\""
																		}
																	],
																	"id": 1445,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "31691:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31691:88:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1457,
															"nodeType": "ExpressionStatement",
															"src": "31691:88:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1459,
																				"name": "allStakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1119,
																				"src": "31802:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																					"typeString": "mapping(uint256 => address)"
																				}
																			},
																			"id": 1463,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1460,
																					"name": "tokenIds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1423,
																					"src": "31812:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 1462,
																				"indexExpression": {
																					"id": 1461,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1435,
																					"src": "31821:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "31812:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "31802:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1466,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31836:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "31828:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1464,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "31828:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31828:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "31802:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e4654205374616b696e673a20746f6b656e20616c7265616479207374616b65642e",
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31840:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286",
																			"typeString": "literal_string \"NFT Staking: token already staked.\""
																		},
																		"value": "NFT Staking: token already staked."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_522e6d6156502b713f3f03ba3fc89ce116883ec1336dce9e9afe463d790d8286",
																			"typeString": "literal_string \"NFT Staking: token already staked.\""
																		}
																	],
																	"id": 1458,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "31794:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31794:83:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1471,
															"nodeType": "ExpressionStatement",
															"src": "31794:83:0"
														},
														{
															"body": {
																"id": 1496,
																"nodeType": "Block",
																"src": "31941:123:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1492,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 1486,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1423,
																							"src": "31968:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 1488,
																						"indexExpression": {
																							"id": 1487,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1435,
																							"src": "31977:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "31968:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"baseExpression": {
																							"id": 1489,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1423,
																							"src": "31983:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 1491,
																						"indexExpression": {
																							"id": 1490,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1473,
																							"src": "31992:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "31983:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "31968:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4e4654205374616b696e673a206475706c696361746520746f6b656e2069647320696e20696e70757420706172616d732e",
																					"id": 1493,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31996:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55",
																						"typeString": "literal_string \"NFT Staking: duplicate token ids in input params.\""
																					},
																					"value": "NFT Staking: duplicate token ids in input params."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55",
																						"typeString": "literal_string \"NFT Staking: duplicate token ids in input params.\""
																					}
																				],
																				"id": 1485,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "31960:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31960:88:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1495,
																		"nodeType": "ExpressionStatement",
																		"src": "31960:88:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1478,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "31915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1479,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "31919:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "31919:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31915:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1497,
															"initializationExpression": {
																"assignments": [
																	1473
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1473,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "31904:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1497,
																		"src": "31896:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1472,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "31896:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1477,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1474,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1435,
																		"src": "31908:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31912:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "31908:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "31896:17:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "31936:4:0",
																	"subExpression": {
																		"id": 1482,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1473,
																		"src": "31936:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1484,
																"nodeType": "ExpressionStatement",
																"src": "31936:4:0"
															},
															"nodeType": "ForStatement",
															"src": "31892:172:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1438,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "31650:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1439,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "31654:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "31654:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31650:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1499,
												"initializationExpression": {
													"assignments": [
														1435
													],
													"declarations": [
														{
															"constant": false,
															"id": 1435,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "31643:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1499,
															"src": "31635:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1434,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "31635:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1437,
													"initialValue": {
														"hexValue": "30",
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31647:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "31635:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "31671:4:0",
														"subExpression": {
															"id": 1442,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "31671:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1444,
													"nodeType": "ExpressionStatement",
													"src": "31671:4:0"
												},
												"nodeType": "ForStatement",
												"src": "31631:444:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1500,
														"name": "updateStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "32085:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32085:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "32085:14:0"
											},
											{
												"assignments": [
													1505
												],
												"declarations": [
													{
														"constant": false,
														"id": 1505,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "32127:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1626,
														"src": "32110:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
															"typeString": "struct NftStaking.UserInfo"
														},
														"typeName": {
															"id": 1504,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1503,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1095,
																"src": "32110:8:0"
															},
															"referencedDeclaration": 1095,
															"src": "32110:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1510,
												"initialValue": {
													"baseExpression": {
														"id": 1506,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "32134:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
															"typeString": "mapping(address => struct NftStaking.UserInfo storage ref)"
														}
													},
													"id": 1509,
													"indexExpression": {
														"expression": {
															"id": 1507,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "32143:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "32143:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32134:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1095_storage",
														"typeString": "struct NftStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32110:44:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1511,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "32169:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1512,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1088,
														"src": "32169:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32183:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32169:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1541,
												"nodeType": "IfStatement",
												"src": "32165:196:0",
												"trueBody": {
													"id": 1540,
													"nodeType": "Block",
													"src": "32186:175:0",
													"statements": [
														{
															"assignments": [
																1516
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1516,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "32209:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1540,
																	"src": "32201:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1515,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32201:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1529,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1526,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1505,
																			"src": "32266:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																				"typeString": "struct NftStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1090,
																		"src": "32266:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32256:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1520,
																						"name": "accGHSPPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1105,
																						"src": "32235:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1517,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1505,
																							"src": "32219:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																								"typeString": "struct NftStaking.UserInfo storage pointer"
																							}
																						},
																						"id": 1518,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1088,
																						"src": "32219:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1519,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 429,
																					"src": "32219:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "32219:32:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 444,
																			"src": "32219:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32219:42:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 414,
																	"src": "32219:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32219:63:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32201:81:0"
														},
														{
															"expression": {
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1530,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "32297:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																			"typeString": "struct NftStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "pendingAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1092,
																	"src": "32297:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1536,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "32341:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1533,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1505,
																				"src": "32318:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																					"typeString": "struct NftStaking.UserInfo storage pointer"
																				}
																			},
																			"id": 1534,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "pendingAmount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1092,
																			"src": "32318:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 399,
																		"src": "32318:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32318:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32297:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1539,
															"nodeType": "ExpressionStatement",
															"src": "32297:52:0"
														}
													]
												}
											},
											{
												"assignments": [
													1543
												],
												"declarations": [
													{
														"constant": false,
														"id": 1543,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "32379:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1626,
														"src": "32371:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1542,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32371:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1546,
												"initialValue": {
													"expression": {
														"id": 1544,
														"name": "tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "32393:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "32393:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32371:37:0"
											},
											{
												"expression": {
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1547,
														"name": "totalStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "32419:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1550,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1543,
																"src": "32461:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1548,
																"name": "totalStakedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "32439:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 399,
															"src": "32439:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32439:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32419:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "32419:54:0"
											},
											{
												"expression": {
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1554,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "32484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1088,
														"src": "32484:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1560,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1543,
																"src": "32514:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1557,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "32498:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																		"typeString": "struct NftStaking.UserInfo storage pointer"
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1088,
																"src": "32498:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 399,
															"src": "32498:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32498:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32484:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "32484:42:0"
											},
											{
												"expression": {
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1564,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "32537:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1090,
														"src": "32537:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32592:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1570,
																		"name": "accGHSPPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "32571:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1567,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1505,
																			"src": "32555:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																				"typeString": "struct NftStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1088,
																		"src": "32555:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "32555:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32555:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 444,
															"src": "32555:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32555:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32537:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "32537:60:0"
											},
											{
												"expression": {
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1577,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "32608:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastStakedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1094,
														"src": "32608:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1580,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "32630:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "32630:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32608:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "32608:37:0"
											},
											{
												"body": {
													"id": 1618,
													"nodeType": "Block",
													"src": "32701:138:0",
													"statements": [
														{
															"expression": {
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1595,
																		"name": "allStakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "32716:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1599,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1596,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1423,
																			"src": "32726:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1598,
																		"indexExpression": {
																			"id": 1597,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1585,
																			"src": "32735:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "32726:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "32716:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1600,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "32741:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "32741:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "32716:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1603,
															"nodeType": "ExpressionStatement",
															"src": "32716:35:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1607,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32788:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32788:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1611,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "32808:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NftStaking_$2056",
																					"typeString": "contract NftStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NftStaking_$2056",
																					"typeString": "contract NftStaking"
																				}
																			],
																			"id": 1610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "32800:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1609,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "32800:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32800:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1613,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1423,
																			"src": "32815:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1615,
																		"indexExpression": {
																			"id": 1614,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1585,
																			"src": "32824:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "32815:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1604,
																		"name": "nftToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "32766:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1076",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1029,
																	"src": "32766:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32766:61:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1617,
															"nodeType": "ExpressionStatement",
															"src": "32766:61:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1588,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "32675:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1589,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "32679:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "32679:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32675:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1619,
												"initializationExpression": {
													"assignments": [
														1585
													],
													"declarations": [
														{
															"constant": false,
															"id": 1585,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "32668:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1619,
															"src": "32660:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1584,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "32660:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1587,
													"initialValue": {
														"hexValue": "30",
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32672:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "32660:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "32696:4:0",
														"subExpression": {
															"id": 1592,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "32696:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1594,
													"nodeType": "ExpressionStatement",
													"src": "32696:4:0"
												},
												"nodeType": "ForStatement",
												"src": "32656:183:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1621,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32861:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32861:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1623,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "32873:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1620,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "32854:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32854:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "EmitStatement",
												"src": "32849:33:0"
											}
										]
									},
									"functionSelector": "0fbf0a93",
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "31509:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "31534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "31515:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1421,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "31515:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1422,
													"nodeType": "ArrayTypeName",
													"src": "31515:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31514:29:0"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31553:0:0"
									},
									"scope": 2056,
									"src": "31500:1390:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "32953:1329:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1634,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "32972:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "32972:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32990:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32972:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4654205374616b696e673a20456d707479204172726179",
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32993:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5",
																"typeString": "literal_string \"NFT Staking: Empty Array\""
															},
															"value": "NFT Staking: Empty Array"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f57d7e44e2a0a487f4e235ae898891744c8f8e2b32f5c605a2d4777c1147ed5",
																"typeString": "literal_string \"NFT Staking: Empty Array\""
															}
														],
														"id": 1633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32964:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32964:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "32964:56:0"
											},
											{
												"body": {
													"id": 1694,
													"nodeType": "Block",
													"src": "33076:359:0",
													"statements": [
														{
															"assignments": [
																1653
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1653,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "33099:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1694,
																	"src": "33091:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1652,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33091:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1657,
															"initialValue": {
																"baseExpression": {
																	"id": 1654,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "33109:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1656,
																"indexExpression": {
																	"id": 1655,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "33118:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33109:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33091:29:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1659,
																				"name": "allStakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1119,
																				"src": "33143:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																					"typeString": "mapping(uint256 => address)"
																				}
																			},
																			"id": 1661,
																			"indexExpression": {
																				"id": 1660,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1653,
																				"src": "33153:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "33143:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1662,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "33165:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "33165:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "33143:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e667420556e7374616b696e673a20746f6b656e206e6f74207374616b6564206f7220696e636f727265637420746f6b656e206f776e65722e",
																		"id": 1665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33177:59:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b",
																			"typeString": "literal_string \"Nft Unstaking: token not staked or incorrect token owner.\""
																		},
																		"value": "Nft Unstaking: token not staked or incorrect token owner."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d1a59acdad44ff16a2426032db323054068b40952be56da77ab245256bbdfd2b",
																			"typeString": "literal_string \"Nft Unstaking: token not staked or incorrect token owner.\""
																		}
																	],
																	"id": 1658,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "33135:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33135:102:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1667,
															"nodeType": "ExpressionStatement",
															"src": "33135:102:0"
														},
														{
															"body": {
																"id": 1692,
																"nodeType": "Block",
																"src": "33301:123:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1688,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 1682,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1630,
																							"src": "33328:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 1684,
																						"indexExpression": {
																							"id": 1683,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1642,
																							"src": "33337:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "33328:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"baseExpression": {
																							"id": 1685,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1630,
																							"src": "33343:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 1687,
																						"indexExpression": {
																							"id": 1686,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1669,
																							"src": "33352:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "33343:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "33328:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4e4654205374616b696e673a206475706c696361746520746f6b656e2069647320696e20696e70757420706172616d732e",
																					"id": 1689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "33356:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55",
																						"typeString": "literal_string \"NFT Staking: duplicate token ids in input params.\""
																					},
																					"value": "NFT Staking: duplicate token ids in input params."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_41fa73286e7ced6b56c341b23d15c6f2283478e58d3384c7db68d08ac6423b55",
																						"typeString": "literal_string \"NFT Staking: duplicate token ids in input params.\""
																					}
																				],
																				"id": 1681,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "33320:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33320:88:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1691,
																		"nodeType": "ExpressionStatement",
																		"src": "33320:88:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1674,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "33275:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1675,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "33279:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "33279:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33275:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1693,
															"initializationExpression": {
																"assignments": [
																	1669
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1669,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "33264:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1693,
																		"src": "33256:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1668,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "33256:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1673,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1670,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1642,
																		"src": "33268:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33272:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "33268:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "33256:17:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "33296:4:0",
																	"subExpression": {
																		"id": 1678,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "33296:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1680,
																"nodeType": "ExpressionStatement",
																"src": "33296:4:0"
															},
															"nodeType": "ForStatement",
															"src": "33252:172:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1645,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "33050:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1646,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "33054:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "33054:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33050:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1695,
												"initializationExpression": {
													"assignments": [
														1642
													],
													"declarations": [
														{
															"constant": false,
															"id": 1642,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "33043:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1695,
															"src": "33035:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1641,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "33035:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1644,
													"initialValue": {
														"hexValue": "30",
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33047:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "33035:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "33071:4:0",
														"subExpression": {
															"id": 1649,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "33071:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1651,
													"nodeType": "ExpressionStatement",
													"src": "33071:4:0"
												},
												"nodeType": "ForStatement",
												"src": "33031:404:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1696,
														"name": "updateStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "33447:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33447:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "33447:14:0"
											},
											{
												"assignments": [
													1701
												],
												"declarations": [
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "33489:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1831,
														"src": "33472:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
															"typeString": "struct NftStaking.UserInfo"
														},
														"typeName": {
															"id": 1700,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1699,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1095,
																"src": "33472:8:0"
															},
															"referencedDeclaration": 1095,
															"src": "33472:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1706,
												"initialValue": {
													"baseExpression": {
														"id": 1702,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "33496:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
															"typeString": "mapping(address => struct NftStaking.UserInfo storage ref)"
														}
													},
													"id": 1705,
													"indexExpression": {
														"expression": {
															"id": 1703,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "33505:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "33505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33496:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1095_storage",
														"typeString": "struct NftStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33472:44:0"
											},
											{
												"assignments": [
													1708
												],
												"declarations": [
													{
														"constant": false,
														"id": 1708,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "33535:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1831,
														"src": "33527:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33527:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1721,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1718,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1701,
																"src": "33592:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																	"typeString": "struct NftStaking.UserInfo storage pointer"
																}
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1090,
															"src": "33592:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33582:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1712,
																			"name": "accGHSPPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "33561:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1709,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1701,
																				"src": "33545:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																					"typeString": "struct NftStaking.UserInfo storage pointer"
																				}
																			},
																			"id": 1710,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1088,
																			"src": "33545:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 429,
																		"src": "33545:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33545:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 444,
																"src": "33545:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33545:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 414,
														"src": "33545:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33545:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33527:81:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1726,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "33651:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NftStaking_$2056",
																			"typeString": "contract NftStaking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NftStaking_$2056",
																			"typeString": "contract NftStaking"
																		}
																	],
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33643:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1724,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "33643:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33643:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1722,
																"name": "ghspToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "33623:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$100",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 39,
															"src": "33623:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33623:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1729,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "33660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33623:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1742,
												"nodeType": "IfStatement",
												"src": "33619:121:0",
												"trueBody": {
													"id": 1741,
													"nodeType": "Block",
													"src": "33669:71:0",
													"statements": [
														{
															"expression": {
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1731,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "33684:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1736,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "33722:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_NftStaking_$2056",
																						"typeString": "contract NftStaking"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_NftStaking_$2056",
																						"typeString": "contract NftStaking"
																					}
																				],
																				"id": 1735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "33714:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1734,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "33714:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33714:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1732,
																			"name": "ghspToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "33694:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 39,
																		"src": "33694:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33694:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33684:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1740,
															"nodeType": "ExpressionStatement",
															"src": "33684:44:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1743,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "33750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1745,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "pendingAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1092,
														"src": "33750:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1749,
																"name": "pending",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "33794:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1746,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "33771:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																		"typeString": "struct NftStaking.UserInfo storage pointer"
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "pendingAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1092,
																"src": "33771:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 399,
															"src": "33771:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33771:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33750:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "33750:52:0"
											},
											{
												"assignments": [
													1754
												],
												"declarations": [
													{
														"constant": false,
														"id": 1754,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "33821:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1831,
														"src": "33813:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33813:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1757,
												"initialValue": {
													"expression": {
														"id": 1755,
														"name": "tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "33835:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "33835:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33813:37:0"
											},
											{
												"expression": {
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1758,
														"name": "totalStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "33861:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1761,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "33903:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1759,
																"name": "totalStakedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "33881:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 414,
															"src": "33881:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33881:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33861:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "33861:54:0"
											},
											{
												"expression": {
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1765,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "33926:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1767,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1088,
														"src": "33926:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1771,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "33956:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1768,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "33940:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																		"typeString": "struct NftStaking.UserInfo storage pointer"
																	}
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1088,
																"src": "33940:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 414,
															"src": "33940:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33940:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33926:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1774,
												"nodeType": "ExpressionStatement",
												"src": "33926:42:0"
											},
											{
												"expression": {
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1775,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "33979:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 1777,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1090,
														"src": "33979:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34034:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1781,
																		"name": "accGHSPPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "34013:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1778,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1701,
																			"src": "33997:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																				"typeString": "struct NftStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1779,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1088,
																		"src": "33997:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "33997:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33997:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 444,
															"src": "33997:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33997:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33979:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1787,
												"nodeType": "ExpressionStatement",
												"src": "33979:60:0"
											},
											{
												"body": {
													"id": 1823,
													"nodeType": "Block",
													"src": "34091:138:0",
													"statements": [
														{
															"expression": {
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1798,
																		"name": "allStakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "34106:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1802,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1799,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1630,
																			"src": "34116:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1801,
																		"indexExpression": {
																			"id": 1800,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1789,
																			"src": "34125:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "34116:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "34106:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34139:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "34131:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1803,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "34131:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34131:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "34106:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1808,
															"nodeType": "ExpressionStatement",
															"src": "34106:35:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1814,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "34186:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NftStaking_$2056",
																					"typeString": "contract NftStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NftStaking_$2056",
																					"typeString": "contract NftStaking"
																				}
																			],
																			"id": 1813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34178:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1812,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34178:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34178:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1816,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "34193:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "34193:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1818,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1630,
																			"src": "34205:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1820,
																		"indexExpression": {
																			"id": 1819,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1789,
																			"src": "34214:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "34205:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1809,
																		"name": "nftToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "34156:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1076",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1029,
																	"src": "34156:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34156:61:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1822,
															"nodeType": "ExpressionStatement",
															"src": "34156:61:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1792,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "34069:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1793,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "34073:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34069:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1824,
												"initializationExpression": {
													"assignments": [
														1789
													],
													"declarations": [
														{
															"constant": false,
															"id": 1789,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "34062:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1824,
															"src": "34054:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1788,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34054:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1791,
													"initialValue": {
														"hexValue": "30",
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34066:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "34054:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "34086:4:0",
														"subExpression": {
															"id": 1795,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "34086:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1797,
													"nodeType": "ExpressionStatement",
													"src": "34086:4:0"
												},
												"nodeType": "ForStatement",
												"src": "34050:179:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1826,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34253:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34253:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1828,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "34265:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1825,
														"name": "UnStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "34244:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory)"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34244:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1830,
												"nodeType": "EmitStatement",
												"src": "34239:35:0"
											}
										]
									},
									"functionSelector": "e449f341",
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "32907:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "32934:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "32915:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1628,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "32915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1629,
													"nodeType": "ArrayTypeName",
													"src": "32915:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32914:29:0"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32953:0:0"
									},
									"scope": 2056,
									"src": "32898:1384:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "34355:159:0",
										"statements": [
											{
												"assignments": [
													1840
												],
												"declarations": [
													{
														"constant": false,
														"id": 1840,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "34374:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1859,
														"src": "34366:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1839,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34366:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1844,
												"initialValue": {
													"arguments": [
														{
															"id": 1842,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "34396:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1841,
														"name": "_getPending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "34384:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34384:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34366:36:0"
											},
											{
												"assignments": [
													1846
												],
												"declarations": [
													{
														"constant": false,
														"id": 1846,
														"mutability": "mutable",
														"name": "_harvestFee",
														"nameLocation": "34421:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1859,
														"src": "34413:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1845,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34413:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1854,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34463:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1849,
																	"name": "harvestFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "34447:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1847,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1840,
																	"src": "34435:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 429,
																"src": "34435:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34435:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 444,
														"src": "34435:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34435:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34413:54:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1855,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "34485:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1856,
														"name": "_harvestFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "34495:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34485:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1838,
												"id": 1858,
												"nodeType": "Return",
												"src": "34478:28:0"
											}
										]
									},
									"functionSelector": "d086c254",
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPending",
									"nameLocation": "34299:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "34318:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "34310:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34309:15:0"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "34346:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34345:9:0"
									},
									"scope": 2056,
									"src": "34290:224:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "34593:486:0",
										"statements": [
											{
												"assignments": [
													1869
												],
												"declarations": [
													{
														"constant": false,
														"id": 1869,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "34621:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1933,
														"src": "34604:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
															"typeString": "struct NftStaking.UserInfo"
														},
														"typeName": {
															"id": 1868,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1867,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1095,
																"src": "34604:8:0"
															},
															"referencedDeclaration": 1095,
															"src": "34604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1873,
												"initialValue": {
													"baseExpression": {
														"id": 1870,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "34628:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
															"typeString": "mapping(address => struct NftStaking.UserInfo storage ref)"
														}
													},
													"id": 1872,
													"indexExpression": {
														"id": 1871,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "34637:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34628:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1095_storage",
														"typeString": "struct NftStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34604:39:0"
											},
											{
												"assignments": [
													1875
												],
												"declarations": [
													{
														"constant": false,
														"id": 1875,
														"mutability": "mutable",
														"name": "acc",
														"nameLocation": "34662:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1933,
														"src": "34654:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1874,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34654:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1877,
												"initialValue": {
													"id": 1876,
													"name": "accGHSPPerShare",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1105,
													"src": "34668:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34654:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1878,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "34698:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "34698:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1880,
															"name": "lastRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "34713:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "34698:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1882,
															"name": "totalStakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "34732:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34753:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "34732:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "34698:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1915,
												"nodeType": "IfStatement",
												"src": "34694:285:0",
												"trueBody": {
													"id": 1914,
													"nodeType": "Block",
													"src": "34756:223:0",
													"statements": [
														{
															"assignments": [
																1887
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1887,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "34779:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1914,
																	"src": "34771:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1886,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "34771:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1893,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1889,
																		"name": "lastRewardBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "34806:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1890,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "34823:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "34823:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1888,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "34792:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34792:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "34771:65:0"
														},
														{
															"assignments": [
																1895
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1895,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "34859:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1914,
																	"src": "34851:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1894,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "34851:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1900,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1898,
																		"name": "rewardPerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "34883:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1896,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1887,
																		"src": "34868:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "34868:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34868:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "34851:47:0"
														},
														{
															"expression": {
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1901,
																	"name": "acc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "34913:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1909,
																					"name": "totalStakedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "34948:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1906,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "34938:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1904,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1895,
																							"src": "34927:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1905,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 429,
																						"src": "34927:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1907,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34927:16:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 444,
																				"src": "34927:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34927:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1902,
																			"name": "acc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1875,
																			"src": "34919:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 399,
																		"src": "34919:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34919:48:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34913:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1913,
															"nodeType": "ExpressionStatement",
															"src": "34913:54:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1929,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1869,
																"src": "35052:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																	"typeString": "struct NftStaking.UserInfo storage pointer"
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "pendingAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1092,
															"src": "35052:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1925,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1869,
																		"src": "35031:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																			"typeString": "struct NftStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "35031:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653132",
																			"id": 1922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35021:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1919,
																					"name": "acc",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1875,
																					"src": "35012:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1916,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1869,
																						"src": "34996:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																							"typeString": "struct NftStaking.UserInfo storage pointer"
																						}
																					},
																					"id": 1917,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1088,
																					"src": "34996:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 429,
																				"src": "34996:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34996:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 444,
																		"src": "34996:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34996:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 414,
																"src": "34996:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34996:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 399,
														"src": "34996:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34996:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1866,
												"id": 1932,
												"nodeType": "Return",
												"src": "34989:82:0"
											}
										]
									},
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPending",
									"nameLocation": "34535:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "34555:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "34547:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34546:15:0"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "34584:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34583:9:0"
									},
									"scope": 2056,
									"src": "34526:553:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2054,
										"nodeType": "Block",
										"src": "35115:809:0",
										"statements": [
											{
												"assignments": [
													1938
												],
												"declarations": [
													{
														"constant": false,
														"id": 1938,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "35134:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 2054,
														"src": "35126:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1943,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1940,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35161:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35161:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1939,
														"name": "_getPending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "35149:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35149:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35126:46:0"
											},
											{
												"assignments": [
													1946
												],
												"declarations": [
													{
														"constant": false,
														"id": 1946,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "35200:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2054,
														"src": "35183:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
															"typeString": "struct NftStaking.UserInfo"
														},
														"typeName": {
															"id": 1945,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1944,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1095,
																"src": "35183:8:0"
															},
															"referencedDeclaration": 1095,
															"src": "35183:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1951,
												"initialValue": {
													"baseExpression": {
														"id": 1947,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "35207:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1095_storage_$",
															"typeString": "mapping(address => struct NftStaking.UserInfo storage ref)"
														}
													},
													"id": 1950,
													"indexExpression": {
														"expression": {
															"id": 1948,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "35216:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "35216:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35207:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1095_storage",
														"typeString": "struct NftStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35183:44:0"
											},
											{
												"assignments": [
													1953
												],
												"declarations": [
													{
														"constant": false,
														"id": 1953,
														"mutability": "mutable",
														"name": "_harvestFee",
														"nameLocation": "35246:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 2054,
														"src": "35238:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1952,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35238:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1961,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35293:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1956,
																	"name": "harvestFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "35277:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1954,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "35260:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 429,
																"src": "35260:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35260:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 444,
														"src": "35260:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35260:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35238:59:0"
											},
											{
												"assignments": [
													1963
												],
												"declarations": [
													{
														"constant": false,
														"id": 1963,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "35316:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2054,
														"src": "35308:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1962,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35308:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1967,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1964,
														"name": "rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "35325:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1965,
														"name": "_harvestFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1953,
														"src": "35340:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35325:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35308:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1972,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "35394:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NftStaking_$2056",
																			"typeString": "contract NftStaking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NftStaking_$2056",
																			"typeString": "contract NftStaking"
																		}
																	],
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35386:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1970,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35386:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35386:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1968,
																"name": "ghspToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "35366:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$100",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 39,
															"src": "35366:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35366:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1975,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "35403:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35366:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1988,
												"nodeType": "IfStatement",
												"src": "35362:119:0",
												"trueBody": {
													"id": 1987,
													"nodeType": "Block",
													"src": "35411:70:0",
													"statements": [
														{
															"expression": {
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1977,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "35426:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1982,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "35463:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_NftStaking_$2056",
																						"typeString": "contract NftStaking"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_NftStaking_$2056",
																						"typeString": "contract NftStaking"
																					}
																				],
																				"id": 1981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "35455:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1980,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "35455:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35455:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1978,
																			"name": "ghspToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "35435:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 39,
																		"src": "35435:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35435:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35426:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1986,
															"nodeType": "ExpressionStatement",
															"src": "35426:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1992,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35514:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35514:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1994,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "35526:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1989,
															"name": "ghspToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "35491:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "35491:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$100_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35491:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "35491:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2001,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "35578:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NftStaking_$2056",
																			"typeString": "contract NftStaking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NftStaking_$2056",
																			"typeString": "contract NftStaking"
																		}
																	],
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35570:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1999,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35570:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35570:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1997,
																"name": "ghspToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "35550:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$100",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 39,
															"src": "35550:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35550:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2004,
														"name": "_harvestFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1953,
														"src": "35587:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35550:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2017,
												"nodeType": "IfStatement",
												"src": "35546:129:0",
												"trueBody": {
													"id": 2016,
													"nodeType": "Block",
													"src": "35600:75:0",
													"statements": [
														{
															"expression": {
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2006,
																	"name": "_harvestFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "35615:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2011,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "35657:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_NftStaking_$2056",
																						"typeString": "contract NftStaking"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_NftStaking_$2056",
																						"typeString": "contract NftStaking"
																					}
																				],
																				"id": 2010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "35649:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2009,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "35649:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35649:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 2007,
																			"name": "ghspToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "35629:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 39,
																		"src": "35629:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35629:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35615:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2015,
															"nodeType": "ExpressionStatement",
															"src": "35615:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2021,
															"name": "feeWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "35708:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2022,
															"name": "_harvestFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "35719:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2018,
															"name": "ghspToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "35685:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "35685:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$100_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35685:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2024,
												"nodeType": "ExpressionStatement",
												"src": "35685:46:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2025,
														"name": "updateStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "35742:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35742:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2027,
												"nodeType": "ExpressionStatement",
												"src": "35742:14:0"
											},
											{
												"expression": {
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2028,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "35767:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 2030,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "pendingAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1092,
														"src": "35767:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35788:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35767:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2033,
												"nodeType": "ExpressionStatement",
												"src": "35767:22:0"
											},
											{
												"expression": {
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2034,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "35800:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																"typeString": "struct NftStaking.UserInfo storage pointer"
															}
														},
														"id": 2036,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1090,
														"src": "35800:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35855:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2040,
																		"name": "accGHSPPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "35834:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2037,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1946,
																			"src": "35818:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1095_storage_ptr",
																				"typeString": "struct NftStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1088,
																		"src": "35818:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "35818:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35818:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 444,
															"src": "35818:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35818:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35800:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2046,
												"nodeType": "ExpressionStatement",
												"src": "35800:60:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2048,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35884:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35884:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2050,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "35896:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2051,
															"name": "_harvestFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "35904:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2047,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "35876:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35876:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2053,
												"nodeType": "EmitStatement",
												"src": "35871:45:0"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 2055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "35096:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35103:2:0"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35115:0:0"
									},
									"scope": 2056,
									"src": "35087:837:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2057,
							"src": "27968:7959:0",
							"usedErrors": []
						}
					],
					"src": "42:35885:0"
				},
				"id": 0
			}
		}
	}
}